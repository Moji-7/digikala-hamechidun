{
    "sourceFile": "components/comments.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1707122920735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707122929055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n-import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { Card, ListItem, Divider, useTheme, Button ,View} from '@rneui/themed';\r\n const Comments: React.FC = () => {\r\n   return (\r\n     <View>\r\n       <Text>Settings Screen</Text>\r\n"
                },
                {
                    "date": 1707122939111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n-import { Card, ListItem, Divider, useTheme, Button ,View} from '@rneui/themed';\r\n+import { View, Text, StyleSheet, Linking } from 'react-native';\r\n+import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n const Comments: React.FC = () => {\r\n   return (\r\n     <View>\r\n       <Text>Settings Screen</Text>\r\n"
                },
                {
                    "date": 1707125439326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,68 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-const Comments: React.FC = () => {\r\n-  return (\r\n-    <View>\r\n-      <Text>Settings Screen</Text>\r\n-    </View>\r\n-  );\r\n-};\r\n+// Define types for the API response\r\n+type ApiResponse = [\r\n+    {\r\n+      id: number;\r\n+      product_id: number;\r\n+      data: {\r\n+        \"Likes Grouped\": {\r\n+          Sum: {\r\n+            \"Zero Likes\": number;\r\n+            \"Non-Zero Likes\": number;\r\n+          };\r\n+          Count: {\r\n+            \"Zero Likes\": number;\r\n+            \"Non-Zero Likes\": number;\r\n+          };\r\n+        };\r\n+        average_rating: string;\r\n+        \"Max Likes in the Dataset\": string;\r\n+        \"Total Number of Likes in the Dataset\": string;\r\n+      };\r\n+      created_at: string;\r\n+    },\r\n+    number\r\n+  ];\r\n+const Comments:  React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n \r\n+    const [result, extra] = apiData;\r\n+\r\n+    return (\r\n+      <View>\r\n+        <Card>\r\n+          <Text>ID: {result.id}</Text>\r\n+          <Text>Product ID: {result.product_id}</Text>\r\n+          <Text>Created At: {result.created_at}</Text>\r\n+          <View>\r\n+            <Text>Likes Grouped:</Text>\r\n+            <ListItem>\r\n+              <Text>Sum:</Text>\r\n+              <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n+              <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n+            </ListItem>\r\n+            <ListItem>\r\n+              <Text>Count:</Text>\r\n+              <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n+              <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n+            </ListItem>\r\n+            <Text>Average Rating: {result.data.average_rating}</Text>\r\n+            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n+            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n+          </View>\r\n+        </Card>\r\n+        <View>\r\n+          <Text>Extra Information: {extra}</Text>\r\n+        </View>\r\n+      </View>\r\n+    );\r\n+  };\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n export default Comments;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707125466038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,5 @@\n   };\r\n   \r\n \r\n \r\n-\r\n-\r\n-\r\n export default Comments;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707125764185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,73 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+\r\n+\r\n+const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n type ApiResponse = [\r\n     {\r\n-      id: number;\r\n-      product_id: number;\r\n-      data: {\r\n-        \"Likes Grouped\": {\r\n-          Sum: {\r\n-            \"Zero Likes\": number;\r\n-            \"Non-Zero Likes\": number;\r\n-          };\r\n-          Count: {\r\n-            \"Zero Likes\": number;\r\n-            \"Non-Zero Likes\": number;\r\n-          };\r\n+        id: number;\r\n+        product_id: number;\r\n+        data: {\r\n+            \"Likes Grouped\": {\r\n+                Sum: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+                Count: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+            };\r\n+            average_rating: string;\r\n+            \"Max Likes in the Dataset\": string;\r\n+            \"Total Number of Likes in the Dataset\": string;\r\n         };\r\n-        average_rating: string;\r\n-        \"Max Likes in the Dataset\": string;\r\n-        \"Total Number of Likes in the Dataset\": string;\r\n-      };\r\n-      created_at: string;\r\n+        created_at: string;\r\n     },\r\n     number\r\n-  ];\r\n-const Comments:  React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n+];\r\n+const Comments: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n \r\n     const [result, extra] = apiData;\r\n \r\n     return (\r\n-      <View>\r\n-        <Card>\r\n-          <Text>ID: {result.id}</Text>\r\n-          <Text>Product ID: {result.product_id}</Text>\r\n-          <Text>Created At: {result.created_at}</Text>\r\n-          <View>\r\n-            <Text>Likes Grouped:</Text>\r\n-            <ListItem>\r\n-              <Text>Sum:</Text>\r\n-              <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n-              <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n-            </ListItem>\r\n-            <ListItem>\r\n-              <Text>Count:</Text>\r\n-              <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n-              <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n-            </ListItem>\r\n-            <Text>Average Rating: {result.data.average_rating}</Text>\r\n-            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n-            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n-          </View>\r\n-        </Card>\r\n         <View>\r\n-          <Text>Extra Information: {extra}</Text>\r\n+            <Card>\r\n+                {data.map((item, index) => (\r\n+                    <>\r\n+                        <Text>ID: {item.id}</Text>\r\n+                        {/* <Text>Product ID: {result.product_id}</Text>\r\n+                        <Text>Created At: {result.created_at}</Text>\r\n+                        <View>\r\n+                            <Text>Likes Grouped:</Text>\r\n+                            <ListItem>\r\n+                                <Text>Sum:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <ListItem>\r\n+                                <Text>Count:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n+                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n+                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n+                        </View> */}\r\n+                    </>\r\n+                ))}\r\n+            </Card>\r\n+            <View>\r\n+                <Text>Extra Information: {extra}</Text>\r\n+            </View>\r\n         </View>\r\n-      </View>\r\n     );\r\n-  };\r\n-  \r\n+};\r\n \r\n \r\n+\r\n export default Comments;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707125871313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,18 +29,18 @@\n         created_at: string;\r\n     },\r\n     number\r\n ];\r\n-const Comments: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n+const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n \r\n     const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n                 {data.map((item, index) => (\r\n                     <>\r\n-                        <Text>ID: {item.id}</Text>\r\n+                        <Text>ID: {item[0].id}</Text>\r\n                         {/* <Text>Product ID: {result.product_id}</Text>\r\n                         <Text>Created At: {result.created_at}</Text>\r\n                         <View>\r\n                             <Text>Likes Grouped:</Text>\r\n"
                },
                {
                    "date": 1707125891529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     number\r\n ];\r\n const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n \r\n-    const [result, extra] = apiData;\r\n+    //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n"
                },
                {
                    "date": 1707125900151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,11 @@\n                         </View> */}\r\n                     </>\r\n                 ))}\r\n             </Card>\r\n-            <View>\r\n+            {/* <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n-            </View>\r\n+            </View> */}\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1707125961030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,31 +36,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data.map((item, index) => (\r\n-                    <>\r\n-                        <Text>ID: {item[0].id}</Text>\r\n-                        {/* <Text>Product ID: {result.product_id}</Text>\r\n-                        <Text>Created At: {result.created_at}</Text>\r\n-                        <View>\r\n-                            <Text>Likes Grouped:</Text>\r\n-                            <ListItem>\r\n-                                <Text>Sum:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <ListItem>\r\n-                                <Text>Count:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n-                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n-                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n-                        </View> */}\r\n-                    </>\r\n-                ))}\r\n+              salam\r\n             </Card>\r\n             {/* <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n             </View> */}\r\n"
                },
                {
                    "date": 1707126010239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n-const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n type ApiResponse = [\r\n     {\r\n         id: number;\r\n"
                },
                {
                    "date": 1707126072928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n"
                },
                {
                    "date": 1707126154236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n         created_at: string;\r\n     },\r\n     number\r\n ];\r\n-const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-\r\n+//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n+    const Comments = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707126166315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,31 +6,9 @@\n \r\n \r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n-type ApiResponse = [\r\n-    {\r\n-        id: number;\r\n-        product_id: number;\r\n-        data: {\r\n-            \"Likes Grouped\": {\r\n-                Sum: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-                Count: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-            };\r\n-            average_rating: string;\r\n-            \"Max Likes in the Dataset\": string;\r\n-            \"Total Number of Likes in the Dataset\": string;\r\n-        };\r\n-        created_at: string;\r\n-    },\r\n-    number\r\n-];\r\n+\r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n     const Comments = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n"
                },
                {
                    "date": 1707126198374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Comments = () => {\r\n+    const Commentss = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n@@ -25,5 +25,5 @@\n };\r\n \r\n \r\n \r\n-export default Comments;\n\\ No newline at end of file\n+export default Commentss;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707126286474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Commentss = () => {\r\n+    const Comments = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n@@ -25,5 +25,5 @@\n };\r\n \r\n \r\n \r\n-export default Commentss;\n\\ No newline at end of file\n+export default Comments;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707126405729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,70 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n-//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n+type ApiResponse = [\r\n+    {\r\n+        id: number;\r\n+        product_id: number;\r\n+        data: {\r\n+            \"Likes Grouped\": {\r\n+                Sum: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+                Count: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+            };\r\n+            average_rating: string;\r\n+            \"Max Likes in the Dataset\": string;\r\n+            \"Total Number of Likes in the Dataset\": string;\r\n+        };\r\n+        created_at: string;\r\n+    },\r\n+    number\r\n+];\r\n+const Comments: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n \r\n-//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Comments = () => {\r\n-    //const [result, extra] = apiData;\r\n+    const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-              salam\r\n+                {data.map((item, index) => (\r\n+                    <>\r\n+                        <Text>ID: {item.id}</Text>\r\n+                        {/* <Text>Product ID: {result.product_id}</Text>\r\n+                        <Text>Created At: {result.created_at}</Text>\r\n+                        <View>\r\n+                            <Text>Likes Grouped:</Text>\r\n+                            <ListItem>\r\n+                                <Text>Sum:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <ListItem>\r\n+                                <Text>Count:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n+                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n+                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n+                        </View> */}\r\n+                    </>\r\n+                ))}\r\n             </Card>\r\n-            {/* <View>\r\n+            <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n-            </View> */}\r\n+            </View>\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1707126652966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n-const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+\r\n // Define types for the API response\r\n type ApiResponse = [\r\n     {\r\n         id: number;\r\n@@ -30,9 +30,9 @@\n     },\r\n     number\r\n ];\r\n const Comments: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n-\r\n+//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n     const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n"
                }
            ],
            "date": 1707122920735,
            "name": "Commit-0",
            "content": "// components/SettingsScreen.tsx\r\nimport React from 'react';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\nconst Comments: React.FC = () => {\r\n  return (\r\n    <View>\r\n      <Text>Settings Screen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Comments;"
        }
    ]
}