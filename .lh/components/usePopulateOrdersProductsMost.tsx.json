{
    "sourceFile": "components/usePopulateOrdersProductsMost.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1704287497893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704287555267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,29 @@\n-usePopulateOrdersProductsMost\n\\ No newline at end of file\n+usePopulateOrdersProductsMost\r\n+\r\n+\r\n+import { useQuery } from '@tanstack/react-query';\r\n+\r\n+function usePopulateOrdersSummary() {\r\n+    const { data, error, isLoading, isError } = useQuery({\r\n+        queryKey: ['populateOrdersSummary'], // The query key\r\n+        queryFn: async () => { // The query function with the async keyword\r\n+            try {\r\n+                const response = await fetch(\"http://localhost:3222/hamechidun/populate_orders_summary\");\r\n+                if (!response.ok) {\r\n+                    throw { status: response.status, message: response.statusText };\r\n+                }\r\n+                const data = await response.json();\r\n+                return data;\r\n+            } catch (error) {\r\n+                // Throw the error object\r\n+                throw error;\r\n+            }\r\n+        },\r\n+        // Optionally, use the enabled option to control when to fetch the data\r\n+        // enabled: queryKey !== null && queryKey !== undefined,\r\n+        // Optionally, use the staleTime option to specify how long the data will be considered fresh\r\n+        // staleTime: 1000 * 60 * 5, // 5 minutes\r\n+    });\r\n+    return { data, error, isLoading, isError };\r\n+}\r\n+export default usePopulateOrdersSummary;\r\n"
                },
                {
                    "date": 1704287571419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-usePopulateOrdersProductsMost\r\n \r\n \r\n+\r\n import { useQuery } from '@tanstack/react-query';\r\n \r\n-function usePopulateOrdersSummary() {\r\n+function usePopulateOrdersProductsMost() {\r\n     const { data, error, isLoading, isError } = useQuery({\r\n         queryKey: ['populateOrdersSummary'], // The query key\r\n         queryFn: async () => { // The query function with the async keyword\r\n             try {\r\n@@ -25,5 +25,5 @@\n         // staleTime: 1000 * 60 * 5, // 5 minutes\r\n     });\r\n     return { data, error, isLoading, isError };\r\n }\r\n-export default usePopulateOrdersSummary;\r\n+export default usePopulateOrdersProductsMost;\r\n"
                },
                {
                    "date": 1704287628168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     const { data, error, isLoading, isError } = useQuery({\r\n         queryKey: ['populateOrdersSummary'], // The query key\r\n         queryFn: async () => { // The query function with the async keyword\r\n             try {\r\n-                const response = await fetch(\"http://localhost:3222/hamechidun/populate_orders_summary\");\r\n+                const response = await fetch(\"http://localhost:3222/hamechidun/populate_orders_products_most\");\r\n                 if (!response.ok) {\r\n                     throw { status: response.status, message: response.statusText };\r\n                 }\r\n                 const data = await response.json();\r\n"
                },
                {
                    "date": 1704287639493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { useQuery } from '@tanstack/react-query';\r\n \r\n function usePopulateOrdersProductsMost() {\r\n     const { data, error, isLoading, isError } = useQuery({\r\n-        queryKey: ['populateOrdersSummary'], // The query key\r\n+        queryKey: ['populateOrdersProductsMost'], // The query key\r\n         queryFn: async () => { // The query function with the async keyword\r\n             try {\r\n                 const response = await fetch(\"http://localhost:3222/hamechidun/populate_orders_products_most\");\r\n                 if (!response.ok) {\r\n"
                }
            ],
            "date": 1704287497893,
            "name": "Commit-0",
            "content": "usePopulateOrdersProductsMost"
        }
    ]
}