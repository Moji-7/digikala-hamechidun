{
    "sourceFile": "components/uicomponents/CategoryTitles.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1704950258699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704951901411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \r\n \r\n import React from 'react';\r\n \r\n-const CategoryTitles = ({ items }) => {\r\n+const CategoryTitles = ({ parent }) => {\r\n   return (\r\n     <div>\r\n       <h2>Items</h2>\r\n       <ul>\r\n"
                },
                {
                    "date": 1704951911316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n \r\n \r\n import React from 'react';\r\n-\r\n+const categoryTitles = [\r\n+    { id: 1, name: 'Item 1' },\r\n+    { id: 2, name: 'Item 2' },\r\n+    { id: 3, name: 'Item 3' }\r\n+  ];\r\n const CategoryTitles = ({ parent }) => {\r\n   return (\r\n     <div>\r\n       <h2>Items</h2>\r\n"
                },
                {
                    "date": 1704951934028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \r\n \r\n import React from 'react';\r\n-const categoryTitles = [\r\n+const items = [\r\n     { id: 1, name: 'Item 1' },\r\n     { id: 2, name: 'Item 2' },\r\n     { id: 3, name: 'Item 3' }\r\n   ];\r\n"
                },
                {
                    "date": 1704951957836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   ];\r\n const CategoryTitles = ({ parent }) => {\r\n   return (\r\n     <div>\r\n-      <h2>Items</h2>\r\n+      <h2>Items {parent}</h2>\r\n       <ul>\r\n         {items.map((item, index) => (\r\n           <li key={index}>{item.name}</li>\r\n         ))}\r\n"
                },
                {
                    "date": 1704953822598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,19 @@\n \r\n \r\n import React from 'react';\r\n-const items = [\r\n-    { id: 1, name: 'Item 1' },\r\n-    { id: 2, name: 'Item 2' },\r\n-    { id: 3, name: 'Item 3' }\r\n-  ];\r\n-const CategoryTitles = ({ parent }) => {\r\n+interface CategoryTitlesProps {\r\n+    categoryType: string\r\n+    categoryGrouped: CategoryGrouped;\r\n+    index: number;\r\n+  }\r\n+const CategoryTitles = ({ childs }) => {\r\n+const CategoryTitles: React.FC<ListItemComponentProps> = ({ categoryType, categoryGrouped, index }) => {\r\n   return (\r\n     <div>\r\n       <h2>Items {parent}</h2>\r\n       <ul>\r\n-        {items.map((item, index) => (\r\n+        {childs.map((item, index) => (\r\n           <li key={index}>{item.name}</li>\r\n         ))}\r\n       </ul>\r\n     </div>\r\n"
                },
                {
                    "date": 1704953958561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,20 @@\n \r\n \r\n import React from 'react';\r\n+import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n interface CategoryTitlesProps {\r\n-    categoryType: string\r\n-    categoryGrouped: CategoryGrouped;\r\n-    index: number;\r\n+    categoryTitles: ICategoryTitles[];\r\n   }\r\n const CategoryTitles = ({ childs }) => {\r\n-const CategoryTitles: React.FC<ListItemComponentProps> = ({ categoryType, categoryGrouped, index }) => {\r\n+const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n   return (\r\n     <div>\r\n-      <h2>Items {parent}</h2>\r\n+      <h2>Items {categoryTitles.parent}</h2>\r\n       <ul>\r\n-        {childs.map((item, index) => (\r\n-          <li key={index}>{item.name}</li>\r\n+        {categoryTitles.map((item, index) => (\r\n+          <li key={index}>{item.title}</li>\r\n+          <li key={index}>{item.total_price}</li>\r\n         ))}\r\n       </ul>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1704953967472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n       <h2>Items {categoryTitles.parent}</h2>\r\n       <ul>\r\n         {categoryTitles.map((item, index) => (\r\n           <li key={index}>{item.title}</li>\r\n-          <li key={index}>{item.total_price}</li>\r\n         ))}\r\n       </ul>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1704954011747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,20 +3,22 @@\n import React from 'react';\r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n-  }\r\n+}\r\n const CategoryTitles = ({ childs }) => {\r\n-const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n-  return (\r\n-    <div>\r\n-      <h2>Items {categoryTitles.parent}</h2>\r\n-      <ul>\r\n-        {categoryTitles.map((item, index) => (\r\n-          <li key={index}>{item.title}</li>\r\n-        ))}\r\n-      </ul>\r\n-    </div>\r\n-  );\r\n-};\r\n+    const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n+        return (\r\n+            <div>\r\n+                <h2>Items {categoryTitles.parent}</h2>\r\n+                {categoryTitles && (\r\n+                    <ul>\r\n+                        {categoryTitles.map((item, index) => (\r\n+                            <li key={index}>{item.title}</li>\r\n+                        ))}\r\n+                    </ul>\r\n+                )}\r\n+            </div>\r\n+        );\r\n+    };\r\n \r\n-export default CategoryTitles;\r\n+    export default CategoryTitles;\r\n"
                },
                {
                    "date": 1704954019515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n const CategoryTitles = ({ childs }) => {\r\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n         return (\r\n             <div>\r\n-                <h2>Items {categoryTitles.parent}</h2>\r\n+                {/* <h2>Items {categoryTitles.parent}</h2> */}\r\n                 {categoryTitles && (\r\n                     <ul>\r\n                         {categoryTitles.map((item, index) => (\r\n                             <li key={index}>{item.title}</li>\r\n"
                },
                {
                    "date": 1704955736602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n }\r\n-const CategoryTitles = ({ childs }) => {\r\n+\r\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n         return (\r\n             <div>\r\n                 {/* <h2>Items {categoryTitles.parent}</h2> */}\r\n"
                },
                {
                    "date": 1704956315041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,46 @@\n \r\n \r\n import React from 'react';\r\n-import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n-interface CategoryTitlesProps {\r\n-    categoryTitles: ICategoryTitles[];\r\n-}\r\n \r\n+    import React from 'react';\r\n+    import { View, Text, StyleSheet } from 'react-native';\r\n+    import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+   \r\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n-        return (\r\n-            <div>\r\n-                {/* <h2>Items {categoryTitles.parent}</h2> */}\r\n-                {categoryTitles && (\r\n-                    <ul>\r\n-                        {categoryTitles.map((item, index) => (\r\n-                            <li key={index}>{item.title}</li>\r\n-                        ))}\r\n-                    </ul>\r\n-                )}\r\n-            </div>\r\n-        );\r\n+      const theme = useTheme();\r\n+    \r\n+      return (\r\n+        <View>\r\n+          <Text style={styles.title}>Items {categoryTitles.parent}</Text>\r\n+          {categoryTitles && (\r\n+            <Card>\r\n+              {categoryTitles.map((item, index) => (\r\n+                <View key={index}>\r\n+                  <ListItem>\r\n+                    <Text>{item.title}</Text>\r\n+                    <Button onPress={() => handleButtonClick(item.title)}>Click me</Button>\r\n+                  </ListItem>\r\n+                  <Divider />\r\n+                  <ListItem>\r\n+                    <Text>Count: {item.count}</Text>\r\n+                  </ListItem>\r\n+                  <ListItem>\r\n+                    <Text>Total Price: {item.total_price}</Text>\r\n+                  </ListItem>\r\n+                </View>\r\n+              ))}\r\n+            </Card>\r\n+          )}\r\n+        </View>\r\n+      );\r\n     };\r\n-\r\n+    \r\n+    const styles = StyleSheet.create({\r\n+      title: {\r\n+        fontSize: 24,\r\n+        fontWeight: 'bold',\r\n+      },\r\n+    });\r\n+    \r\n     export default CategoryTitles;\r\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1704956503331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,23 @@\n \r\n-\r\n-import React from 'react';\r\n-\r\n-    import React from 'react';\r\n+   import React, { useState } from 'react';\r\n     import { View, Text, StyleSheet } from 'react-native';\r\n     import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n    \r\n+\r\n+import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n+\r\n+interface CategoryTitlesProps {\r\n+    categoryTitles: ICategoryTitles[];\r\n+  }\r\n+  const [selectedTitle, setSelectedTitle] = useState('');\r\n+ \r\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n       const theme = useTheme();\r\n     \r\n       return (\r\n         <View>\r\n-          <Text style={styles.title}>Items {categoryTitles.parent}</Text>\r\n+          {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n"
                },
                {
                    "date": 1704956545743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \r\n-   import React, { useState } from 'react';\r\n+   import React, { useEffect, useState } from 'react';\r\n     import { View, Text, StyleSheet } from 'react-native';\r\n     import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n    \r\n \r\n@@ -9,8 +9,15 @@\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n   }\r\n   const [selectedTitle, setSelectedTitle] = useState('');\r\n+  useEffect(() => {\r\n+    if (selectedTitle) {\r\n+    }, [selectedTitle]);\r\n+\r\n+    const handleTitleClick = (title: string) => {\r\n+      setSelectedTitle(title);\r\n+    };\r\n  \r\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n       const theme = useTheme();\r\n     \r\n@@ -22,9 +29,9 @@\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n                     <Text>{item.title}</Text>\r\n-                    <Button onPress={() => handleButtonClick(item.title)}>Click me</Button>\r\n+                    <Button onPress={() => handleTitleClick(item.title)}>Click me</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704956635637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,29 @@\n \r\n    import React, { useEffect, useState } from 'react';\r\n     import { View, Text, StyleSheet } from 'react-native';\r\n     import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-   \r\n+    import { useNavigation } from \"@react-navigation/native\";\r\n \r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n \r\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n   }\r\n-  const [selectedTitle, setSelectedTitle] = useState('');\r\n+\r\n+ \r\n+    const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n+\r\n+      const theme = useTheme();\r\n+      const navigation = useNavigation();\r\n+      const [selectedTitle, setSelectedTitle] = useState('');\r\n   useEffect(() => {\r\n-    if (selectedTitle) {\r\n-    }, [selectedTitle]);\r\n+    navigation.navigate('orderitem', searchParamsInstance);\r\n+  }, [searchParamsInstance]);\r\n \r\n     const handleTitleClick = (title: string) => {\r\n       setSelectedTitle(title);\r\n     };\r\n- \r\n-    const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n-      const theme = useTheme();\r\n-    \r\n       return (\r\n         <View>\r\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n"
                },
                {
                    "date": 1704956779552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n     import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n     import { useNavigation } from \"@react-navigation/native\";\r\n \r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n+import { SearchParamsOrderItem, createSearchParamsOrderItem } from '../entity/SearchQueries';\r\n \r\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n   }\r\n@@ -14,16 +15,46 @@\n     const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n \r\n       const theme = useTheme();\r\n       const navigation = useNavigation();\r\n-      const [selectedTitle, setSelectedTitle] = useState('');\r\n-  useEffect(() => {\r\n-    navigation.navigate('orderitem', searchParamsInstance);\r\n-  }, [searchParamsInstance]);\r\n \r\n-    const handleTitleClick = (title: string) => {\r\n-      setSelectedTitle(title);\r\n-    };\r\n+      // Define a generic type that represents the property name and value\r\n+      type UpdateParams = {\r\n+        prop: keyof SearchParamsOrderItem;\r\n+        value: SearchParamsOrderItem[keyof SearchParamsOrderItem];\r\n+      };\r\n+    \r\n+      const [searchParamsInstance, setSearchParamsInstance] = useState(\r\n+        createSearchParamsOrderItem({\r\n+          categoryType: categoryType,\r\n+          allOrderItems: true,\r\n+        })\r\n+      );\r\n+    //   useEffect(() => {\r\n+    //     // Check if the categoryType prop is not null or undefined\r\n+    //     if (categoryType != null) {\r\n+    //       // Set the searchParamsInstance[categoryType] property to the categoryGrouped.title value\r\n+    //       setSearchParamsInstance((prevState) => ({\r\n+    //         ...prevState,\r\n+    //         [categoryType]: categoryGrouped.title,\r\n+    //       }));\r\n+    //     }\r\n+    //   }, [categoryType]);\r\n+    \r\n+      // Define a function that handles the click event on both buttons\r\n+      const handleClick = (updateParams: UpdateParams) => {\r\n+        // Update the searchParamsInstance state variable with the property name and value\r\n+        setSearchParamsInstance((prevState) => ({\r\n+          ...prevState,\r\n+          [updateParams.prop]: updateParams.value,\r\n+        }));\r\n+    \r\n+      };\r\n+      // when the searchParamsInstance state changes\r\n+      useEffect(() => {\r\n+        navigation.navigate('orderitem', searchParamsInstance);\r\n+      }, [searchParamsInstance]); // Pass the searchParamsInstance state as a dependency\r\n+    \r\n       return (\r\n         <View>\r\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n@@ -31,9 +62,9 @@\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n                     <Text>{item.title}</Text>\r\n-                    <Button onPress={() => handleTitleClick(item.title)}>Click me</Button>\r\n+                    <Button onPress={() => handleClick(item.title)}>Click me</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704956911748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n       };\r\n     \r\n       const [searchParamsInstance, setSearchParamsInstance] = useState(\r\n         createSearchParamsOrderItem({\r\n-          categoryType: categoryType,\r\n+          categoryType: \"item_category2\",//categoryType,\r\n           allOrderItems: true,\r\n         })\r\n       );\r\n     //   useEffect(() => {\r\n"
                },
                {
                    "date": 1704957151360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,10 @@\n       const handleClick = (updateParams: UpdateParams) => {\r\n         // Update the searchParamsInstance state variable with the property name and value\r\n         setSearchParamsInstance((prevState) => ({\r\n           ...prevState,\r\n-          [updateParams.prop]: updateParams.value,\r\n+          //[updateParams.prop]: updateParams.value,\r\n+          item_category3= updateParams.value,\r\n         }));\r\n     \r\n       };\r\n       // when the searchParamsInstance state changes\r\n@@ -62,9 +63,9 @@\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n                     <Text>{item.title}</Text>\r\n-                    <Button onPress={() => handleClick(item.title)}>Click me</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'selling_price', value: item.title })}>Click me</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704957162916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,9 @@\n       const handleClick = (updateParams: UpdateParams) => {\r\n         // Update the searchParamsInstance state variable with the property name and value\r\n         setSearchParamsInstance((prevState) => ({\r\n           ...prevState,\r\n-          //[updateParams.prop]: updateParams.value,\r\n-          item_category3= updateParams.value,\r\n+          [updateParams.prop]: updateParams.value,\r\n         }));\r\n     \r\n       };\r\n       // when the searchParamsInstance state changes\r\n@@ -63,9 +62,9 @@\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n                     <Text>{item.title}</Text>\r\n-                    <Button  onPress={() => handleClick({ prop: 'selling_price', value: item.title })}>Click me</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>Click me</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704957212878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,9 @@\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n-                    <Text>{item.title}</Text>\r\n-                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>Click me</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>item.title</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704957228677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n-                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>item.title</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title}</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704957252636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n-                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title}</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) ({item.total_price})</Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Count: {item.count}</Text>\r\n"
                },
                {
                    "date": 1704957489281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \r\n    import React, { useEffect, useState } from 'react';\r\n     import { View, Text, StyleSheet } from 'react-native';\r\n-    import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+    import { Card,List, ListItem, Divider, useTheme, Button ,} from '@rneui/themed';\r\n     import { useNavigation } from \"@react-navigation/native\";\r\n \r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n import { SearchParamsOrderItem, createSearchParamsOrderItem } from '../entity/SearchQueries';\r\n@@ -54,29 +54,26 @@\n         navigation.navigate('orderitem', searchParamsInstance);\r\n       }, [searchParamsInstance]); // Pass the searchParamsInstance state as a dependency\r\n     \r\n       return (\r\n-        <View>\r\n+        <List>\r\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n-                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) ({item.total_price})</Button>\r\n+                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) </Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n-                    <Text>Count: {item.count}</Text>\r\n-                  </ListItem>\r\n-                  <ListItem>\r\n                     <Text>Total Price: {item.total_price}</Text>\r\n                   </ListItem>\r\n                 </View>\r\n               ))}\r\n             </Card>\r\n           )}\r\n-        </View>\r\n+        </List>\r\n       );\r\n     };\r\n     \r\n     const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1704957544653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \r\n    import React, { useEffect, useState } from 'react';\r\n     import { View, Text, StyleSheet } from 'react-native';\r\n-    import { Card,List, ListItem, Divider, useTheme, Button ,} from '@rneui/themed';\r\n+    import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n     import { useNavigation } from \"@react-navigation/native\";\r\n \r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n import { SearchParamsOrderItem, createSearchParamsOrderItem } from '../entity/SearchQueries';\r\n@@ -54,9 +54,9 @@\n         navigation.navigate('orderitem', searchParamsInstance);\r\n       }, [searchParamsInstance]); // Pass the searchParamsInstance state as a dependency\r\n     \r\n       return (\r\n-        <List>\r\n+        <>\r\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n             <Card>\r\n               {categoryTitles.map((item, index) => (\r\n@@ -71,9 +71,9 @@\n                 </View>\r\n               ))}\r\n             </Card>\r\n           )}\r\n-        </List>\r\n+        </>\r\n       );\r\n     };\r\n     \r\n     const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1704957562877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n       return (\r\n         <>\r\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n-            <Card>\r\n+            <>\r\n               {categoryTitles.map((item, index) => (\r\n                 <View key={index}>\r\n                   <ListItem>\r\n                     <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) </Button>\r\n@@ -69,9 +69,9 @@\n                     <Text>Total Price: {item.total_price}</Text>\r\n                   </ListItem>\r\n                 </View>\r\n               ))}\r\n-            </Card>\r\n+            </>\r\n           )}\r\n         </>\r\n       );\r\n     };\r\n"
                },
                {
                    "date": 1704957612956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,17 @@\n           {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n           {categoryTitles && (\r\n             <>\r\n               {categoryTitles.map((item, index) => (\r\n-                <View key={index}>\r\n+                <ListItem key={index}>\r\n                   <ListItem>\r\n                     <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) </Button>\r\n                   </ListItem>\r\n                   <Divider />\r\n                   <ListItem>\r\n                     <Text>Total Price: {item.total_price}</Text>\r\n                   </ListItem>\r\n-                </View>\r\n+                </ListItem>\r\n               ))}\r\n             </>\r\n           )}\r\n         </>\r\n"
                },
                {
                    "date": 1704957676215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,35 @@\n \r\n-   import React, { useEffect, useState } from 'react';\r\n-    import { View, Text, StyleSheet } from 'react-native';\r\n-    import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-    import { useNavigation } from \"@react-navigation/native\";\r\n+import React, { useEffect, useState } from 'react';\r\n+import { View, Text, StyleSheet } from 'react-native';\r\n+import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n \r\n import { ICategoryTitles } from '../entity/OrdersProductsCategoriesInfo ';\r\n import { SearchParamsOrderItem, createSearchParamsOrderItem } from '../entity/SearchQueries';\r\n \r\n interface CategoryTitlesProps {\r\n     categoryTitles: ICategoryTitles[];\r\n-  }\r\n+}\r\n \r\n- \r\n-    const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n \r\n-      const theme = useTheme();\r\n-      const navigation = useNavigation();\r\n+const CategoryTitles: React.FC<CategoryTitlesProps> = ({ categoryTitles }) => {\r\n \r\n-      // Define a generic type that represents the property name and value\r\n-      type UpdateParams = {\r\n+    const theme = useTheme();\r\n+    const navigation = useNavigation();\r\n+\r\n+    // Define a generic type that represents the property name and value\r\n+    type UpdateParams = {\r\n         prop: keyof SearchParamsOrderItem;\r\n         value: SearchParamsOrderItem[keyof SearchParamsOrderItem];\r\n-      };\r\n-    \r\n-      const [searchParamsInstance, setSearchParamsInstance] = useState(\r\n+    };\r\n+\r\n+    const [searchParamsInstance, setSearchParamsInstance] = useState(\r\n         createSearchParamsOrderItem({\r\n-          categoryType: \"item_category2\",//categoryType,\r\n-          allOrderItems: true,\r\n+            categoryType: \"item_category2\",//categoryType,\r\n+            allOrderItems: true,\r\n         })\r\n-      );\r\n+    );\r\n     //   useEffect(() => {\r\n     //     // Check if the categoryType prop is not null or undefined\r\n     //     if (categoryType != null) {\r\n     //       // Set the searchParamsInstance[categoryType] property to the categoryGrouped.title value\r\n@@ -38,50 +38,53 @@\n     //         [categoryType]: categoryGrouped.title,\r\n     //       }));\r\n     //     }\r\n     //   }, [categoryType]);\r\n-    \r\n-      // Define a function that handles the click event on both buttons\r\n-      const handleClick = (updateParams: UpdateParams) => {\r\n+\r\n+    // Define a function that handles the click event on both buttons\r\n+    const handleClick = (updateParams: UpdateParams) => {\r\n         // Update the searchParamsInstance state variable with the property name and value\r\n         setSearchParamsInstance((prevState) => ({\r\n-          ...prevState,\r\n-          [updateParams.prop]: updateParams.value,\r\n+            ...prevState,\r\n+            [updateParams.prop]: updateParams.value,\r\n         }));\r\n-    \r\n-      };\r\n-      // when the searchParamsInstance state changes\r\n-      useEffect(() => {\r\n+\r\n+    };\r\n+    // when the searchParamsInstance state changes\r\n+    useEffect(() => {\r\n         navigation.navigate('orderitem', searchParamsInstance);\r\n-      }, [searchParamsInstance]); // Pass the searchParamsInstance state as a dependency\r\n-    \r\n-      return (\r\n+    }, [searchParamsInstance]); // Pass the searchParamsInstance state as a dependency\r\n+\r\n+    return (\r\n         <>\r\n-          {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n-          {categoryTitles && (\r\n-            <>\r\n-              {categoryTitles.map((item, index) => (\r\n-                <ListItem key={index}>\r\n-                  <ListItem>\r\n-                    <Button  onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) </Button>\r\n-                  </ListItem>\r\n-                  <Divider />\r\n-                  <ListItem>\r\n-                    <Text>Total Price: {item.total_price}</Text>\r\n-                  </ListItem>\r\n-                </ListItem>\r\n-              ))}\r\n-            </>\r\n-          )}\r\n+            {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n\\ No newline at end of file\n+            {categoryTitles && (\r\n+                <>\r\n+                    {categoryTitles.map((item, index) => (\r\n+                        <ListItem key={index}>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title >\r\n+                                    <Button onPress={() => handleClick({ prop: 'item_category3', value: item.title })}>{item.title} ({item.count}) </Button>\r\n+                                </ListItem.Title>\r\n+\r\n+                                <Divider />\r\n+                                <ListItem.Subtitle >\r\n+                                    <Text>Total Price: {item.total_price}</Text>\r\n+                                </ListItem.Subtitle>\r\n+\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                    ))}\r\n+                </>\r\n+            )}\r\n         </>\r\n-      );\r\n-    };\r\n-    \r\n-    const styles = StyleSheet.create({\r\n-      title: {\r\n+    );\r\n+};\r\n+\r\n+const styles = StyleSheet.create({\r\n+    title: {\r\n         fontSize: 24,\r\n         fontWeight: 'bold',\r\n-      },\r\n-    });\r\n-    \r\n-    export default CategoryTitles;\r\n-    \n+    },\r\n+});\r\n+\r\n+export default CategoryTitles;\r\n"
                },
                {
                    "date": 1704957720765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     return (\r\n         <>\r\n             {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n             {categoryTitles && (\r\n-                <>\r\n+                <card>\r\n                     {categoryTitles.map((item, index) => (\r\n                         <ListItem key={index}>\r\n                             <ListItem.Content>\r\n                                 <ListItem.Title >\r\n@@ -73,9 +73,9 @@\n \r\n                             </ListItem.Content>\r\n                         </ListItem>\r\n                     ))}\r\n-                </>\r\n+                </card>\r\n             )}\r\n         </>\r\n     );\r\n };\r\n@@ -86,5 +86,5 @@\n         fontWeight: 'bold',\r\n     },\r\n });\r\n \r\n-export default CategoryTitles;\n\\ No newline at end of file\n+export default CategoryTitles;\r\n"
                },
                {
                    "date": 1704959091415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     return (\r\n         <>\r\n             {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n             {categoryTitles && (\r\n-                <card>\r\n+                <Card>\r\n                     {categoryTitles.map((item, index) => (\r\n                         <ListItem key={index}>\r\n                             <ListItem.Content>\r\n                                 <ListItem.Title >\r\n@@ -73,9 +73,9 @@\n \r\n                             </ListItem.Content>\r\n                         </ListItem>\r\n                     ))}\r\n-                </card>\r\n+                </Card>\r\n             )}\r\n         </>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1704959713016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     return (\r\n         <>\r\n             {/* <Text style={styles.title}>Items {categoryTitles.parent}</Text> */}\r\n             {categoryTitles && (\r\n-                <Card>\r\n+                <>\r\n                     {categoryTitles.map((item, index) => (\r\n                         <ListItem key={index}>\r\n                             <ListItem.Content>\r\n                                 <ListItem.Title >\r\n@@ -73,9 +73,9 @@\n \r\n                             </ListItem.Content>\r\n                         </ListItem>\r\n                     ))}\r\n-                </Card>\r\n+                </>\r\n             )}\r\n         </>\r\n     );\r\n };\r\n"
                }
            ],
            "date": 1704950258699,
            "name": "Commit-0",
            "content": "\r\n\r\nimport React from 'react';\r\n\r\nconst CategoryTitles = ({ items }) => {\r\n  return (\r\n    <div>\r\n      <h2>Items</h2>\r\n      <ul>\r\n        {items.map((item, index) => (\r\n          <li key={index}>{item.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTitles;\r\n"
        }
    ]
}