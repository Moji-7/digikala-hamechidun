{
    "sourceFile": "components/uicomponents/CategoryChilds.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1705483272750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705483383383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     {/* <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                     onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                     /> */}\r\n-                                    {/* <CategoryButton categoryType={item.name} categoryValue={item.name}   categoryValues={categoryValues} count={item.count}  title={item.title} key={index}/> */}\r\n+                                    <CategoryButton categoryData={undefined} />\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705483489240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     {/* <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                     onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                     /> */}\r\n-                                    <CategoryButton categoryData={undefined} />\r\n+                                    <CategoryButton categoryData={item} />\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705488645261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     {/* <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                     onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                     /> */}\r\n-                                    <CategoryButton categoryData={item} />\r\n+                                    <CategoryButton categoryData={item} key={index}/>\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705490358157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     {/* <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                     onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                     /> */}\r\n-                                    <CategoryButton categoryData={item} key={index}/>\r\n+                                    <CategoryButton categoryData={item} key={item.name}/>\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705739970241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     {/* <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                     onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                     /> */}\r\n-                                    <CategoryButton categoryData={item} key={item.name}/>\r\n+                                    <CategoryButton categoryData={item} key={item.title}/>\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705740108743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,13 +52,13 @@\n                     {categoryChilds.map((item, index) => (\r\n                         <ListItem key={index}>\r\n                             <ListItem.Content>\r\n                                 <ListItem.Title >\r\n-                                    {/* <Button\r\n+                                    <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n-                                    onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n-                                    /> */}\r\n-                                    <CategoryButton categoryData={item} key={item.title}/>\r\n+                                  \r\n+                                    />\r\n+                                    {/* <CategoryButton categoryData={item} key={item.title}/> */}\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705740244784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n                                     <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                   \r\n                                     />\r\n-                                    {/* <CategoryButton categoryData={item} key={item.title}/> */}\r\n+                                    <CategoryButton categoryData={item} key={item.title}/>\r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705740265320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,12 @@\n import CategoryButton from './CategoryButton';\r\n \r\n interface CategoryTitlesProps {\r\n     categoryChilds: ICategoryChilds[];\r\n-    // categoryValues:CategorySearchParams;\r\n+    handleClick: (\r\n+        event: React.MouseEvent,\r\n+        categoryData:any\r\n+        ) => void;\r\n }\r\n \r\n \r\n const CategoryChilds: React.FC<CategoryTitlesProps> = ({ categoryChilds }) => {\r\n"
                },
                {
                    "date": 1705740296671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,11 +57,11 @@\n                             <ListItem.Content>\r\n                                 <ListItem.Title >\r\n                                     <Button\r\n                                        title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n-                                  \r\n+                                       onPress={(event) => handleClick(item )}\r\n                                     />\r\n-                                    <CategoryButton categoryData={item} key={item.title}/>\r\n+                               \r\n                                 </ListItem.Title>\r\n \r\n                                 <Divider />\r\n                                 <ListItem.Subtitle >\r\n"
                },
                {
                    "date": 1705740315400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ) => void;\r\n }\r\n \r\n \r\n-const CategoryChilds: React.FC<CategoryTitlesProps> = ({ categoryChilds }) => {\r\n+const CategoryChilds: React.FC<CategoryTitlesProps> = ({ categoryChilds,handleClick }) => {\r\n \r\n     const theme = useTheme();\r\n     //const navigation = useNavigation();\r\n \r\n"
                }
            ],
            "date": 1705483272750,
            "name": "Commit-0",
            "content": "\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport { ICategoryChilds } from '../entity/OrdersProductsCategoriesInfo';\r\nimport { CategorySearchParams, SearchParamsOrderItem, createSearchParamsOrderItem } from '../entity/SearchQueries';\r\nimport CategoryButton from './CategoryButton';\r\n\r\ninterface CategoryTitlesProps {\r\n    categoryChilds: ICategoryChilds[];\r\n    // categoryValues:CategorySearchParams;\r\n}\r\n\r\n\r\nconst CategoryChilds: React.FC<CategoryTitlesProps> = ({ categoryChilds }) => {\r\n\r\n    const theme = useTheme();\r\n    //const navigation = useNavigation();\r\n\r\n   \r\n    // Define a generic type that represents the property name and value\r\n    // type UpdateParams = {\r\n    //     prop: keyof SearchParamsOrderItem;\r\n    //     value: SearchParamsOrderItem[keyof SearchParamsOrderItem];\r\n    // };\r\n\r\n    \r\n\r\n\r\n    // // Define a function that handles the click event on both buttons\r\n    // const handleClick = (event: React.MouseEvent, updateParams: UpdateParams) => {\r\n    //     event.preventDefault();\r\n    //     // Update the searchParamsInstance state variable with the property name and value\r\n    //     setSearchParamsInstance((prevState) => ({\r\n    //         ...prevState,\r\n    //         [updateParams.prop]: updateParams.value,\r\n    //     }));\r\n\r\n   // };\r\n    // when the searchParamsInstance state changes\r\n    // useEffect(() => {\r\n    //     navigation.navigate('orderitem', searchParamsInstance);\r\n    // }, [searchParamsInstance]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Text style={styles.title}>Items {categoryChilds.parent}</Text> */}\r\n            {categoryChilds && (\r\n                <>\r\n                    {categoryChilds.map((item, index) => (\r\n                        <ListItem key={index}>\r\n                            <ListItem.Content>\r\n                                <ListItem.Title >\r\n                                    {/* <Button\r\n                                       title={`ðŸ¥µ ${item.title} (${item.count})`}\r\n                                    onPress={(event) => handleClick(event, { prop: 'item_category3', value: item.title  })}\r\n                                    /> */}\r\n                                    {/* <CategoryButton categoryType={item.name} categoryValue={item.name}   categoryValues={categoryValues} count={item.count}  title={item.title} key={index}/> */}\r\n                                </ListItem.Title>\r\n\r\n                                <Divider />\r\n                                <ListItem.Subtitle >\r\n                                    <Text>Total Price: {item.total_price}</Text>\r\n                                </ListItem.Subtitle>\r\n\r\n                            </ListItem.Content>\r\n                        </ListItem>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default CategoryChilds;\r\n"
        }
    ]
}