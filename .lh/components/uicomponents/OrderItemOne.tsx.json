{
    "sourceFile": "components/uicomponents/OrderItemOne.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1704869913744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704870726002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n type OrderItemProps = OrderItemDto;\r\n \r\n const OrderItemOne = (props: OrderItemProps) => {\r\n   const { theme } = useTheme();\r\n-  const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n+  //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n   return (\r\n     <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background, borderRadius: theme.borderRadius.m }}>\r\n       <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n       <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.product_title_en}</Text>\r\n@@ -24,11 +24,11 @@\n         {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n         {props.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n       </View>\r\n       <Button title={props.seller_title} onPress={() => Linking.openURL(props.seller_url)} />\r\n-      {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n+      {/* {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n       {isError && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.error }}>{error.message}</Text>}\r\n-      {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>}\r\n+      {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>} */}\r\n     </View>\r\n   );\r\n };\r\n export default OrderItemOne;\r\n"
                },
                {
                    "date": 1704870864834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,29 +6,31 @@\n \r\n type OrderItemProps = OrderItemDto;\r\n \r\n const OrderItemOne = (props: OrderItemProps) => {\r\n-  const { theme } = useTheme();\r\n-  //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n-  return (\r\n-    <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background, borderRadius: theme.borderRadius.m }}>\r\n-      <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n-      <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.product_title_en}</Text>\r\n-      <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n-      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n-        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n-        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n-      </View>\r\n-      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-        {props.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n-        {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n-        {props.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n-      </View>\r\n-      <Button title={props.seller_title} onPress={() => Linking.openURL(props.seller_url)} />\r\n-      {/* {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n+    const { theme } = useTheme();\r\n+    //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n+    return (\r\n+        <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background, borderRadius: theme.borderRadius.m }}>\r\n+            <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n+            <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.title_en}</Text>\r\n+            <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n+            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n+                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n+                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n+                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n+            </View>\r\n+            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n+                {props.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n+                {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n+                {props.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n+            </View>\r\n+\r\n+\r\n+            <Button title={props.seller_title} onPress={() => Linking.openURL(props.seller_url)} />\r\n+            {/* {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n       {isError && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.error }}>{error.message}</Text>}\r\n       {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>} */}\r\n-    </View>\r\n-  );\r\n+        </View>\r\n+    );\r\n };\r\n export default OrderItemOne;\r\n"
                },
                {
                    "date": 1704870915196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n const OrderItemOne = (props: OrderItemProps) => {\r\n     const { theme } = useTheme();\r\n     //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n     return (\r\n-        <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background, borderRadius: theme.borderRadius.m }}>\r\n+        <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n             <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n             <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.title_en}</Text>\r\n             <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1704871235077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,5 +32,32 @@\n       {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>} */}\r\n         </View>\r\n     );\r\n };\r\n+const styles = StyleSheet.create({\r\n+    container: {\r\n+        flex: 1,\r\n+        alignItems: \"center\",\r\n+        justifyContent: \"center\",\r\n+    },\r\n+    loading: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+    },\r\n+    error: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+    },\r\n+    dataContainer: {\r\n+        margin: 10,\r\n+    },\r\n+    dataTitle: {\r\n+        fontSize: 18,\r\n+        fontWeight: \"bold\",\r\n+        marginVertical: 5,\r\n+    },\r\n+    dataSubtitle: {\r\n+        fontSize: 16,\r\n+        marginVertical: 5,\r\n+    },\r\n+});\r\n export default OrderItemOne;\r\n"
                },
                {
                    "date": 1704871303750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from 'react';\r\n-import { View, Text, Image, Linking } from 'react-native';\r\n+import { View, Text, Image, Linking ,StyleSheet} from 'react-native';\r\n import { useTheme, Button, Badge } from '@rneui/themed';\r\n import { useQuery } from '@tanstack/react-query';\r\n import { OrderItemDto } from '../entity/OrderItemDto';\r\n \r\n"
                },
                {
                    "date": 1704871408534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,6 +58,35 @@\n     dataSubtitle: {\r\n         fontSize: 16,\r\n         marginVertical: 5,\r\n     },\r\n+    colors: {\r\n+        background: '#F0F0F0',\r\n+        text: '#000000',\r\n+        primary: '#FF0000',\r\n+        secondary: '#00FF00',\r\n+        tertiary: '#0000FF',\r\n+        error: '#FF0000',\r\n+        success: '#00FF00'\r\n+      },\r\n+      textVariants: {\r\n+        title: {\r\n+          fontSize: 24,\r\n+          fontWeight: 'bold'\r\n+        },\r\n+        subtitle: {\r\n+          fontSize: 18,\r\n+          fontWeight: 'normal'\r\n+        },\r\n+        body: {\r\n+          fontSize: 14,\r\n+          fontWeight: 'normal'\r\n+        }\r\n+      },\r\n+      spacing: {\r\n+        s: 4,\r\n+        m: 8,\r\n+        l: 16,\r\n+        xl: 32\r\n+      }\r\n });\r\n export default OrderItemOne;\r\n"
                },
                {
                    "date": 1704871514565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,15 +10,15 @@\n     const { theme } = useTheme();\r\n     //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n     return (\r\n         <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n-            <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n-            <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.title_en}</Text>\r\n-            <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{props.title_en}</Text>\r\n+            <Text style={{  color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n-                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n-                <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n+                <Text style={{  color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n+                <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n+                <Text style={{ color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 {props.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n                 {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n@@ -58,35 +58,6 @@\n     dataSubtitle: {\r\n         fontSize: 16,\r\n         marginVertical: 5,\r\n     },\r\n-    colors: {\r\n-        background: '#F0F0F0',\r\n-        text: '#000000',\r\n-        primary: '#FF0000',\r\n-        secondary: '#00FF00',\r\n-        tertiary: '#0000FF',\r\n-        error: '#FF0000',\r\n-        success: '#00FF00'\r\n-      },\r\n-      textVariants: {\r\n-        title: {\r\n-          fontSize: 24,\r\n-          fontWeight: 'bold'\r\n-        },\r\n-        subtitle: {\r\n-          fontSize: 18,\r\n-          fontWeight: 'normal'\r\n-        },\r\n-        body: {\r\n-          fontSize: 14,\r\n-          fontWeight: 'normal'\r\n-        }\r\n-      },\r\n-      spacing: {\r\n-        s: 4,\r\n-        m: 8,\r\n-        l: 16,\r\n-        xl: 32\r\n-      }\r\n });\r\n export default OrderItemOne;\r\n"
                },
                {
                    "date": 1704871817628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     const { theme } = useTheme();\r\n     //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n     return (\r\n         <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n-            <Text style={{ color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{props[0]}</Text>\r\n             <Text style={{ color: theme.colors.text }}>{props.title_en}</Text>\r\n             <Text style={{  color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n"
                },
                {
                    "date": 1704871829076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     const { theme } = useTheme();\r\n     //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n     return (\r\n         <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n-            <Text style={{ color: theme.colors.text }}>{props[0]}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n             <Text style={{ color: theme.colors.text }}>{props.title_en}</Text>\r\n             <Text style={{  color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n"
                },
                {
                    "date": 1704872128708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,31 +3,34 @@\n import { useTheme, Button, Badge } from '@rneui/themed';\r\n import { useQuery } from '@tanstack/react-query';\r\n import { OrderItemDto } from '../entity/OrderItemDto';\r\n \r\n-type OrderItemProps = OrderItemDto;\r\n \r\n-const OrderItemOne = (props: OrderItemProps) => {\r\n+interface OrderItemProps {\r\n+    item: OrderItemDto;\r\n+  }\r\n+//const OrderItemOne = (props: OrderItemProps) => {\r\n+ const OrderItemOne: React.FC<OrderItemProps> = ({ item }) => {\r\n     const { theme } = useTheme();\r\n-    //const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n+    //const { data, isLoading, isError, error } = useQuery(['orderItem', item.product_id], () => fetchOrderItem(item.product_id));\r\n     return (\r\n         <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n-            <Text style={{ color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n-            <Text style={{ color: theme.colors.text }}>{props.title_en}</Text>\r\n-            <Text style={{  color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{item.product_title_fa}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{item.title_en}</Text>\r\n+            <Text style={{  color: theme.colors.text }}>{item.brand} | {item.category} | {item.item_category2} | {item.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-                <Text style={{  color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n-                <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n-                <Text style={{ color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n+                <Text style={{  color: theme.colors.text }}>RRP Price: {item.rrp_price}</Text>\r\n+                <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {item.selling_price}</Text>\r\n+                <Text style={{ color: theme.colors.text }}>Discount: {item.discount_percent}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-                {props.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n-                {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n-                {props.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n+                {item.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n+                {item.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n+                {item.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n             </View>\r\n \r\n \r\n-            <Button title={props.seller_title} onPress={() => Linking.openURL(props.seller_url)} />\r\n+            <Button title={item.seller_title} onPress={() => Linking.openURL(item.seller_url)} />\r\n             {/* {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n       {isError && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.error }}>{error.message}</Text>}\r\n       {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>} */}\r\n         </View>\r\n"
                },
                {
                    "date": 1704872180437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { OrderItemDto } from '../entity/OrderItemDto';\r\n \r\n \r\n interface OrderItemProps {\r\n-    item: OrderItemDto;\r\n+    orderItem: OrderItemDto;\r\n   }\r\n //const OrderItemOne = (props: OrderItemProps) => {\r\n  const OrderItemOne: React.FC<OrderItemProps> = ({ item }) => {\r\n     const { theme } = useTheme();\r\n"
                },
                {
                    "date": 1704872202128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,29 +8,29 @@\n interface OrderItemProps {\r\n     orderItem: OrderItemDto;\r\n   }\r\n //const OrderItemOne = (props: OrderItemProps) => {\r\n- const OrderItemOne: React.FC<OrderItemProps> = ({ item }) => {\r\n+ const OrderItemOne: React.FC<OrderItemProps> = ({ orderItem }) => {\r\n     const { theme } = useTheme();\r\n-    //const { data, isLoading, isError, error } = useQuery(['orderItem', item.product_id], () => fetchOrderItem(item.product_id));\r\n+    //const { data, isLoading, isError, error } = useQuery(['orderItem', orderItem.product_id], () => fetchOrderItem(orderItem.product_id));\r\n     return (\r\n         <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n-            <Text style={{ color: theme.colors.text }}>{item.product_title_fa}</Text>\r\n-            <Text style={{ color: theme.colors.text }}>{item.title_en}</Text>\r\n-            <Text style={{  color: theme.colors.text }}>{item.brand} | {item.category} | {item.item_category2} | {item.item_category3}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{orderItem.product_title_fa}</Text>\r\n+            <Text style={{ color: theme.colors.text }}>{orderItem.title_en}</Text>\r\n+            <Text style={{  color: theme.colors.text }}>{orderItem.brand} | {orderItem.category} | {orderItem.item_category2} | {orderItem.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-                <Text style={{  color: theme.colors.text }}>RRP Price: {item.rrp_price}</Text>\r\n-                <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {item.selling_price}</Text>\r\n-                <Text style={{ color: theme.colors.text }}>Discount: {item.discount_percent}%</Text>\r\n+                <Text style={{  color: theme.colors.text }}>RRP Price: {orderItem.rrp_price}</Text>\r\n+                <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {orderItem.selling_price}</Text>\r\n+                <Text style={{ color: theme.colors.text }}>Discount: {orderItem.discount_percent}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n-                {item.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n-                {item.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n-                {item.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n+                {orderItem.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n+                {orderItem.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n+                {orderItem.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n             </View>\r\n \r\n \r\n-            <Button title={item.seller_title} onPress={() => Linking.openURL(item.seller_url)} />\r\n+            <Button title={orderItem.seller_title} onPress={() => Linking.openURL(orderItem.seller_url)} />\r\n             {/* {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n       {isError && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.error }}>{error.message}</Text>}\r\n       {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>} */}\r\n         </View>\r\n"
                },
                {
                    "date": 1704874005248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n  const OrderItemOne: React.FC<OrderItemProps> = ({ orderItem }) => {\r\n     const { theme } = useTheme();\r\n     //const { data, isLoading, isError, error } = useQuery(['orderItem', orderItem.product_id], () => fetchOrderItem(orderItem.product_id));\r\n     return (\r\n-        <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }}>\r\n+        <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background }} key={orderItem.product_id}>\r\n             <Text style={{ color: theme.colors.text }}>{orderItem.product_title_fa}</Text>\r\n             <Text style={{ color: theme.colors.text }}>{orderItem.title_en}</Text>\r\n             <Text style={{  color: theme.colors.text }}>{orderItem.brand} | {orderItem.category} | {orderItem.item_category2} | {orderItem.item_category3}</Text>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1704879585777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {orderItem.rrp_price}</Text>\r\n                 <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {orderItem.selling_price}</Text>\r\n                 <Text style={{ color: theme.colors.text }}>Discount: {orderItem.discount_percent}%</Text>\r\n+                <Text style={{ color: theme.colors.text }}>Discount: {orderItem.count}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 {orderItem.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n                 {orderItem.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n"
                },
                {
                    "date": 1704879609372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {orderItem.rrp_price}</Text>\r\n                 <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {orderItem.selling_price}</Text>\r\n                 <Text style={{ color: theme.colors.text }}>Discount: {orderItem.discount_percent}%</Text>\r\n-                <Text style={{ color: theme.colors.text }}>Discount: {orderItem.count}%</Text>\r\n+                <Text style={{ color: theme.colors.text }}>Discount: {orderItem.order_item_quantity}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 {orderItem.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n                 {orderItem.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n"
                },
                {
                    "date": 1704879653435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {orderItem.rrp_price}</Text>\r\n                 <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {orderItem.selling_price}</Text>\r\n                 <Text style={{ color: theme.colors.text }}>Discount: {orderItem.discount_percent}%</Text>\r\n-                <Text style={{ color: theme.colors.text }}>Discount: {orderItem.order_item_quantity}%</Text>\r\n+                <Text style={{ color: theme.colors.text }}>count: {orderItem.order_item_quantity}%</Text>\r\n+                <Text style={{ color: theme.colors.text }}>count: {orderItem.order_item_quantity}%</Text>\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 {orderItem.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n                 {orderItem.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n"
                },
                {
                    "date": 1704879675754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 <Text style={{  color: theme.colors.text }}>RRP Price: {orderItem.rrp_price}</Text>\r\n                 <Text style={{  color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {orderItem.selling_price}</Text>\r\n                 <Text style={{ color: theme.colors.text }}>Discount: {orderItem.discount_percent}%</Text>\r\n-                <Text style={{ color: theme.colors.text }}>count: {orderItem.order_item_quantity}%</Text>\r\n-                <Text style={{ color: theme.colors.text }}>count: {orderItem.order_item_quantity}%</Text>\r\n+                <Text style={{ color: theme.colors.text }}>count: {orderItem.order_item_quantity}</Text>\r\n+\r\n             </View>\r\n             <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                 {orderItem.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n                 {orderItem.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n"
                }
            ],
            "date": 1704869913744,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { View, Text, Image, Linking } from 'react-native';\r\nimport { useTheme, Button, Badge } from '@rneui/themed';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { OrderItemDto } from '../entity/OrderItemDto';\r\n\r\ntype OrderItemProps = OrderItemDto;\r\n\r\nconst OrderItemOne = (props: OrderItemProps) => {\r\n  const { theme } = useTheme();\r\n  const { data, isLoading, isError, error } = useQuery(['orderItem', props.product_id], () => fetchOrderItem(props.product_id));\r\n  return (\r\n    <View style={{ padding: theme.spacing.m, backgroundColor: theme.colors.background, borderRadius: theme.borderRadius.m }}>\r\n      <Text style={{ fontSize: theme.textVariants.title, color: theme.colors.text }}>{props.product_title_fa}</Text>\r\n      <Text style={{ fontSize: theme.textVariants.subtitle, color: theme.colors.text }}>{props.product_title_en}</Text>\r\n      <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>{props.brand} | {props.category} | {props.item_category2} | {props.item_category3}</Text>\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>RRP Price: {props.rrp_price}</Text>\r\n        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text, textDecorationLine: 'line-through' }}>Selling Price: {props.selling_price}</Text>\r\n        <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Discount: {props.discount_percent}%</Text>\r\n      </View>\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        {props.is_incredible && <Badge text=\"Incredible\" color={theme.colors.primary} />}\r\n        {props.is_promotion && <Badge text=\"Promotion\" color={theme.colors.secondary} />}\r\n        {props.bnpl_active && <Badge text=\"BNPL\" color={theme.colors.tertiary} />}\r\n      </View>\r\n      <Button title={props.seller_title} onPress={() => Linking.openURL(props.seller_url)} />\r\n      {isLoading && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.text }}>Loading...</Text>}\r\n      {isError && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.error }}>{error.message}</Text>}\r\n      {data && <Text style={{ fontSize: theme.textVariants.body, color: theme.colors.success }}>Data fetched successfully</Text>}\r\n    </View>\r\n  );\r\n};\r\nexport default OrderItemOne;\r\n"
        }
    ]
}