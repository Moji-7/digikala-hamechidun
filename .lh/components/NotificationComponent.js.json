{
    "sourceFile": "components/NotificationComponent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1711281051511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711282508937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import { View, Text, TouchableOpacity } from 'react-native';\r\n-import { useSocket } from './yourSocketHook'; // replace with your actual hook\r\n-\r\n+import useSocket from '../hooks/useCustomSocket';\r\n const NotificationComponent = () => {\r\n     const [count, setCount] = useState(0);\r\n     const [message, setMessage] = useState('');\r\n     const socket = useSocket('http://localhost:3222');\r\n"
                },
                {
                    "date": 1711282565433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import { View, Text, TouchableOpacity } from 'react-native';\r\n-import useSocket from '../hooks/useCustomSocket';\r\n+import useSocket from './hooks/useCustomSocket';\r\n+\r\n const NotificationComponent = () => {\r\n     const [count, setCount] = useState(0);\r\n     const [message, setMessage] = useState('');\r\n     const socket = useSocket('http://localhost:3222');\r\n"
                },
                {
                    "date": 1711283376574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,18 @@\n     const socket = useSocket('http://localhost:3222');\r\n \r\n     useEffect(() => {\r\n         if (socket) {\r\n+            // socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n+            //     setCount(prevCount => prevCount + 1);\r\n+            //     setMessage(data);\r\n+            // });\r\n             socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n                 setCount(prevCount => prevCount + 1);\r\n                 setMessage(data);\r\n-            });\r\n+                dispatch(addNotification(data)); // Dispatch the action here\r\n+              });\r\n+              \r\n \r\n             socket.on('pong', (data) => {\r\n                 console.log('Pong received:', data);\r\n             });\r\n"
                },
                {
                    "date": 1711283572288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n import React, { useState, useEffect } from 'react';\r\n import { View, Text, TouchableOpacity } from 'react-native';\r\n+import { useDispatch } from 'react-redux'; // Import useDispatch\r\n import useSocket from './hooks/useCustomSocket';\r\n+import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n \r\n const NotificationComponent = () => {\r\n+    const dispatch = useDispatch(); // Get the dispatch function\r\n     const [count, setCount] = useState(0);\r\n     const [message, setMessage] = useState('');\r\n     const socket = useSocket('http://localhost:3222');\r\n \r\n"
                },
                {
                    "date": 1711283756524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,28 +34,27 @@\n         setCount(0); // reset count after showing the message\r\n     };\r\n \r\n     return (\r\n-        <TouchableOpacity onPress={handlePress}>\r\n-            <View style={{ position: 'relative' }}>\r\n-                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n-                {count > 0 && (\r\n-                    <View style={{\r\n-                        position: 'absolute',\r\n-                        right: -10,\r\n-                        top: -10,\r\n-                        backgroundColor: 'red',\r\n-                        borderRadius: 10,\r\n-                        width: 20,\r\n-                        height: 20,\r\n-                        justifyContent: 'center',\r\n-                        alignItems: 'center',\r\n-                    }}>\r\n-                        <Text style={{ color: 'white' }}>{count}</Text>\r\n+        <View>\r\n+            <TouchableOpacity onPress={handlePress}>\r\n+                {/* Your notification icon */}\r\n+            </TouchableOpacity>\r\n+            <Modal\r\n+                animationType=\"slide\"\r\n+                transparent={true}\r\n+                visible={modalVisible}\r\n+                onRequestClose={handleClose}\r\n+            >\r\n+                <View style={{ marginTop: 22 }}>\r\n+                    <View>\r\n+                        <NotificationList />\r\n+                        <Button onPress={handleClose} title=\"Close\" />\r\n                     </View>\r\n-                )}\r\n-            </View>\r\n-        </TouchableOpacity>\r\n+                </View>\r\n+            </Modal>\r\n+        </View>\r\n     );\r\n+\r\n };\r\n \r\n export default NotificationComponent;\r\n"
                },
                {
                    "date": 1711283772227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n         }\r\n     }, [socket]);\r\n \r\n     const handlePress = () => {\r\n-        alert(`Message: ${message}`);\r\n+        //alert(`Message: ${message}`);\r\n+        setModalVisible(true);\r\n         setCount(0); // reset count after showing the message\r\n     };\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1711283785033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import { View, Text, TouchableOpacity } from 'react-native';\r\n+import { View, Modal, Button, TouchableOpacity } from 'react-native';\r\n import { useDispatch } from 'react-redux'; // Import useDispatch\r\n import useSocket from './hooks/useCustomSocket';\r\n import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n \r\n"
                },
                {
                    "date": 1711283828432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n const NotificationComponent = () => {\r\n     const dispatch = useDispatch(); // Get the dispatch function\r\n     const [count, setCount] = useState(0);\r\n     const [message, setMessage] = useState('');\r\n+    const [modalVisible, setModalVisible] = useState(false);\r\n+\r\n     const socket = useSocket('http://localhost:3222');\r\n \r\n     useEffect(() => {\r\n         if (socket) {\r\n"
                },
                {
                    "date": 1711284049929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,12 @@\n         //alert(`Message: ${message}`);\r\n         setModalVisible(true);\r\n         setCount(0); // reset count after showing the message\r\n     };\r\n+    \r\n+    const handleClose = () => {\r\n+        setModalVisible(false);\r\n+    };\r\n \r\n     return (\r\n         <View>\r\n             <TouchableOpacity onPress={handlePress}>\r\n"
                },
                {
                    "date": 1711284099465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { View, Modal, Button, TouchableOpacity } from 'react-native';\r\n import { useDispatch } from 'react-redux'; // Import useDispatch\r\n import useSocket from './hooks/useCustomSocket';\r\n import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n+import NotificationListComponent from './NotificationListComponent';\r\n \r\n const NotificationComponent = () => {\r\n     const dispatch = useDispatch(); // Get the dispatch function\r\n     const [count, setCount] = useState(0);\r\n@@ -53,9 +54,9 @@\n                 onRequestClose={handleClose}\r\n             >\r\n                 <View style={{ marginTop: 22 }}>\r\n                     <View>\r\n-                        <NotificationList />\r\n+                        <NotificationListComponent />\r\n                         <Button onPress={handleClose} title=\"Close\" />\r\n                     </View>\r\n                 </View>\r\n             </Modal>\r\n"
                },
                {
                    "date": 1711284270113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,29 @@\n     };\r\n \r\n     return (\r\n         <View>\r\n-            <TouchableOpacity onPress={handlePress}>\r\n-                {/* Your notification icon */}\r\n-            </TouchableOpacity>\r\n+         \r\n+        <TouchableOpacity onPress={handlePress}>\r\n+            <View style={{ position: 'relative' }}>\r\n+                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n+                {count > 0 && (\r\n+                    <View style={{\r\n+                        position: 'absolute',\r\n+                        right: -10,\r\n+                        top: -10,\r\n+                        backgroundColor: 'red',\r\n+                        borderRadius: 10,\r\n+                        width: 20,\r\n+                        height: 20,\r\n+                        justifyContent: 'center',\r\n+                        alignItems: 'center',\r\n+                    }}>\r\n+                        <Text style={{ color: 'white' }}>{count}</Text>\r\n+                    </View>\r\n+                )}\r\n+            </View>\r\n+        </TouchableOpacity>\r\n             <Modal\r\n                 animationType=\"slide\"\r\n                 transparent={true}\r\n                 visible={modalVisible}\r\n"
                },
                {
                    "date": 1711284385798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,41 +44,9 @@\n \r\n     return (\r\n         <View>\r\n          \r\n-        <TouchableOpacity onPress={handlePress}>\r\n-            <View style={{ position: 'relative' }}>\r\n-                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n-                {count > 0 && (\r\n-                    <View style={{\r\n-                        position: 'absolute',\r\n-                        right: -10,\r\n-                        top: -10,\r\n-                        backgroundColor: 'red',\r\n-                        borderRadius: 10,\r\n-                        width: 20,\r\n-                        height: 20,\r\n-                        justifyContent: 'center',\r\n-                        alignItems: 'center',\r\n-                    }}>\r\n-                        <Text style={{ color: 'white' }}>{count}</Text>\r\n-                    </View>\r\n-                )}\r\n-            </View>\r\n-        </TouchableOpacity>\r\n-            <Modal\r\n-                animationType=\"slide\"\r\n-                transparent={true}\r\n-                visible={modalVisible}\r\n-                onRequestClose={handleClose}\r\n-            >\r\n-                <View style={{ marginTop: 22 }}>\r\n-                    <View>\r\n-                        <NotificationListComponent />\r\n-                        <Button onPress={handleClose} title=\"Close\" />\r\n-                    </View>\r\n-                </View>\r\n-            </Modal>\r\n+      \r\n         </View>\r\n     );\r\n \r\n };\r\n"
                },
                {
                    "date": 1711284412482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,41 @@\n \r\n     return (\r\n         <View>\r\n          \r\n-      \r\n+        <TouchableOpacity onPress={handlePress}>\r\n+            <View style={{ position: 'relative' }}>\r\n+                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n+                {count > 0 && (\r\n+                    <View style={{\r\n+                        position: 'absolute',\r\n+                        right: -10,\r\n+                        top: -10,\r\n+                        backgroundColor: 'red',\r\n+                        borderRadius: 10,\r\n+                        width: 20,\r\n+                        height: 20,\r\n+                        justifyContent: 'center',\r\n+                        alignItems: 'center',\r\n+                    }}>\r\n+                        <Text style={{ color: 'white' }}>{count}</Text>\r\n+                    </View>\r\n+                )}\r\n+            </View>\r\n+        </TouchableOpacity>\r\n+            <Modal\r\n+                animationType=\"slide\"\r\n+                transparent={true}\r\n+                visible={modalVisible}\r\n+                onRequestClose={handleClose}\r\n+            >\r\n+                <View style={{ marginTop: 22 }}>\r\n+                    <View>\r\n+                        <NotificationListComponent />\r\n+                        <Button onPress={handleClose} title=\"Close\" />\r\n+                    </View>\r\n+                </View>\r\n+            </Modal>\r\n         </View>\r\n     );\r\n \r\n };\r\n"
                },
                {
                    "date": 1711284481884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import { View, Modal, Button, TouchableOpacity } from 'react-native';\r\n+import { View, Modal, Button, TouchableOpacity,Text } from 'react-native';\r\n import { useDispatch } from 'react-redux'; // Import useDispatch\r\n import useSocket from './hooks/useCustomSocket';\r\n import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n import NotificationListComponent from './NotificationListComponent';\r\n"
                },
                {
                    "date": 1711370759142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { View, Modal, Button, TouchableOpacity,Text } from 'react-native';\r\n+import { useDispatch } from 'react-redux'; // Import useDispatch\r\n+import useSocket from './hooks/useCustomSocket';\r\n+import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n+import NotificationListComponent from './NotificationListComponent';\r\n+\r\n+const NotificationComponent = () => {\r\n+    const dispatch = useDispatch(); // Get the dispatch function\r\n+    const [count, setCount] = useState(0);\r\n+    const [message, setMessage] = useState('');\r\n+    const [modalVisible, setModalVisible] = useState(false);\r\n+\r\n+    const socket = useSocket('http://localhost:3222');\r\n+\r\n+    useEffect(() => {\r\n+        if (socket) {\r\n+            // socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n+            //     setCount(prevCount => prevCount + 1);\r\n+            //     setMessage(data);\r\n+            // });\r\n+            socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n+                setCount(prevCount => prevCount + 1);\r\n+                setMessage(data);\r\n+                dispatch(addNotification(data)); // Dispatch the action here\r\n+              });\r\n+              \r\n+\r\n+            socket.on('pong', (data) => {\r\n+                console.log('Pong received:', data);\r\n+            });\r\n+        }\r\n+    }, [socket]);\r\n+\r\n+    const handlePress = () => {\r\n+        //alert(`Message: ${message}`);\r\n+        setModalVisible(true);\r\n+        setCount(0); // reset count after showing the message\r\n+    };\r\n+    \r\n+    const handleClose = () => {\r\n+        setModalVisible(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <View>\r\n+         \r\n+        <TouchableOpacity onPress={handlePress}>\r\n+            <View style={{ position: 'relative' }}>\r\n+                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n+                {count > 0 && (\r\n+                    <View style={{\r\n+                        position: 'absolute',\r\n+                        right: +10,\r\n+                        top: +10,\r\n+                        backgroundColor: 'red',\r\n+                        borderRadius: 10,\r\n+                        width: 20,\r\n+                        height: 20,\r\n+                        justifyContent: 'center',\r\n+                        alignItems: 'center',\r\n+                    }}>\r\n+                        <Text style={{ color: 'white' }}>{count}</Text>\r\n+                    </View>\r\n+                )}\r\n+            </View>\r\n+        </TouchableOpacity>\r\n+            <Modal\r\n+                animationType=\"slide\"\r\n+                transparent={true}\r\n+                visible={modalVisible}\r\n+                onRequestClose={handleClose}\r\n+            >\r\n+                <View style={{ marginTop: 22 }}>\r\n+                    <View>\r\n+                        <NotificationListComponent />\r\n+                        <Button onPress={handleClose} title=\"Close\" />\r\n+                    </View>\r\n+                </View>\r\n+            </Modal>\r\n+        </View>\r\n+    );\r\n+\r\n+};\r\n+\r\n+export default NotificationComponent;\r\n"
                },
                {
                    "date": 1711370909815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,94 +51,8 @@\n                 {count > 0 && (\r\n                     <View style={{\r\n                         position: 'absolute',\r\n                         right: +10,\r\n-                        top: +10,\r\n-                        backgroundColor: 'red',\r\n-                        borderRadius: 10,\r\n-                        width: 20,\r\n-                        height: 20,\r\n-                        justifyContent: 'center',\r\n-                        alignItems: 'center',\r\n-                    }}>\r\n-                        <Text style={{ color: 'white' }}>{count}</Text>\r\n-                    </View>\r\n-                )}\r\n-            </View>\r\n-        </TouchableOpacity>\r\n-            <Modal\r\n-                animationType=\"slide\"\r\n-                transparent={true}\r\n-                visible={modalVisible}\r\n-                onRequestClose={handleClose}\r\n-            >\r\n-                <View style={{ marginTop: 22 }}>\r\n-                    <View>\r\n-                        <NotificationListComponent />\r\n-                        <Button onPress={handleClose} title=\"Close\" />\r\n-                    </View>\r\n-                </View>\r\n-            </Modal>\r\n-        </View>\r\n-    );\r\n-\r\n-};\r\n-\r\n-export default NotificationComponent;\r\n-import React, { useState, useEffect } from 'react';\r\n-import { View, Modal, Button, TouchableOpacity,Text } from 'react-native';\r\n-import { useDispatch } from 'react-redux'; // Import useDispatch\r\n-import useSocket from './hooks/useCustomSocket';\r\n-import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n-import NotificationListComponent from './NotificationListComponent';\r\n-\r\n-const NotificationComponent = () => {\r\n-    const dispatch = useDispatch(); // Get the dispatch function\r\n-    const [count, setCount] = useState(0);\r\n-    const [message, setMessage] = useState('');\r\n-    const [modalVisible, setModalVisible] = useState(false);\r\n-\r\n-    const socket = useSocket('http://localhost:3222');\r\n-\r\n-    useEffect(() => {\r\n-        if (socket) {\r\n-            // socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n-            //     setCount(prevCount => prevCount + 1);\r\n-            //     setMessage(data);\r\n-            // });\r\n-            socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n-                setCount(prevCount => prevCount + 1);\r\n-                setMessage(data);\r\n-                dispatch(addNotification(data)); // Dispatch the action here\r\n-              });\r\n-              \r\n-\r\n-            socket.on('pong', (data) => {\r\n-                console.log('Pong received:', data);\r\n-            });\r\n-        }\r\n-    }, [socket]);\r\n-\r\n-    const handlePress = () => {\r\n-        //alert(`Message: ${message}`);\r\n-        setModalVisible(true);\r\n-        setCount(0); // reset count after showing the message\r\n-    };\r\n-    \r\n-    const handleClose = () => {\r\n-        setModalVisible(false);\r\n-    };\r\n-\r\n-    return (\r\n-        <View>\r\n-         \r\n-        <TouchableOpacity onPress={handlePress}>\r\n-            <View style={{ position: 'relative' }}>\r\n-                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n-                {count > 0 && (\r\n-                    <View style={{\r\n-                        position: 'absolute',\r\n-                        right: -10,\r\n                         top: -10,\r\n                         backgroundColor: 'red',\r\n                         borderRadius: 10,\r\n                         width: 20,\r\n"
                },
                {
                    "date": 1711371369590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,9 @@\n             <Modal\r\n                 animationType=\"slide\"\r\n                 transparent={true}\r\n                 visible={modalVisible}\r\n-                onRequestClose={handleClose}\r\n-            >\r\n+                onRequestClose={handleClose}  >\r\n                 <View style={{ marginTop: 22 }}>\r\n                     <View>\r\n                         <NotificationListComponent />\r\n                         <Button onPress={handleClose} title=\"Close\" />\r\n"
                },
                {
                    "date": 1712494630764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n             //     setCount(prevCount => prevCount + 1);\r\n             //     setMessage(data);\r\n             // });\r\n             socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n+                console.log(data)\r\n                 setCount(prevCount => prevCount + 1);\r\n                 setMessage(data);\r\n                 dispatch(addNotification(data)); // Dispatch the action here\r\n               });\r\n"
                },
                {
                    "date": 1712494913266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import { View, Modal, Button, TouchableOpacity,Text } from 'react-native';\r\n+import { View, Modal, Button, TouchableOpacity, Text } from 'react-native';\r\n import { useDispatch } from 'react-redux'; // Import useDispatch\r\n import useSocket from './hooks/useCustomSocket';\r\n import { addNotification } from './reduxApi/notificationsSlice.reducer';\r\n import NotificationListComponent from './NotificationListComponent';\r\n@@ -21,13 +21,15 @@\n             // });\r\n             socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n                 console.log(data)\r\n                 setCount(prevCount => prevCount + 1);\r\n-                setMessage(data);\r\n-                dispatch(addNotification(data)); // Dispatch the action here\r\n-              });\r\n-              \r\n+                // Check if data is a string and parse it to an object\r\n+                const parsedData = typeof data === 'string' ? JSON.parse(data) : data;\r\n+                setMessage(parsedData);\r\n+                dispatch(addNotification(parsedData)); // Dispatch the action here\r\n+            });\r\n \r\n+\r\n             socket.on('pong', (data) => {\r\n                 console.log('Pong received:', data);\r\n             });\r\n         }\r\n@@ -37,36 +39,36 @@\n         //alert(`Message: ${message}`);\r\n         setModalVisible(true);\r\n         setCount(0); // reset count after showing the message\r\n     };\r\n-    \r\n+\r\n     const handleClose = () => {\r\n         setModalVisible(false);\r\n     };\r\n \r\n     return (\r\n         <View>\r\n-         \r\n-        <TouchableOpacity onPress={handlePress}>\r\n-            <View style={{ position: 'relative' }}>\r\n-                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n-                {count > 0 && (\r\n-                    <View style={{\r\n-                        position: 'absolute',\r\n-                        right: +10,\r\n-                        top: -10,\r\n-                        backgroundColor: 'red',\r\n-                        borderRadius: 10,\r\n-                        width: 20,\r\n-                        height: 20,\r\n-                        justifyContent: 'center',\r\n-                        alignItems: 'center',\r\n-                    }}>\r\n-                        <Text style={{ color: 'white' }}>{count}</Text>\r\n-                    </View>\r\n-                )}\r\n-            </View>\r\n-        </TouchableOpacity>\r\n+\r\n+            <TouchableOpacity onPress={handlePress}>\r\n+                <View style={{ position: 'relative' }}>\r\n+                    <Text>ðŸ””</Text> {/* replace with your icon */}\r\n+                    {count > 0 && (\r\n+                        <View style={{\r\n+                            position: 'absolute',\r\n+                            right: +10,\r\n+                            top: -10,\r\n+                            backgroundColor: 'red',\r\n+                            borderRadius: 10,\r\n+                            width: 20,\r\n+                            height: 20,\r\n+                            justifyContent: 'center',\r\n+                            alignItems: 'center',\r\n+                        }}>\r\n+                            <Text style={{ color: 'white' }}>{count}</Text>\r\n+                        </View>\r\n+                    )}\r\n+                </View>\r\n+            </TouchableOpacity>\r\n             <Modal\r\n                 animationType=\"slide\"\r\n                 transparent={true}\r\n                 visible={modalVisible}\r\n"
                }
            ],
            "date": 1711281051511,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { useSocket } from './yourSocketHook'; // replace with your actual hook\r\n\r\nconst NotificationComponent = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n    const socket = useSocket('http://localhost:3222');\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('published_from_SocketToClient_pipelineStatus', (data) => {\r\n                setCount(prevCount => prevCount + 1);\r\n                setMessage(data);\r\n            });\r\n\r\n            socket.on('pong', (data) => {\r\n                console.log('Pong received:', data);\r\n            });\r\n        }\r\n    }, [socket]);\r\n\r\n    const handlePress = () => {\r\n        alert(`Message: ${message}`);\r\n        setCount(0); // reset count after showing the message\r\n    };\r\n\r\n    return (\r\n        <TouchableOpacity onPress={handlePress}>\r\n            <View style={{ position: 'relative' }}>\r\n                <Text>ðŸ””</Text> {/* replace with your icon */}\r\n                {count > 0 && (\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: -10,\r\n                        top: -10,\r\n                        backgroundColor: 'red',\r\n                        borderRadius: 10,\r\n                        width: 20,\r\n                        height: 20,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Text style={{ color: 'white' }}>{count}</Text>\r\n                    </View>\r\n                )}\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nexport default NotificationComponent;\r\n"
        }
    ]
}