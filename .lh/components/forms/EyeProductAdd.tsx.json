{
    "sourceFile": "components/forms/EyeProductAdd.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1708325218704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708325254531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,11 +118,11 @@\n             <Button onPress={(e) => handleAdd(e)} key={'addEyeBtn'} title='Add'\r\n                 disabled={Object.keys(validationErrors || {}).length > 0}\r\n \r\n             /> */}\r\n-            \r\n+                <View>\r\n                  <ProductSearch/>\r\n-                 <View>\r\n+             \r\n                 \r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton/>\r\n                 <SimpleComponent/>\r\n"
                },
                {
                    "date": 1708325535227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,17 +118,17 @@\n             <Button onPress={(e) => handleAdd(e)} key={'addEyeBtn'} title='Add'\r\n                 disabled={Object.keys(validationErrors || {}).length > 0}\r\n \r\n             /> */}\r\n-                <View>\r\n+                <>\r\n                  <ProductSearch/>\r\n              \r\n                 \r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton/>\r\n                 <SimpleComponent/>\r\n \r\n-           </View>\r\n+           </>\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1708326326072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from 'react';\r\n-import { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent } from 'react-native';\r\n+import { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent, ScrollView } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import { useEyeProduct } from '../hooks/useEyeOnProduct';\r\n import { EyeProduct, EyeProductParams } from '../entity/Eye.dto';\r\n import { useQueryClient } from '@tanstack/react-query';\r\n@@ -119,11 +119,11 @@\n                 disabled={Object.keys(validationErrors || {}).length > 0}\r\n \r\n             /> */}\r\n                 <>\r\n-                 <ProductSearch/>\r\n-             \r\n-                \r\n+                <ScrollView>\r\n+      <ProductSearch />\r\n+    </ScrollView>\r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton/>\r\n                 <SimpleComponent/>\r\n \r\n"
                },
                {
                    "date": 1708326527630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect, useState } from 'react';\r\n import { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent, ScrollView } from 'react-native';\r\n-import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { Card, ListItem, Divider, useTheme, Button, Tab } from '@rneui/themed';\r\n import { useEyeProduct } from '../hooks/useEyeOnProduct';\r\n import { EyeProduct, EyeProductParams } from '../entity/Eye.dto';\r\n import { useQueryClient } from '@tanstack/react-query';\r\n \r\n@@ -10,8 +10,9 @@\n import ProductSearch from '../product/ProductSearch';\r\n import DigikalaProductSelected from './DigikalaProductSelected';\r\n import DigikalaSelectedProductSubmitButton from './DigikalaSelectedProductSubmitButton';\r\n import SimpleComponent from './SimpleComponent';\r\n+import { NavigationContainer } from '@react-navigation/native';\r\n \r\n \r\n \r\n interface Props {\r\n@@ -119,11 +120,18 @@\n                 disabled={Object.keys(validationErrors || {}).length > 0}\r\n \r\n             /> */}\r\n                 <>\r\n-                <ScrollView>\r\n+                <ScrollView  style={styles.container}>\r\n       <ProductSearch />\r\n     </ScrollView>\r\n+\r\n+    {/* <NavigationContainer>\r\n+    <Tab.Naviator>\r\n+      <Tab.Screen name=\"Search\" component={ProductSearch} />\r\n+      <Tab.Screen name=\"Selected\" component={DigikalaProductSelected} />\r\n+    </Tab.Naviator>\r\n+  </NavigationContainer> */}\r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton/>\r\n                 <SimpleComponent/>\r\n \r\n@@ -131,6 +139,11 @@\n         </View>\r\n     );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+    container: {\r\n+      flex: 1,\r\n+    },\r\n+  });\r\n \r\n export default EyeProductAddComponent;\r\n"
                },
                {
                    "date": 1708326842596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                 value={formData[key]}\r\n                 error={!!validationErrors?.[key]}\r\n                 helperText={validationErrors?.[key]}\r\n             />\r\n-       \r\n+\r\n         </View>\r\n     );\r\n     return (\r\n         <View>\r\n@@ -119,31 +119,33 @@\n             <Button onPress={(e) => handleAdd(e)} key={'addEyeBtn'} title='Add'\r\n                 disabled={Object.keys(validationErrors || {}).length > 0}\r\n \r\n             /> */}\r\n-                <>\r\n-                <ScrollView  style={styles.container}>\r\n-      <ProductSearch />\r\n-    </ScrollView>\r\n+            <>\r\n+                {/* <ScrollView style={styles.container}>\r\n+                 \r\n+                </ScrollView> */}\r\n \r\n-    {/* <NavigationContainer>\r\n-    <Tab.Naviator>\r\n-      <Tab.Screen name=\"Search\" component={ProductSearch} />\r\n-      <Tab.Screen name=\"Selected\" component={DigikalaProductSelected} />\r\n-    </Tab.Naviator>\r\n-  </NavigationContainer> */}\r\n+                {/* <NavigationContainer>\r\n+                    <Tab.Naviator>\r\n+                        <Tab.Screen name=\"Search\" component={ProductSearch} />\r\n+                        <Tab.Screen name=\"Selected\" component={DigikalaProductSelected} />\r\n+                    </Tab.Naviator>\r\n+                </NavigationContainer> */}\r\n+\r\n                 <DigikalaProductSelected />\r\n-                <DigikalaSelectedProductSubmitButton/>\r\n-                <SimpleComponent/>\r\n+                <DigikalaSelectedProductSubmitButton />\r\n+                <SimpleComponent />\r\n+                   <ProductSearch />\r\n \r\n-           </>\r\n+            </>\r\n         </View>\r\n     );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n     container: {\r\n-      flex: 1,\r\n+        flex: 1,\r\n     },\r\n-  });\r\n+});\r\n \r\n export default EyeProductAddComponent;\r\n"
                },
                {
                    "date": 1708342476613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n \r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton />\r\n                 <SimpleComponent />\r\n-                   <ProductSearch />\r\n+                   {/* <ProductSearch /> */}\r\n \r\n             </>\r\n         </View>\r\n     );\r\n"
                },
                {
                    "date": 1708342567814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,12 +131,12 @@\n                         <Tab.Screen name=\"Selected\" component={DigikalaProductSelected} />\r\n                     </Tab.Naviator>\r\n                 </NavigationContainer> */}\r\n \r\n-                <DigikalaProductSelected />\r\n+                {/* <DigikalaProductSelected /> */}\r\n                 <DigikalaSelectedProductSubmitButton />\r\n                 <SimpleComponent />\r\n-                   {/* <ProductSearch /> */}\r\n+                   <ProductSearch />\r\n \r\n             </>\r\n         </View>\r\n     );\r\n"
                },
                {
                    "date": 1708342967473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n                         <Tab.Screen name=\"Selected\" component={DigikalaProductSelected} />\r\n                     </Tab.Naviator>\r\n                 </NavigationContainer> */}\r\n \r\n-                {/* <DigikalaProductSelected /> */}\r\n+                <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton />\r\n                 <SimpleComponent />\r\n                    <ProductSearch />\r\n \r\n"
                },
                {
                    "date": 1708343537383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,8 @@\n                 </NavigationContainer> */}\r\n \r\n                 <DigikalaProductSelected />\r\n                 <DigikalaSelectedProductSubmitButton />\r\n-                <SimpleComponent />\r\n                    <ProductSearch />\r\n \r\n             </>\r\n         </View>\r\n"
                }
            ],
            "date": 1708325218704,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\nimport { useEyeProduct } from '../hooks/useEyeOnProduct';\r\nimport { EyeProduct, EyeProductParams } from '../entity/Eye.dto';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\n\r\n\r\nimport { Alert } from 'react-native';\r\nimport ProductSearch from '../product/ProductSearch';\r\nimport DigikalaProductSelected from './DigikalaProductSelected';\r\nimport DigikalaSelectedProductSubmitButton from './DigikalaSelectedProductSubmitButton';\r\nimport SimpleComponent from './SimpleComponent';\r\n\r\n\r\n\r\ninterface Props {\r\n    eyeProductParam: EyeProductParams;\r\n}\r\n\r\nconst EyeProductAddComponent: React.FC<Props> = ({ eyeProductParam }) => {\r\n    const { theme } = useTheme();\r\n    const queryClient = useQueryClient();\r\n\r\n    const { data, error, isLoading, isError, deleteMutation, addMutation } = useEyeProduct(eyeProductParam, queryClient);\r\n\r\n    const initialFormData = {\r\n        userId: 1,\r\n        productId: 123,\r\n        productTitle: \"\",\r\n        info: \"\",\r\n        pipelinesIds: \"1,2,3\"\r\n    };\r\n\r\n    const [formData, setFormData] = useState<typeof initialFormData>(initialFormData);\r\n    const [validationErrors, setValidationErrors] = useState<{ [key: string]: string } | null>();\r\n\r\n\r\n    const validateField = (key: string, value: string) => {\r\n        if (value.length < 3) {\r\n            return `${key} must be at least 3 characters long`;\r\n        }\r\n        return undefined; // No error\r\n    };\r\n    const handleInputChange = (field: string, text: string) => {\r\n        setFormData({ ...formData, [field]: text });\r\n        const error = validateField(field, text);\r\n        setValidationErrors({ ...validationErrors, [field]: error });\r\n    };\r\n\r\n\r\n    const handleAdd = async (event) => {\r\n        const allErrors = Object.entries(formData)\r\n            .map(([field, value]) => validateField(field, value))\r\n            .filter(Boolean); // Filter out undefined errors\r\n        console.log(allErrors)\r\n        if (allErrors.length > 0) {\r\n            setValidationErrors(\r\n                Object.fromEntries(allErrors.map(([field, message]) => ([field, message])))\r\n            );\r\n            return;\r\n        }\r\n        try {\r\n            const result = await addMutation.mutateAsync(formData);\r\n            setFormData(initialFormData);\r\n            Alert.alert(\"Success\", \"The eye product was added successfully\", [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\r\n            ]);\r\n            //   <AlertComponenti message=\"Eye product added successfully\" type=\"success\" />\r\n            console.log('The eye product was added successfully', result);\r\n\r\n        } catch (error) {\r\n            Alert.alert(\"Error\", \"The eye product could not be added\", [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\r\n            ]);\r\n        }\r\n    };\r\n    // Check for initial validation of empty fields\r\n    const initialErrors = Object.entries(formData)\r\n        .map(([field, value]) => validateField(field, value))\r\n        .filter(Boolean);\r\n    useEffect(() => {\r\n        setValidationErrors(\r\n            Object.fromEntries(initialErrors.map(([field, message]) => ([field, message])))\r\n        );\r\n\r\n    }, []);\r\n    // useEffect(() => {\r\n    //     console.log(Object.keys(validationErrors || {}).length > 0)\r\n    // }, validationErrors);\r\n\r\n    const inputData = [\r\n        // ... your input labels and keys\r\n        { key: \"productTitle\", label: \"Product Title\" },\r\n        { key: \"info\", label: \"Info\" },\r\n        // ... add more input objects\r\n    ];\r\n    const renderInput = ({ item: { key, label } }: { item: { key: string; label: string } }) => (\r\n        <View key={key}>\r\n            <Text>{label}</Text>\r\n            <TextInput\r\n                placeholder={label}\r\n                onChangeText={(text) => handleInputChange(key, text)}\r\n                value={formData[key]}\r\n                error={!!validationErrors?.[key]}\r\n                helperText={validationErrors?.[key]}\r\n            />\r\n       \r\n        </View>\r\n    );\r\n    return (\r\n        <View>\r\n            {/* <FlatList\r\n                data={inputData}\r\n                renderItem={renderInput}\r\n                keyExtractor={(item) => item.key}\r\n            />\r\n            <Button onPress={(e) => handleAdd(e)} key={'addEyeBtn'} title='Add'\r\n                disabled={Object.keys(validationErrors || {}).length > 0}\r\n\r\n            /> */}\r\n            \r\n                 <ProductSearch/>\r\n                 <View>\r\n                \r\n                <DigikalaProductSelected />\r\n                <DigikalaSelectedProductSubmitButton/>\r\n                <SimpleComponent/>\r\n\r\n           </View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default EyeProductAddComponent;\r\n"
        }
    ]
}