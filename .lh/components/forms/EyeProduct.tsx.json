{
    "sourceFile": "components/forms/EyeProduct.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1708342967522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708343049504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,118 +18,18 @@\n }\r\n \r\n const EyeProductComponent: React.FC<Props> = ({ eyeProductParam }) => {\r\n \r\n-    const { theme } = useTheme();\r\n-\r\n-    const queryClient = useQueryClient();\r\n-\r\n-    const { data, error, isLoading, isError, deleteMutation, addMutation } = useEyeProduct(eyeProductParam, queryClient);\r\n-\r\n-\r\n-    const [page, setPage] = useState(1);\r\n-\r\n-    // Define a function to update the page number when the user navigates to a different page\r\n-    const handlePageChange = (newPage: number) => {\r\n-        setPage(newPage);\r\n-    };\r\n-\r\n-    const handleDelete = async (event, productId: number) => {\r\n-        event.preventDefault()\r\n-        try {\r\n-            const result = await deleteMutation.mutateAsync(productId);\r\n-            console.log('Delete successful', result);\r\n-        } catch (error) {\r\n-            console.error('Delete failed', error);\r\n-        }\r\n-    };\r\n-\r\n-\r\n-\r\n-    // const handleDelete = (productId) => {\r\n-    //     await deletee(productId);\r\n-    //   };\r\n   \r\n     return (\r\n         <View style={styles.container}>\r\n-            {data && (\r\n+        \r\n                 <View style={styles.gridContainer}>\r\n-                    {data.eyeProducts.map((eyeProduct, index) => (\r\n-                        <View key={index} style={styles.gridRow}>\r\n-                            {renderGridItem(eyeProduct, index)}\r\n-                        </View>\r\n-\r\n-\r\n-                        //     <FlatList\r\n-                        //     data={data.eyeProducts}\r\n-                        //     renderItem={({ item, index }) => renderGridItem(item, index)} // Use your own renderGridItem function\r\n-                        //     keyExtractor={(item) => item.id}\r\n-                        //     // Render the Pagination component at the bottom of the FlatList component\r\n-                        //     ListFooterComponent={\r\n-                        //         <Pagination\r\n-                        //             pageCount={data?.count}\r\n-                        //             activePage={page}\r\n-                        //             onPageChange={handlePageChange}\r\n-                        //             // containerStyle={PaginationContainerStyle}\r\n-\r\n-                        //         />\r\n-\r\n-                        //     }\r\n-                        // />\r\n-\r\n-                    ))}\r\n                     <Divider />\r\n                     <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n+                </View>\r\n \r\n-\r\n-                </View>\r\n-            )}\r\n         </View>\r\n     );\r\n };\r\n \r\n-const styles = StyleSheet.create({\r\n-    container: {\r\n-        flex: 1,\r\n-        padding: 6,\r\n-    },\r\n-    gridContainer: {\r\n-        flexDirection: 'row',\r\n-        flexWrap: 'wrap',\r\n-    },\r\n-    gridRow: {\r\n-        flexDirection: 'row',\r\n-        justifyContent: 'space-between',\r\n-        marginBottom: 6,\r\n-    },\r\n-    gridItem: {\r\n-        //width: '48%', // Adjust based on GRID_COLUMN_COUNT and desired proportions\r\n-        padding: 8,\r\n-        marginRight: 2,\r\n-        borderRadius: 5,\r\n-        borderWidth: 1,\r\n-        borderColor: '#ddd',\r\n-    },\r\n-    gridItemTitle: {\r\n-        fontWeight: 'bold',\r\n-        fontSize: 18,\r\n-        marginBottom: 4,\r\n-    },\r\n-    gridItemInfo: {\r\n-        fontSize: 16,\r\n-        marginBottom: 8,\r\n-    },\r\n-    gridItemCreatedAt: {\r\n-        fontSize: 14,\r\n-        color: '#888',\r\n-    },\r\n-    loading: {\r\n-        fontSize: 20,\r\n-        fontWeight: \"bold\",\r\n-    },\r\n-    error: {\r\n-        fontSize: 20,\r\n-        fontWeight: \"bold\",\r\n-    },\r\n-});\r\n-\r\n export default EyeProductComponent;\r\n"
                },
                {
                    "date": 1708343076060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n }\r\n \r\n const EyeProductComponent: React.FC<Props> = ({ eyeProductParam }) => {\r\n \r\n-  \r\n+    const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n         \r\n                 <View style={styles.gridContainer}>\r\n@@ -31,5 +31,50 @@\n         </View>\r\n     );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+    container: {\r\n+        flex: 1,\r\n+        padding: 6,\r\n+    },\r\n+    gridContainer: {\r\n+        flexDirection: 'row',\r\n+        flexWrap: 'wrap',\r\n+    },\r\n+    gridRow: {\r\n+        flexDirection: 'row',\r\n+        justifyContent: 'space-between',\r\n+        marginBottom: 6,\r\n+    },\r\n+    gridItem: {\r\n+        //width: '48%', // Adjust based on GRID_COLUMN_COUNT and desired proportions\r\n+        padding: 8,\r\n+        marginRight: 2,\r\n+        borderRadius: 5,\r\n+        borderWidth: 1,\r\n+        borderColor: '#ddd',\r\n+    },\r\n+    gridItemTitle: {\r\n+        fontWeight: 'bold',\r\n+        fontSize: 18,\r\n+        marginBottom: 4,\r\n+    },\r\n+    gridItemInfo: {\r\n+        fontSize: 16,\r\n+        marginBottom: 8,\r\n+    },\r\n+    gridItemCreatedAt: {\r\n+        fontSize: 14,\r\n+        color: '#888',\r\n+    },\r\n+    loading: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+    },\r\n+    error: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+    },\r\n+});\r\n+\r\n export default EyeProductComponent;\r\n"
                },
                {
                    "date": 1708343414098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import { Pagination } from 'react-native-pagination';\r\n import { Alert } from 'react-native';\r\n import AlertComponenti from '../uicomponents/AlertComponent';\r\n import EyeProductAddComponent from './EyeProductAdd';\r\n+import EyeProducts from './EyeProducts';\r\n \r\n \r\n \r\n \r\n@@ -21,14 +22,15 @@\n \r\n     const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n-        \r\n-                <View style={styles.gridContainer}>\r\n-                    <Divider />\r\n-                    <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n-                </View>\r\n \r\n+            <View style={styles.gridContainer}>\r\n+                <EyeProducts eyeProductParam={eyeProductParam} />\r\n+                <Divider />\r\n+                <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n+            </View>\r\n+\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1708343422384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,15 +22,13 @@\n \r\n     const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n-\r\n             <View style={styles.gridContainer}>\r\n                 <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n                 <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n             </View>\r\n-\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1708356023574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { Alert } from 'react-native';\r\n import AlertComponenti from '../uicomponents/AlertComponent';\r\n import EyeProductAddComponent from './EyeProductAdd';\r\n import EyeProducts from './EyeProducts';\r\n+import SimpleComponent from './SimpleComponent';\r\n \r\n \r\n \r\n \r\n@@ -22,8 +23,9 @@\n \r\n     const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n+            <SimpleComponent/>\r\n             <View style={styles.gridContainer}>\r\n                 <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n                 <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n"
                },
                {
                    "date": 1708417453059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,11 @@\n     return (\r\n         <View style={styles.container}>\r\n             <SimpleComponent/>\r\n             <View style={styles.gridContainer}>\r\n-                <EyeProducts eyeProductParam={eyeProductParam} />\r\n+                {/* <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n-                <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n+                <EyeProductAddComponent eyeProductParam={eyeProductParam} /> */}\r\n             </View>\r\n         </View>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1708418134024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n     const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n-            <SimpleComponent/>\r\n+            <SimpleComponent  id={1}/>\r\n             <View style={styles.gridContainer}>\r\n                 {/* <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n                 <EyeProductAddComponent eyeProductParam={eyeProductParam} /> */}\r\n"
                },
                {
                    "date": 1708763505719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,13 +23,13 @@\n \r\n     const { theme } = useTheme();\r\n     return (\r\n         <View style={styles.container}>\r\n-            <SimpleComponent  id={1}/>\r\n+            {/* <SimpleComponent  id={1}/> */}\r\n             <View style={styles.gridContainer}>\r\n-                {/* <EyeProducts eyeProductParam={eyeProductParam} />\r\n+                <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n-                <EyeProductAddComponent eyeProductParam={eyeProductParam} /> */}\r\n+                <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n             </View>\r\n         </View>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1711274842368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,23 +13,22 @@\n import SimpleComponent from './SimpleComponent';\r\n \r\n \r\n \r\n-\r\n interface Props {\r\n     eyeProductParam: EyeProductParams;\r\n }\r\n \r\n const EyeProductComponent: React.FC<Props> = ({ eyeProductParam }) => {\r\n \r\n     const { theme } = useTheme();\r\n+\r\n     return (\r\n         <View style={styles.container}>\r\n-            {/* <SimpleComponent  id={1}/> */}\r\n             <View style={styles.gridContainer}>\r\n                 <EyeProducts eyeProductParam={eyeProductParam} />\r\n                 <Divider />\r\n-                <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n+                {/* <EyeProductAddComponent eyeProductParam={eyeProductParam} /> */}\r\n             </View>\r\n         </View>\r\n     );\r\n };\r\n"
                }
            ],
            "date": 1708342967522,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Linking, FlatList } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\nimport { useEyeProduct } from '../hooks/useEyeOnProduct';\r\nimport { EyeProduct, EyeProductParams } from '../entity/Eye.dto';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { Pagination } from 'react-native-pagination';\r\nimport { Alert } from 'react-native';\r\nimport AlertComponenti from '../uicomponents/AlertComponent';\r\nimport EyeProductAddComponent from './EyeProductAdd';\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    eyeProductParam: EyeProductParams;\r\n}\r\n\r\nconst EyeProductComponent: React.FC<Props> = ({ eyeProductParam }) => {\r\n\r\n    const { theme } = useTheme();\r\n\r\n    const queryClient = useQueryClient();\r\n\r\n    const { data, error, isLoading, isError, deleteMutation, addMutation } = useEyeProduct(eyeProductParam, queryClient);\r\n\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    // Define a function to update the page number when the user navigates to a different page\r\n    const handlePageChange = (newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleDelete = async (event, productId: number) => {\r\n        event.preventDefault()\r\n        try {\r\n            const result = await deleteMutation.mutateAsync(productId);\r\n            console.log('Delete successful', result);\r\n        } catch (error) {\r\n            console.error('Delete failed', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // const handleDelete = (productId) => {\r\n    //     await deletee(productId);\r\n    //   };\r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n            {data && (\r\n                <View style={styles.gridContainer}>\r\n                    {data.eyeProducts.map((eyeProduct, index) => (\r\n                        <View key={index} style={styles.gridRow}>\r\n                            {renderGridItem(eyeProduct, index)}\r\n                        </View>\r\n\r\n\r\n                        //     <FlatList\r\n                        //     data={data.eyeProducts}\r\n                        //     renderItem={({ item, index }) => renderGridItem(item, index)} // Use your own renderGridItem function\r\n                        //     keyExtractor={(item) => item.id}\r\n                        //     // Render the Pagination component at the bottom of the FlatList component\r\n                        //     ListFooterComponent={\r\n                        //         <Pagination\r\n                        //             pageCount={data?.count}\r\n                        //             activePage={page}\r\n                        //             onPageChange={handlePageChange}\r\n                        //             // containerStyle={PaginationContainerStyle}\r\n\r\n                        //         />\r\n\r\n                        //     }\r\n                        // />\r\n\r\n                    ))}\r\n                    <Divider />\r\n                    <EyeProductAddComponent eyeProductParam={eyeProductParam} />\r\n\r\n\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 6,\r\n    },\r\n    gridContainer: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n    },\r\n    gridRow: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 6,\r\n    },\r\n    gridItem: {\r\n        //width: '48%', // Adjust based on GRID_COLUMN_COUNT and desired proportions\r\n        padding: 8,\r\n        marginRight: 2,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n    },\r\n    gridItemTitle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        marginBottom: 4,\r\n    },\r\n    gridItemInfo: {\r\n        fontSize: 16,\r\n        marginBottom: 8,\r\n    },\r\n    gridItemCreatedAt: {\r\n        fontSize: 14,\r\n        color: '#888',\r\n    },\r\n    loading: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    },\r\n    error: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    },\r\n});\r\n\r\nexport default EyeProductComponent;\r\n"
        }
    ]
}