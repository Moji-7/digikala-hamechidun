{
    "sourceFile": "components/forms/EyeProductSubmitButton.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 44,
            "patches": [
                {
                    "date": 1708242472770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708243186964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n     const dispatch = useDispatch();\r\n     const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-    const [submitItems] = useSubmitItemsMutation(); \r\n+    const [submitItems ,{ isError, error }] = useSubmitItemsMutation(); \r\n     // Use the useCallback hook to memoize the handleSubmit function\r\n     const handleSubmit =\r\n       (e) => {\r\n         submitItems(digikalaSelectedProduct);\r\n@@ -32,8 +32,10 @@\n       <>\r\n         {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n           <>\r\n             <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n+            {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n+\r\n           </>\r\n         )}\r\n       </>\r\n     );\r\n"
                },
                {
                    "date": 1708243238966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,29 +15,32 @@\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n-    const dispatch = useDispatch();\r\n-    const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-    const [submitItems ,{ isError, error }] = useSubmitItemsMutation(); \r\n-    // Use the useCallback hook to memoize the handleSubmit function\r\n-    const handleSubmit =\r\n-      (e) => {\r\n-        submitItems(digikalaSelectedProduct);\r\n-   \r\n-      }\r\n-     // [dispatch] // Pass the dispatch function as a dependency\r\n-   // );\r\n-    \r\n-    return (\r\n-      <>\r\n-        {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n-          <>\r\n-            <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n-            {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n+  const dispatch = useDispatch();\r\n+  const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n+  const [submitItems, { isError, error }, { isSuccess, data }] = useSubmitItemsMutation();\r\n+  // Use the useCallback hook to memoize the handleSubmit function\r\n+  const handleSubmit =\r\n+    (e) => {\r\n+      submitItems(digikalaSelectedProduct);\r\n\\ No newline at end of file\n \r\n-          </>\r\n-        )}\r\n-      </>\r\n-    );\r\n-    };\r\n-    export default EyeProductSubmitComponent;\n+    }\r\n+  // [dispatch] // Pass the dispatch function as a dependency\r\n+  // );\r\n+\r\n+  return (\r\n+    <>\r\n+      {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n+        <>\r\n+          <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n+          {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n+          {isSuccess && (\r\n+            <Text>Items submitted successfully! Server response: {data}</Text>\r\n+          )}\r\n+\r\n+        </>\r\n+      )}\r\n+    </>\r\n+  );\r\n+};\r\n+export default EyeProductSubmitComponent;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708243303159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-  const [submitItems, { isError, error }, { isSuccess, data }] = useSubmitItemsMutation();\r\n+  const [submitItems, { isError, error , isSuccess, data }] = useSubmitItemsMutation();\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n"
                },
                {
                    "date": 1708243321645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n           {isSuccess && (\r\n-            <Text>Items submitted successfully! Server response: {data}</Text>\r\n+            <Text>{isSuccess}Items submitted successfully! Server response: {data}</Text>\r\n           )}\r\n \r\n         </>\r\n       )}\r\n"
                },
                {
                    "date": 1708243350596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n           {isSuccess && (\r\n-            <Text>{isSuccess}Items submitted successfully! Server response: {data}</Text>\r\n+            <Text>{isSuccess}Items submitted successfully! Server response: </Text>\r\n           )}\r\n \r\n         </>\r\n       )}\r\n"
                },
                {
                    "date": 1708244026828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,24 @@\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/eyeProductsSelected.reducer';\r\n-import { useSubmitItemsMutation } from '../reduxApi/api';\r\n+import { useSubmitItemsMutation,useGetEyeQuery } from '../reduxApi/api';\r\n \r\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-  const [submitItems, { isError, error , isSuccess, data }] = useSubmitItemsMutation();\r\n+  const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n+\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n+      const params='?page=1&length=10'\r\n+      const { data, isLoading } = useGetEyeQuery(params);\r\n \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n"
                },
                {
                    "date": 1708244140926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n       const params='?page=1&length=10'\r\n-      const { data, isLoading } = useGetEyeQuery(params);\r\n+      const [getEye] = useGetEyeQuery(params);\r\n \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n"
                },
                {
                    "date": 1708244168571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,15 +18,15 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-\r\n+const [getEye] = useGetEyeQuery(params);\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n       const params='?page=1&length=10'\r\n-      const [getEye] = useGetEyeQuery(params);\r\n+      getEye(params);\r\n \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n"
                },
                {
                    "date": 1708244182926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-const [getEye] = useGetEyeQuery(params);\r\n+const [getEye] = useGetEyeQuery();\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n"
                },
                {
                    "date": 1708244200937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-const [getEye] = useGetEyeQuery();\r\n+   const params='?page=1&length=10'\r\n+const [getEye] = useGetEyeQuery(params);\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n"
                },
                {
                    "date": 1708244217936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,9 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-   const params='?page=1&length=10'\r\n-const [getEye] = useGetEyeQuery(params);\r\n+\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n"
                },
                {
                    "date": 1708244227138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n+      const [getEye] = useGetEyeQuery(params);\r\n       const params='?page=1&length=10'\r\n       getEye(params);\r\n \r\n     }\r\n"
                },
                {
                    "date": 1708244257009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,14 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-\r\n+  const [getEye] = useGetEyeQuery(\"params\");\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n-      const [getEye] = useGetEyeQuery(params);\r\n+    \r\n       const params='?page=1&length=10'\r\n       getEye(params);\r\n \r\n     }\r\n"
                },
                {
                    "date": 1708244310359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,23 +18,23 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-  const [getEye] = useGetEyeQuery(\"params\");\r\n+  const {data} = useGetEyeQuery(\"params\");\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n     \r\n       const params='?page=1&length=10'\r\n-      getEye(params);\r\n-\r\n+    \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n   return (\r\n     <>\r\n+    {data}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708244378111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,23 +18,21 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n-  const {data} = useGetEyeQuery(\"params\");\r\n+\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n     \r\n-      const params='?page=1&length=10'\r\n-    \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n   return (\r\n     <>\r\n-    {data}\r\n+    \r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708246764189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,18 +8,18 @@\n \r\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n-import { submitItems } from '../reduxApi/eyeProductsSelected.reducer';\r\n+import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation,useGetEyeQuery } from '../reduxApi/api';\r\n \r\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-  const [submitItems, { isError, error , isSuccess }] = useSubmitItemsMutation();\r\n+  const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n"
                },
                {
                    "date": 1708247641026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n+  const eyeProducts = useSelector((state) => state.eyeProducts.eyeProducts);\r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n@@ -30,9 +31,9 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    \r\n+    {eyeProducts}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708247671623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    {eyeProducts}\r\n+    salaaaaaaaaaam{eyeProducts}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708247695440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n-  const eyeProducts = useSelector((state) => state.eyeProducts.eyeProducts);\r\n+  const eyeProducts = useSelector((state) => state.eyeProducts);\r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n"
                },
                {
                    "date": 1708247711662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    salaaaaaaaaaam{eyeProducts}\r\n+    salaaaaaaaaaam{eyeProducts?}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708247725272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    salaaaaaaaaaam{eyeProducts?}\r\n+    salaaaaaaaaaam{eyeProducts && eyeProducts}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708247757872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    salaaaaaaaaaam{eyeProducts && eyeProducts}\r\n+    salaaaaaaaaaam{eyeProducts && eyeProducts[0]?.id}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708256311625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n-  const eyeProducts = useSelector((state) => state.eyeProducts);\r\n \r\n+\r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n@@ -31,9 +31,8 @@\n   // );\r\n \r\n   return (\r\n     <>\r\n-    salaaaaaaaaaam{eyeProducts && eyeProducts[0]?.id}\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n           <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n           {isError && <Text>Something went wrong! Error: {error.message}</Text>}\r\n"
                },
                {
                    "date": 1708256392491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n-import { useSubmitItemsMutation,useGetEyeQuery } from '../reduxApi/api';\r\n+import { useSubmitItemsMutation } from '../reduxApi/api';\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708257230055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n+import { unwrapResult } from '@reduxjs/toolkit';\r\n \r\n \r\n \r\n \r\n@@ -21,11 +22,17 @@\n   const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n-  const handleSubmit =\r\n+  const handleSubmit = async () => {\r\n     (e) => {\r\n-      submitItems(digikalaSelectedProduct);\r\n+     // submitItems(digikalaSelectedProduct);\r\n+      const resultAction = await dispatch(submitItems(digikalaSelectedProduct));\r\n+      const payload = unwrapResult(resultAction);\r\n+         // dispatch the addSaveProduct reducer with the payload\r\n+         dispatch(addSaveProduct(payload));\r\n+\r\n+\r\n     \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n"
                },
                {
                    "date": 1708257247378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n      // submitItems(digikalaSelectedProduct);\r\n       const resultAction = await dispatch(submitItems(digikalaSelectedProduct));\r\n       const payload = unwrapResult(resultAction);\r\n          // dispatch the addSaveProduct reducer with the payload\r\n-         dispatch(addSaveProduct(payload));\r\n+         dispatch(addEyeProduct(payload));\r\n \r\n \r\n     \r\n     }\r\n"
                },
                {
                    "date": 1708257267816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n import { unwrapResult } from '@reduxjs/toolkit';\r\n+import { addEyeProduct } from '../reduxApi/eyeProducts.reducer';\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708258196042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,8 @@\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n-import { unwrapResult } from '@reduxjs/toolkit';\r\n-import { addEyeProduct } from '../reduxApi/eyeProducts.reducer';\r\n \r\n \r\n \r\n \r\n@@ -23,17 +21,12 @@\n   const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n-  const handleSubmit = async () => {\r\n+  const handleSubmit =\r\n     (e) => {\r\n-     // submitItems(digikalaSelectedProduct);\r\n-      const resultAction = await dispatch(submitItems(digikalaSelectedProduct));\r\n-      const payload = unwrapResult(resultAction);\r\n-         // dispatch the addSaveProduct reducer with the payload\r\n-         dispatch(addEyeProduct(payload));\r\n-\r\n-\r\n+      submitItems(digikalaSelectedProduct);\r\n+      \r\n     \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n"
                },
                {
                    "date": 1708313501312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,17 +17,15 @@\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-  const [submitItems, { isError, error , isSuccess ,data}] = useSubmitItemsMutation();\r\n+  const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n-      \r\n-    \r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n"
                },
                {
                    "date": 1708313550155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,16 +10,18 @@\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n+import { useSubmitItemsMutation2 } from '../reduxApi/api2';\r\n \r\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n+  const [addItems] = useSubmitItemsMutation2();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n"
                },
                {
                    "date": 1708313596273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,18 +10,18 @@\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n-import { useSubmitItemsMutation2 } from '../reduxApi/api2';\r\n+import { useSubmitItemsMutationC } from '../reduxApi/api2';\r\n \r\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n-  const [addItems] = useSubmitItemsMutation2();\r\n+  const [addItems] = useSubmitItemsMutationC();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n"
                },
                {
                    "date": 1708313648834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,18 +10,18 @@\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n-import { useSubmitItemsMutationC } from '../reduxApi/api2';\r\n+import { useAddItemMutation } from '../reduxApi/api2';\r\n \r\n \r\n \r\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n-  const [addItems] = useSubmitItemsMutationC();\r\n+  const [addItems] = useAddItemMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n"
                },
                {
                    "date": 1708313704863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,13 @@\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n       submitItems(digikalaSelectedProduct);\r\n+      const newItem = {\r\n+        name: 'Ali',\r\n+        timestamp: Date.now()\r\n+      };\r\n+      addItems(newItem)\r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n"
                },
                {
                    "date": 1708313804801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n-      submitItems(digikalaSelectedProduct);\r\n+      //submitItems(digikalaSelectedProduct);\r\n       const newItem = {\r\n         name: 'Ali',\r\n         timestamp: Date.now()\r\n       };\r\n"
                },
                {
                    "date": 1708316450488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,20 +19,20 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n-  const [addItems] = useAddItemMutation();\r\n+ // const [addItems] = useAddItemMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n-      //submitItems(digikalaSelectedProduct);\r\n-      const newItem = {\r\n-        name: 'Ali',\r\n-        timestamp: Date.now()\r\n-      };\r\n-      addItems(newItem)\r\n+      submitItems(digikalaSelectedProduct);\r\n+      // const newItem = {\r\n+      //   name: 'Ali',\r\n+      //   timestamp: Date.now()\r\n+      // };\r\n+      // addItems(newItem)\r\n     }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n"
                },
                {
                    "date": 1708322237629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,16 +18,16 @@\n \r\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n-  const [submitItems, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n+  const [submitItemsApi, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n  // const [addItems] = useAddItemMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit =\r\n     (e) => {\r\n-      submitItems(digikalaSelectedProduct);\r\n+      submitItemsApi(digikalaSelectedProduct);\r\n       // const newItem = {\r\n       //   name: 'Ali',\r\n       //   timestamp: Date.now()\r\n       // };\r\n"
                },
                {
                    "date": 1708322314167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,11 @@\n  // const [addItems] = useAddItemMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n-  const handleSubmit =\r\n-    (e) => {\r\n-      submitItemsApi(digikalaSelectedProduct);\r\n+  const handleSubmit = async(e) => {\r\n+      const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n+console.log(result);\r\n       // const newItem = {\r\n       //   name: 'Ali',\r\n       //   timestamp: Date.now()\r\n       // };\r\n"
                },
                {
                    "date": 1708322524534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n-import { submitItems } from '../reduxApi/digikalaProducts.reducer';\r\n+import { removeItem } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n import { useAddItemMutation } from '../reduxApi/api2';\r\n \r\n \r\n@@ -26,8 +26,9 @@\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit = async(e) => {\r\n       const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n console.log(result);\r\n+dispatch(removeItem(result));\r\n       // const newItem = {\r\n       //   name: 'Ali',\r\n       //   timestamp: Date.now()\r\n       // };\r\n"
                },
                {
                    "date": 1708322544634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n-import { removeItem } from '../reduxApi/digikalaProducts.reducer';\r\n+import { removeItem,removeAllItem } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n import { useAddItemMutation } from '../reduxApi/api2';\r\n \r\n \r\n"
                },
                {
                    "date": 1708322562285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n import { Alert } from 'react-native';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n-import { removeItem,removeAllItem } from '../reduxApi/digikalaProducts.reducer';\r\n+import { removeItem, removeAllItem } from '../reduxApi/digikalaProducts.reducer';\r\n import { useSubmitItemsMutation } from '../reduxApi/api';\r\n import { useAddItemMutation } from '../reduxApi/api2';\r\n \r\n \r\n@@ -19,22 +19,22 @@\n const EyeProductSubmitComponent: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItemsApi, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n- // const [addItems] = useAddItemMutation();\r\n+  // const [addItems] = useAddItemMutation();\r\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n-  const handleSubmit = async(e) => {\r\n-      const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n-console.log(result);\r\n-dispatch(removeItem(result));\r\n-      // const newItem = {\r\n-      //   name: 'Ali',\r\n-      //   timestamp: Date.now()\r\n-      // };\r\n-      // addItems(newItem)\r\n-    }\r\n+  const handleSubmit = async (e) => {\r\n+    const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n+    console.log(result);\r\n+    dispatch(removeAllItem(result));\r\n+    // const newItem = {\r\n+    //   name: 'Ali',\r\n+    //   timestamp: Date.now()\r\n+    // };\r\n+    // addItems(newItem)\r\n+  }\r\n   // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1708322745932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   const handleSubmit = async (e) => {\r\n     const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n     console.log(result);\r\n     dispatch(removeAllItem(result));\r\n+    dispatch(removeAllItem(result));\r\n     // const newItem = {\r\n     //   name: 'Ali',\r\n     //   timestamp: Date.now()\r\n     // };\r\n"
                },
                {
                    "date": 1708322798669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,9 @@\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit = async (e) => {\r\n     const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n     console.log(result);\r\n-    dispatch(removeAllItem(result));\r\n-    dispatch(removeAllItem(result));\r\n+    \r\n     // const newItem = {\r\n     //   name: 'Ali',\r\n     //   timestamp: Date.now()\r\n     // };\r\n"
                },
                {
                    "date": 1708323300499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,20 +24,13 @@\n \r\n \r\n   // Use the useCallback hook to memoize the handleSubmit function\r\n   const handleSubmit = async (e) => {\r\n-    const result = await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n-    console.log(result);\r\n+     await submitItemsApi(digikalaSelectedProduct).unwrap();\r\n     \r\n-    // const newItem = {\r\n-    //   name: 'Ali',\r\n-    //   timestamp: Date.now()\r\n-    // };\r\n-    // addItems(newItem)\r\n   }\r\n-  // [dispatch] // Pass the dispatch function as a dependency\r\n-  // );\r\n \r\n+\r\n   return (\r\n     <>\r\n       {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n         <>\r\n"
                },
                {
                    "date": 1708324657075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \r\n \r\n \r\n \r\n-const EyeProductSubmitComponent: React.FC = () => {\r\n+const DigikalaSelectedProductSubmitButton: React.FC = () => {\r\n   const dispatch = useDispatch();\r\n   const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n   const [submitItemsApi, { isError, error, isSuccess, data }] = useSubmitItemsMutation();\r\n   // const [addItems] = useAddItemMutation();\r\n@@ -44,5 +44,5 @@\n       )}\r\n     </>\r\n   );\r\n };\r\n-export default EyeProductSubmitComponent;\n\\ No newline at end of file\n+export default DigikalaSelectedProductSubmitButton;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1708242472770,
            "name": "Commit-0",
            "content": "import React, { useCallback, useEffect, useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n\r\nimport { useEyeProduct } from '../hooks/useEyeOnProduct';\r\nimport { EyeProduct, EyeProductParams } from '../entity/Eye.dto';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\n\r\n\r\nimport { Alert } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { submitItems } from '../reduxApi/eyeProductsSelected.reducer';\r\nimport { useSubmitItemsMutation } from '../reduxApi/api';\r\n\r\n\r\n\r\n\r\nconst EyeProductSubmitComponent: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const digikalaSelectedProduct = useSelector((state) => state.digikalaProducts.digikalaProducts);\r\n    const [submitItems] = useSubmitItemsMutation(); \r\n    // Use the useCallback hook to memoize the handleSubmit function\r\n    const handleSubmit =\r\n      (e) => {\r\n        submitItems(digikalaSelectedProduct);\r\n   \r\n      }\r\n     // [dispatch] // Pass the dispatch function as a dependency\r\n   // );\r\n    \r\n    return (\r\n      <>\r\n        {digikalaSelectedProduct.length > 0 && ( // Render when products exist\r\n          <>\r\n            <Button onPress={handleSubmit} title=\"ðŸ˜‹ Submit\" />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n    };\r\n    export default EyeProductSubmitComponent;"
        }
    ]
}