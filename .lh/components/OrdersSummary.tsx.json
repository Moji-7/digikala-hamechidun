{
    "sourceFile": "components/OrdersSummary.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1704283382669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704283422579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n+import usePopulateOrdersSummary from \"./usePopulateOrdersSummary\";\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n"
                },
                {
                    "date": 1704283483582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,90 +1,62 @@\n // Import the necessary modules\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n+import React from \"react\";\r\n+import { View, Text, StyleSheet } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./usePopulateOrdersSummary\";\r\n-\r\n-// Define a custom hook to fetch the data from the API\r\n-\r\n // Define a component to display the data\r\n-const OrdersSummary = () => {\r\n-    // Use the custom hook to get the data\r\n-    const { data, error, isLoading, isError } = usePopulateOrdersSummary();\r\n-\r\n-    // Render the component\r\n-    return (\r\n-        <View style={styles.container}>\r\n-            {/* Show a loading indicator while the data is being fetched */}\r\n-            {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n-            {/* Show an error message if the fetch failed */}\r\n-            {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n-            {/* Show the data if the fetch succeeded */}\r\n-            {data && (\r\n-                <Card>\r\n-                    <Card.Title>Populate Orders Summary</Card.Title>\r\n-                    <Card.Divider />\r\n-                    {/* Use a View component to wrap the data */}\r\n-                    <View style={styles.dataContainer}>\r\n-                        {/* Use a Text component to display the order ID */}\r\n-                        <Text style={styles.dataTitle}>Order ID: {data.id}</Text>\r\n-                        {/* Use a Divider component to separate the data */}\r\n-                        <Divider style={styles.dataDivider} />\r\n-                        {/* Use a ListItem component to display the sum price */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Sum Price</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                        {/* Use a ListItem component to display the max price */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Max Price</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                        {/* Use a ListItem component to display the average price */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Average Price</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                        {/* Use a ListItem component to display the count */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Count</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                    </View>\r\n-                </Card>\r\n-            )}\r\n-\r\n-\r\n-        </View>\r\n-    );\r\n+const OrdersSummary = ({ data, error, isLoading, isError }) => {\r\n+  // Render the component\r\n+  return (\r\n+    <View style={styles.container}>\r\n+      {/* Use a ternary operator to conditionally render the loading, error, or data components */}\r\n+      {isLoading ? (\r\n+        <Text style={styles.loading}>Loading...</Text>\r\n+      ) : isError ? (\r\n+        <Text style={styles.error}>Error: {error.message}</Text>\r\n+      ) : data ? (\r\n+        <Card>\r\n+          <Card.Title>Populate Orders Summary</Card.Title>\r\n+          <Card.Divider />\r\n+          {/* Use a View component to wrap the data */}\r\n+          <View style={styles.dataContainer}>\r\n+            {/* Use a Text component to display the order ID */}\r\n+            <Text style={styles.dataTitle}>Order ID: {data.id}</Text>\r\n+            {/* Use a Divider component to separate the data */}\r\n+            <Divider style={styles.dataDivider} />\r\n+            {/* Use a map function to iterate over the data and render each item as a ListItem component */}\r\n+            {data.map((item) => (\r\n+              <ListItem key={item.title} bottomDivider>\r\n+                <ListItem.Content>\r\n+                  <ListItem.Title>{item.title}</ListItem.Title>\r\n+                  <ListItem.Subtitle>{item.value}</ListItem.Subtitle>\r\n+                </ListItem.Content>\r\n+              </ListItem>\r\n+            ))}\r\n+          </View>\r\n+        </Card>\r\n+      ) : null}\r\n+    </View>\r\n+  );\r\n };\r\n \r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n-    container: {\r\n-        flex: 1,\r\n-        alignItems: \"center\",\r\n-        justifyContent: \"center\",\r\n-    },\r\n-    loading: {\r\n-        fontSize: 20,\r\n-        fontWeight: \"bold\",\r\n-        color: \"blue\",\r\n-    },\r\n-    error: {\r\n-        fontSize: 20,\r\n-        fontWeight: \"bold\",\r\n-        color: \"red\",\r\n-    },\r\n+  container: {\r\n+    flex: 1,\r\n+    alignItems: \"center\",\r\n+    justifyContent: \"center\",\r\n+  },\r\n+  loading: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"blue\",\r\n+  },\r\n+  error: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"red\",\r\n+  },\r\n });\r\n \r\n // Export the component\r\n export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704283610005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,87 @@\n // Import the necessary modules\r\n-import React from \"react\";\r\n-import { View, Text, StyleSheet } from \"react-native\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n+\r\n+// Define a custom hook to fetch the data from the API\r\n+\r\n // Define a component to display the data\r\n const OrdersSummary = ({ data, error, isLoading, isError }) => {\r\n-  // Render the component\r\n-  return (\r\n-    <View style={styles.container}>\r\n-      {/* Use a ternary operator to conditionally render the loading, error, or data components */}\r\n-      {isLoading ? (\r\n-        <Text style={styles.loading}>Loading...</Text>\r\n-      ) : isError ? (\r\n-        <Text style={styles.error}>Error: {error.message}</Text>\r\n-      ) : data ? (\r\n-        <Card>\r\n-          <Card.Title>Populate Orders Summary</Card.Title>\r\n-          <Card.Divider />\r\n-          {/* Use a View component to wrap the data */}\r\n-          <View style={styles.dataContainer}>\r\n-            {/* Use a Text component to display the order ID */}\r\n-            <Text style={styles.dataTitle}>Order ID: {data.id}</Text>\r\n-            {/* Use a Divider component to separate the data */}\r\n-            <Divider style={styles.dataDivider} />\r\n-            {/* Use a map function to iterate over the data and render each item as a ListItem component */}\r\n-            {data.map((item) => (\r\n-              <ListItem key={item.title} bottomDivider>\r\n-                <ListItem.Content>\r\n-                  <ListItem.Title>{item.title}</ListItem.Title>\r\n-                  <ListItem.Subtitle>{item.value}</ListItem.Subtitle>\r\n-                </ListItem.Content>\r\n-              </ListItem>\r\n-            ))}\r\n-          </View>\r\n-        </Card>\r\n-      ) : null}\r\n-    </View>\r\n-  );\r\n+\r\n+    // Render the component\r\n+    return (\r\n+        <View style={styles.container}>\r\n+            {/* Show a loading indicator while the data is being fetched */}\r\n+            {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n+            {/* Show an error message if the fetch failed */}\r\n+            {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n+            {/* Show the data if the fetch succeeded */}\r\n+            {data && (\r\n+                <Card>\r\n+                    <Card.Title>Populate Orders Summary</Card.Title>\r\n+                    <Card.Divider />\r\n+                    {/* Use a View component to wrap the data */}\r\n+                    <View style={styles.dataContainer}>\r\n+                        {/* Use a Text component to display the order ID */}\r\n+                        <Text style={styles.dataTitle}>Order ID: {data.id}</Text>\r\n+                        {/* Use a Divider component to separate the data */}\r\n+                        <Divider style={styles.dataDivider} />\r\n+                        {/* Use a ListItem component to display the sum price */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Sum Price</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                        {/* Use a ListItem component to display the max price */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Max Price</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                        {/* Use a ListItem component to display the average price */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Average Price</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                        {/* Use a ListItem component to display the count */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Count</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                    </View>\r\n+                </Card>\r\n+            )}\r\n+\r\n+\r\n+        </View>\r\n+    );\r\n };\r\n \r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    flex: 1,\r\n-    alignItems: \"center\",\r\n-    justifyContent: \"center\",\r\n-  },\r\n-  loading: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    color: \"blue\",\r\n-  },\r\n-  error: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    color: \"red\",\r\n-  },\r\n+    container: {\r\n+        flex: 1,\r\n+        alignItems: \"center\",\r\n+        justifyContent: \"center\",\r\n+    },\r\n+    loading: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+        color: \"blue\",\r\n+    },\r\n+    error: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+        color: \"red\",\r\n+    },\r\n });\r\n \r\n // Export the component\r\n export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704284373260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n \r\n // Define a component to display the data\r\n const OrdersSummary = ({ data, error, isLoading, isError }) => {\r\n \r\n-    // Render the component\r\n     return (\r\n         <View style={styles.container}>\r\n             {/* Show a loading indicator while the data is being fetched */}\r\n             {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n@@ -33,29 +32,9 @@\n                                 <ListItem.Title>Sum Price</ListItem.Title>\r\n                                 <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n                             </ListItem.Content>\r\n                         </ListItem>\r\n-                        {/* Use a ListItem component to display the max price */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Max Price</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                        {/* Use a ListItem component to display the average price */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Average Price</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n-                        {/* Use a ListItem component to display the count */}\r\n-                        <ListItem bottomDivider>\r\n-                            <ListItem.Content>\r\n-                                <ListItem.Title>Count</ListItem.Title>\r\n-                                <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n-                            </ListItem.Content>\r\n-                        </ListItem>\r\n+            \r\n                     </View>\r\n                 </Card>\r\n             )}\r\n \r\n@@ -81,7 +60,6 @@\n         fontWeight: \"bold\",\r\n         color: \"red\",\r\n     },\r\n });\r\n-\r\n // Export the component\r\n export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704284660781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,19 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n+import usePopulateOrdersSummary from \"./usePopulateOrdersSummary\";\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n const OrdersSummary = ({ data, error, isLoading, isError }) => {\r\n \r\n+    // Use the custom hook to get the data\r\n+    const { data, error, isLoading, isError } = usePopulateOrdersSummary();\r\n+\r\n+    // Render the component\r\n     return (\r\n         <View style={styles.container}>\r\n             {/* Show a loading indicator while the data is being fetched */}\r\n             {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n@@ -32,9 +37,29 @@\n                                 <ListItem.Title>Sum Price</ListItem.Title>\r\n                                 <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n                             </ListItem.Content>\r\n                         </ListItem>\r\n-            \r\n+                        {/* Use a ListItem component to display the max price */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Max Price</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                        {/* Use a ListItem component to display the average price */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Average Price</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n+                        {/* Use a ListItem component to display the count */}\r\n+                        <ListItem bottomDivider>\r\n+                            <ListItem.Content>\r\n+                                <ListItem.Title>Count</ListItem.Title>\r\n+                                <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n+                            </ListItem.Content>\r\n+                        </ListItem>\r\n                     </View>\r\n                 </Card>\r\n             )}\r\n \r\n@@ -60,6 +85,7 @@\n         fontWeight: \"bold\",\r\n         color: \"red\",\r\n     },\r\n });\r\n+\r\n // Export the component\r\n export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704284721299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,14 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./usePopulateOrdersSummary\";\r\n+import usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n-const OrdersSummary = ({ data, error, isLoading, isError }) => {\r\n-\r\n+const OrdersSummary = () => {\r\n     // Use the custom hook to get the data\r\n     const { data, error, isLoading, isError } = usePopulateOrdersSummary();\r\n \r\n     // Render the component\r\n@@ -87,5 +86,5 @@\n     },\r\n });\r\n \r\n // Export the component\r\n-export default OrdersSummary;\r\n+export default ihamechidun;\r\n"
                },
                {
                    "date": 1704288475321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n             {/* Show the data if the fetch succeeded */}\r\n             {data && (\r\n                 <Card>\r\n-                    <Card.Title>Populate Orders Summary</Card.Title>\r\n+                    <Card.Title>Populate Orders Summary 🤑</Card.Title>\r\n                     <Card.Divider />\r\n                     {/* Use a View component to wrap the data */}\r\n                     <View style={styles.dataContainer}>\r\n                         {/* Use a Text component to display the order ID */}\r\n@@ -86,5 +86,5 @@\n     },\r\n });\r\n \r\n // Export the component\r\n-export default ihamechidun;\r\n+export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704288485459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n             {/* Show the data if the fetch succeeded */}\r\n             {data && (\r\n                 <Card>\r\n-                    <Card.Title>Populate Orders Summary 🤑</Card.Title>\r\n+                    <Card.Title>Populate Orders Summary 🤑🐾</Card.Title>\r\n                     <Card.Divider />\r\n                     {/* Use a View component to wrap the data */}\r\n                     <View style={styles.dataContainer}>\r\n                         {/* Use a Text component to display the order ID */}\r\n"
                },
                {
                    "date": 1704776329762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n+import usePopulateOrdersSummary from \"./hooks/usePopulateOrdersSummary\";\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n"
                },
                {
                    "date": 1704777239082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./hooks/usePopulateOrdersSummary\";\r\n+import usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n"
                }
            ],
            "date": 1704283382669,
            "name": "Commit-0",
            "content": "// Import the necessary modules\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, FlatList } from \"react-native\";\r\nimport { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n\r\nimport usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n\r\n// Define a custom hook to fetch the data from the API\r\n\r\n// Define a component to display the data\r\nconst OrdersSummary = () => {\r\n    // Use the custom hook to get the data\r\n    const { data, error, isLoading, isError } = usePopulateOrdersSummary();\r\n\r\n    // Render the component\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* Show a loading indicator while the data is being fetched */}\r\n            {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n            {/* Show an error message if the fetch failed */}\r\n            {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n            {/* Show the data if the fetch succeeded */}\r\n            {data && (\r\n                <Card>\r\n                    <Card.Title>Populate Orders Summary</Card.Title>\r\n                    <Card.Divider />\r\n                    {/* Use a View component to wrap the data */}\r\n                    <View style={styles.dataContainer}>\r\n                        {/* Use a Text component to display the order ID */}\r\n                        <Text style={styles.dataTitle}>Order ID: {data.id}</Text>\r\n                        {/* Use a Divider component to separate the data */}\r\n                        <Divider style={styles.dataDivider} />\r\n                        {/* Use a ListItem component to display the sum price */}\r\n                        <ListItem bottomDivider>\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>Sum Price</ListItem.Title>\r\n                                <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                        </ListItem>\r\n                        {/* Use a ListItem component to display the max price */}\r\n                        <ListItem bottomDivider>\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>Max Price</ListItem.Title>\r\n                                <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                        </ListItem>\r\n                        {/* Use a ListItem component to display the average price */}\r\n                        <ListItem bottomDivider>\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>Average Price</ListItem.Title>\r\n                                <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                        </ListItem>\r\n                        {/* Use a ListItem component to display the count */}\r\n                        <ListItem bottomDivider>\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>Count</ListItem.Title>\r\n                                <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                        </ListItem>\r\n                    </View>\r\n                </Card>\r\n            )}\r\n\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n// Define some styles for the component\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    loading: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"blue\",\r\n    },\r\n    error: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"red\",\r\n    },\r\n});\r\n\r\n// Export the component\r\nexport default OrdersSummary;\r\n"
        }
    ]
}