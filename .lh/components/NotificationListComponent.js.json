{
    "sourceFile": "components/NotificationListComponent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1711283450013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711371369591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n import React from 'react';\r\n import { useSelector } from 'react-redux';\r\n import { View, Text } from 'react-native';\r\n+import { useTheme } from '@rneui/themed';\r\n \r\n-const NotificationList = () => {\r\n+\r\n+const NotificationListComponent = () => {\r\n+  const { theme } = useTheme();\r\n   const notifications = useSelector(state => state.notifications);\r\n \r\n   return (\r\n     <View>\r\n@@ -13,5 +16,21 @@\n     </View>\r\n   );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+  container: {\r\n+      flex: 1,\r\n+      padding: 6,\r\n+  },\r\n+  gridContainer: {\r\n+      flexDirection: 'row',\r\n+      flexWrap: 'wrap',\r\n+  },\r\n+  gridRow: {\r\n+      flexDirection: 'row',\r\n+      justifyContent: 'space-between',\r\n+      marginBottom: 6,\r\n+  },\r\n+});\r\n+\r\n export default NotificationListComponent;\r\n"
                },
                {
                    "date": 1711371526863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,49 @@\n import React from 'react';\r\n import { useSelector } from 'react-redux';\r\n-import { View, Text } from 'react-native';\r\n-import { useTheme } from '@rneui/themed';\r\n+import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n+import { useTheme, Card, Icon } from '@rneui/themed';\r\n \r\n-\r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme();\r\n   const notifications = useSelector(state => state.notifications);\r\n+  const notificationCount = notifications.length;\r\n \r\n   return (\r\n-    <View>\r\n+    <Card containerStyle={styles.cardContainer}>\r\n+      <Card.Title>\r\n+        <Icon name=\"notifications\" size={24} color={theme.colors.primary} />\r\n+        {` Notifications (${notificationCount})`}\r\n+      </Card.Title>\r\n+      <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n-        <Text key={index}>{notification}</Text>\r\n+        <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n+          <Text style={styles.textStyle}>{notification}</Text>\r\n+        </TouchableOpacity>\r\n       ))}\r\n-    </View>\r\n+    </Card>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-      flex: 1,\r\n-      padding: 6,\r\n+  cardContainer: {\r\n+    borderRadius: 8,\r\n+    padding: 10,\r\n   },\r\n-  gridContainer: {\r\n-      flexDirection: 'row',\r\n-      flexWrap: 'wrap',\r\n+  notificationItem: {\r\n+    paddingVertical: 10,\r\n+    paddingHorizontal: 15,\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n   },\r\n-  gridRow: {\r\n-      flexDirection: 'row',\r\n-      justifyContent: 'space-between',\r\n-      marginBottom: 6,\r\n+  evenRow: {\r\n+    backgroundColor: '#f7f7f7', // Light grey for even rows\r\n   },\r\n+  oddRow: {\r\n+    backgroundColor: '#ffffff', // White for odd rows\r\n+  },\r\n+  textStyle: {\r\n+    textAlign: 'center',\r\n+  },\r\n });\r\n \r\n export default NotificationListComponent;\r\n"
                },
                {
                    "date": 1712487798198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,56 @@\n+// NotificationListComponent.js (Updated)\r\n+\r\n import React from 'react';\r\n-import { useSelector } from 'react-redux';\r\n-import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n-import { useTheme, Card, Icon } from '@rneui/themed';\r\n+import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n+import { Card, Text, TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n+import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n \r\n const NotificationListComponent = () => {\r\n-  const { theme } = useTheme();\r\n-  const notifications = useSelector(state => state.notifications);\r\n-  const notificationCount = notifications.length;\r\n+  const { theme } = useTheme(); // Assuming you have a theme context\r\n+  const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n+const notificationCount=notifications.length\r\n+  // Render notifications dynamically\r\n+  const renderedNotifications = Object.keys(notifications).map(productID => {\r\n+    const productData = notifications[productID];\r\n+    const countLikes = productData?.count_likes;\r\n \r\n+    // Assuming count_likes structure: { false: 176, true: 1718 }\r\n+    const falseLikes = countLikes?.false || 0;\r\n+    const trueLikes = countLikes?.true || 0;\r\n+\r\n+    return (\r\n+      <TouchableOpacity\r\n+        key={productID}\r\n+        style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}\r\n+      >\r\n+        <Text style={styles.textStyle}>\r\n+          Product ID: {productID}\r\n+        </Text>\r\n+        <Text style={styles.textStyle}>\r\n+          False Likes: {falseLikes}\r\n+        </Text>\r\n+        <Text style={styles.textStyle}>\r\n+          True Likes: {trueLikes}\r\n+        </Text>\r\n+        {/* Render other relevant data from result_dict */}\r\n+      </TouchableOpacity>\r\n+    );\r\n+  });\r\n+\r\n   return (\r\n     <Card containerStyle={styles.cardContainer}>\r\n       <Card.Title>\r\n         <Icon name=\"notifications\" size={24} color={theme.colors.primary} />\r\n         {` Notifications (${notificationCount})`}\r\n       </Card.Title>\r\n       <Card.Divider />\r\n-      {notifications.map((notification, index) => (\r\n-        <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>{notification}</Text>\r\n-        </TouchableOpacity>\r\n-      ))}\r\n+      {renderedNotifications}\r\n     </Card>\r\n   );\r\n };\r\n \r\n+\r\n const styles = StyleSheet.create({\r\n   cardContainer: {\r\n     borderRadius: 8,\r\n     padding: 10,\r\n"
                },
                {
                    "date": 1712487803854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n   const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n-const notificationCount=notifications.length\r\n+  const notificationCount = notifications.length\r\n   // Render notifications dynamically\r\n   const renderedNotifications = Object.keys(notifications).map(productID => {\r\n     const productData = notifications[productID];\r\n     const countLikes = productData?.count_likes;\r\n"
                },
                {
                    "date": 1712487864652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import React from 'react';\r\n import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n import { Card, Text, TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n-\r\n+import { useTheme } from '@rneui/themed';\r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n   const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n   const notificationCount = notifications.length\r\n"
                },
                {
                    "date": 1712488007592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // NotificationListComponent.js (Updated)\r\n \r\n import React from 'react';\r\n import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n-import { Card, Text, TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n+import { Card, Text, TouchableOpacity,StyleSheet } from 'react-native'; // Import relevant components from your library\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n import { useTheme } from '@rneui/themed';\r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n"
                },
                {
                    "date": 1712488059044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n     return (\r\n       <TouchableOpacity\r\n         key={productID}\r\n-        style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}\r\n+        \r\n       >\r\n         <Text style={styles.textStyle}>\r\n           Product ID: {productID}\r\n         </Text>\r\n"
                },
                {
                    "date": 1712488197057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n // NotificationListComponent.js (Updated)\r\n \r\n import React from 'react';\r\n import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n-import { Card, Text, TouchableOpacity,StyleSheet } from 'react-native'; // Import relevant components from your library\r\n+import { Card,StyleSheet } from 'react-native'; // Import relevant components from your library\r\n+import { Card, Text,ListItem, Divider, useTheme, Button ,TouchableOpacity} from '@rneui/themed';\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n-import { useTheme } from '@rneui/themed';\r\n+\r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n   const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n   const notificationCount = notifications.length\r\n"
                },
                {
                    "date": 1712488211241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // NotificationListComponent.js (Updated)\r\n \r\n import React from 'react';\r\n import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n-import { Card,StyleSheet } from 'react-native'; // Import relevant components from your library\r\n+import { StyleSheet,TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n import { Card, Text,ListItem, Divider, useTheme, Button ,TouchableOpacity} from '@rneui/themed';\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n \r\n const NotificationListComponent = () => {\r\n"
                },
                {
                    "date": 1712488324318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n import React from 'react';\r\n import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n import { StyleSheet,TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n-import { Card, Text,ListItem, Divider, useTheme, Button ,TouchableOpacity} from '@rneui/themed';\r\n+import { Card, Text,ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n \r\n const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n"
                },
                {
                    "date": 1712488686795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,25 +5,25 @@\n import { StyleSheet,TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n import { Card, Text,ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n \r\n-const NotificationListComponent = () => {\r\n+cconst NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n   const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n-  const notificationCount = notifications.length\r\n+\r\n   // Render notifications dynamically\r\n   const renderedNotifications = Object.keys(notifications).map(productID => {\r\n     const productData = notifications[productID];\r\n-    const countLikes = productData?.count_likes;\r\n+    const countLikes = productData?.count_likes?.count_likes; // Adjust the path to the likes count\r\n \r\n     // Assuming count_likes structure: { false: 176, true: 1718 }\r\n     const falseLikes = countLikes?.false || 0;\r\n     const trueLikes = countLikes?.true || 0;\r\n \r\n     return (\r\n       <TouchableOpacity\r\n         key={productID}\r\n-        \r\n+        style={[styles.notificationItem, productID % 2 === 0 ? styles.evenRow : styles.oddRow]}\r\n       >\r\n         <Text style={styles.textStyle}>\r\n           Product ID: {productID}\r\n         </Text>\r\n@@ -41,17 +41,18 @@\n   return (\r\n     <Card containerStyle={styles.cardContainer}>\r\n       <Card.Title>\r\n         <Icon name=\"notifications\" size={24} color={theme.colors.primary} />\r\n-        {` Notifications (${notificationCount})`}\r\n+        {` Notifications (${Object.keys(notifications).length})`}\r\n       </Card.Title>\r\n       <Card.Divider />\r\n       {renderedNotifications}\r\n     </Card>\r\n   );\r\n };\r\n \r\n \r\n+\r\n const styles = StyleSheet.create({\r\n   cardContainer: {\r\n     borderRadius: 8,\r\n     padding: 10,\r\n"
                },
                {
                    "date": 1712488695359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { StyleSheet,TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n import { Card, Text,ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n \r\n-cconst NotificationListComponent = () => {\r\n+const NotificationListComponent = () => {\r\n   const { theme } = useTheme(); // Assuming you have a theme context\r\n   const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n \r\n   // Render notifications dynamically\r\n"
                },
                {
                    "date": 1712493616159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,53 @@\n-// NotificationListComponent.js (Updated)\r\n-\r\n import React from 'react';\r\n-import { useSelector } from 'react-redux'; // Assuming you're using Redux\r\n-import { StyleSheet,TouchableOpacity } from 'react-native'; // Import relevant components from your library\r\n-import { Card, Text,ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you have the MaterialIcons library installed\r\n+import { useSelector } from 'react-redux';\r\n+import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n+import { useTheme, Card, Icon } from '@rneui/themed';\r\n \r\n const NotificationListComponent = () => {\r\n-  const { theme } = useTheme(); // Assuming you have a theme context\r\n-  const notifications = useSelector(state => state.notifications); // Assuming you have a notifications slice in your Redux store\r\n+  const { theme } = useTheme();\r\n+  // Assuming 'notifications' is an array of objects like the JSON data you provided\r\n+  const notifications = useSelector(state => state.notifications);\r\n+  const notificationCount = notifications.length;\r\n \r\n-  // Render notifications dynamically\r\n-  const renderedNotifications = Object.keys(notifications).map(productID => {\r\n-    const productData = notifications[productID];\r\n-    const countLikes = productData?.count_likes?.count_likes; // Adjust the path to the likes count\r\n-\r\n-    // Assuming count_likes structure: { false: 176, true: 1718 }\r\n-    const falseLikes = countLikes?.false || 0;\r\n-    const trueLikes = countLikes?.true || 0;\r\n-\r\n-    return (\r\n-      <TouchableOpacity\r\n-        key={productID}\r\n-        style={[styles.notificationItem, productID % 2 === 0 ? styles.evenRow : styles.oddRow]}\r\n-      >\r\n-        <Text style={styles.textStyle}>\r\n-          Product ID: {productID}\r\n-        </Text>\r\n-        <Text style={styles.textStyle}>\r\n-          False Likes: {falseLikes}\r\n-        </Text>\r\n-        <Text style={styles.textStyle}>\r\n-          True Likes: {trueLikes}\r\n-        </Text>\r\n-        {/* Render other relevant data from result_dict */}\r\n-      </TouchableOpacity>\r\n-    );\r\n-  });\r\n-\r\n   return (\r\n     <Card containerStyle={styles.cardContainer}>\r\n       <Card.Title>\r\n         <Icon name=\"notifications\" size={24} color={theme.colors.primary} />\r\n-        {` Notifications (${Object.keys(notifications).length})`}\r\n+        {` Notifications (${notificationCount})`}\r\n       </Card.Title>\r\n       <Card.Divider />\r\n-      {renderedNotifications}\r\n+      {notifications.map((notification, index) => (\r\n+        <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n+          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n+          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n+          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n+          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n+        </TouchableOpacity>\r\n+      ))}\r\n     </Card>\r\n   );\r\n };\r\n \r\n-\r\n-\r\n const styles = StyleSheet.create({\r\n   cardContainer: {\r\n     borderRadius: 8,\r\n     padding: 10,\r\n   },\r\n   notificationItem: {\r\n+    flexDirection: 'row', // Align items in a row\r\n+    justifyContent: 'space-between', // Distribute space evenly between items\r\n     paddingVertical: 10,\r\n     paddingHorizontal: 15,\r\n-    justifyContent: 'center',\r\n-    alignItems: 'center',\r\n   },\r\n   evenRow: {\r\n     backgroundColor: '#f7f7f7', // Light grey for even rows\r\n   },\r\n   oddRow: {\r\n     backgroundColor: '#ffffff', // White for odd rows\r\n   },\r\n   textStyle: {\r\n+    flex: 1, // Each text item will take equal space\r\n     textAlign: 'center',\r\n   },\r\n });\r\n \r\n"
                },
                {
                    "date": 1712493693058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,8 @@\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n           <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n-          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n-          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n-          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712493731340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n+          <Text style={styles.textStyle}>PID: {notification}</Text> \r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712494217518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification}</Text> \r\n+          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712494307701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,11 @@\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n           <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n+          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n+          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n+          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712494366853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,8 @@\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n           <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n-          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n-          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n-          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712494431486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n+          <Text style={styles.textStyle}>PID: {notification}</Text> \r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712494944850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,12 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification}</Text> \r\n+          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n+          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n+          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n+          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712570299014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications.map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification.PID}</Text> \r\n-          <Text style={styles.textStyle}>Likes: {notification.data.count_likes}</Text>\r\n-          <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n-          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text>\r\n+          <Text style={styles.textStyle}>PID: {notification.product_id}</Text> \r\n+          <Text style={styles.textStyle}>Likes: {notification.likes_count}</Text>\r\n+          {/* <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n+          <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text> */}\r\n         </TouchableOpacity>\r\n       ))}\r\n     </Card>\r\n   );\r\n"
                },
                {
                    "date": 1712573147949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         <Icon name=\"notifications\" size={24} color={theme.colors.primary} />\r\n         {` Notifications (${notificationCount})`}\r\n       </Card.Title>\r\n       <Card.Divider />\r\n-      {notifications.map((notification, index) => (\r\n+      {notifications[0].map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n           <Text style={styles.textStyle}>PID: {notification.product_id}</Text> \r\n           <Text style={styles.textStyle}>Likes: {notification.likes_count}</Text>\r\n           {/* <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n"
                },
                {
                    "date": 1712576092601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,12 @@\n       </Card.Title>\r\n       <Card.Divider />\r\n       {notifications[0].map((notification, index) => (\r\n         <TouchableOpacity key={index} style={[styles.notificationItem, index % 2 === 0 ? styles.evenRow : styles.oddRow]}>\r\n-          <Text style={styles.textStyle}>PID: {notification.product_id}</Text> \r\n+          <Text style={styles.textStyle}>product: {notification.product_id}</Text> \r\n           <Text style={styles.textStyle}>Likes: {notification.likes_count}</Text>\r\n+          <Text style={styles.textStyle}>Details: </Text>\r\n+\r\n           {/* <Text style={styles.textStyle}>Max Likes: {notification.data.max_likes}</Text>\r\n           <Text style={styles.textStyle}>Average Rate: {notification.data.rate_avg}</Text> */}\r\n         </TouchableOpacity>\r\n       ))}\r\n"
                }
            ],
            "date": 1711283450013,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { View, Text } from 'react-native';\r\n\r\nconst NotificationList = () => {\r\n  const notifications = useSelector(state => state.notifications);\r\n\r\n  return (\r\n    <View>\r\n      {notifications.map((notification, index) => (\r\n        <Text key={index}>{notification}</Text>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default NotificationListComponent;\r\n"
        }
    ]
}