{
    "sourceFile": "components/OrdersProductsMost.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1704287332387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704287358169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,28 @@\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n-const OrdersSummary = () => {\n\\ No newline at end of file\n+const OrdersSummary = () => {\r\n+\r\n+    \r\n+// Define some styles for the component\r\n+const styles = StyleSheet.create({\r\n+    container: {\r\n+        flex: 1,\r\n+        alignItems: \"center\",\r\n+        justifyContent: \"center\",\r\n+    },\r\n+    loading: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+        color: \"blue\",\r\n+    },\r\n+    error: {\r\n+        fontSize: 20,\r\n+        fontWeight: \"bold\",\r\n+        color: \"red\",\r\n+    },\r\n+});\r\n+\r\n+// Export the component\r\n+export default OrdersSummary;\r\n"
                },
                {
                    "date": 1704287497918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,19 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n-import usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n \r\n+import usePopulateOrdersSellersMost from './usePopulateOrdersSellersMost';\r\n+import usePopulateOrdersProductsMost from './usePopulateOrdersProductsMost';\r\n+import usePopulateOrderProductPriceExpensive from './usePopulateOrderProductPriceExpensive';\r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n-const OrdersSummary = () => {\r\n+const OrdersProductsMost = () => {\r\n \r\n     \r\n+}\r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n     container: {\r\n         flex: 1,\r\n@@ -31,5 +34,5 @@\n     },\r\n });\r\n \r\n // Export the component\r\n-export default OrdersSummary;\r\n+export default OrdersProductsMost;\r\n"
                },
                {
                    "date": 1704287506731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,10 @@\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n \r\n-import usePopulateOrdersSellersMost from './usePopulateOrdersSellersMost';\r\n import usePopulateOrdersProductsMost from './usePopulateOrdersProductsMost';\r\n-import usePopulateOrderProductPriceExpensive from './usePopulateOrderProductPriceExpensive';\r\n+\r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n const OrdersProductsMost = () => {\r\n"
                },
                {
                    "date": 1704287920373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,59 @@\n \r\n // Define a component to display the data\r\n const OrdersProductsMost = () => {\r\n \r\n+    const { data, error, isLoading, isError } = usePopulateOrdersProductsMost();\r\n+\r\n+    return (\r\n+        <View style={styles.container}>\r\n+          {/* Show a loading indicator while the data is being fetched */}\r\n+          {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n+          {/* Show an error message if the fetch failed */}\r\n+          {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n+          {/* Show the data if the fetch succeeded */}\r\n+          {data && (\r\n+            <Card>\r\n+              <Card.Title>Populate Orders Summary</Card.Title>\r\n+              <Card.Divider />\r\n+              {/* Use a View component to wrap the data */}\r\n+              <View style={styles.dataContainer}>\r\n+                {/* Use a Divider component to separate the data */}\r\n+                <Divider style={styles.dataDivider} />\r\n+                {/* Use a ListItem component to display the sum price */}\r\n+                <ListItem bottomDivider>\r\n+                  <ListItem.Content>\r\n+                    <ListItem.Title>Sum Price</ListItem.Title>\r\n+                    <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n+                  </ListItem.Content>\r\n+                </ListItem>\r\n+                {/* Use a ListItem component to display the max price */}\r\n+                <ListItem bottomDivider>\r\n+                  <ListItem.Content>\r\n+                    <ListItem.Title>Max Price</ListItem.Title>\r\n+                    <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n+                  </ListItem.Content>\r\n+                </ListItem>\r\n+                {/* Use a ListItem component to display the average price */}\r\n+                <ListItem bottomDivider>\r\n+                  <ListItem.Content>\r\n+                    <ListItem.Title>Average Price</ListItem.Title>\r\n+                    <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n+                  </ListItem.Content>\r\n+                </ListItem>\r\n+                {/* Use a ListItem component to display the count */}\r\n+                <ListItem bottomDivider>\r\n+                  <ListItem.Content>\r\n+                    <ListItem.Title>Count</ListItem.Title>\r\n+                    <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n+                  </ListItem.Content>\r\n+                </ListItem>\r\n+              </View>\r\n+            </Card>\r\n+          )}\r\n     \r\n+        </View>\r\n+      );\r\n }\r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n     container: {\r\n"
                },
                {
                    "date": 1704288217607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,57 +13,41 @@\n const OrdersProductsMost = () => {\r\n \r\n     const { data, error, isLoading, isError } = usePopulateOrdersProductsMost();\r\n \r\n-    return (\r\n-        <View style={styles.container}>\r\n-          {/* Show a loading indicator while the data is being fetched */}\r\n-          {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n-          {/* Show an error message if the fetch failed */}\r\n-          {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n-          {/* Show the data if the fetch succeeded */}\r\n-          {data && (\r\n-            <Card>\r\n-              <Card.Title>Populate Orders Summary</Card.Title>\r\n-              <Card.Divider />\r\n-              {/* Use a View component to wrap the data */}\r\n-              <View style={styles.dataContainer}>\r\n-                {/* Use a Divider component to separate the data */}\r\n-                <Divider style={styles.dataDivider} />\r\n-                {/* Use a ListItem component to display the sum price */}\r\n-                <ListItem bottomDivider>\r\n-                  <ListItem.Content>\r\n-                    <ListItem.Title>Sum Price</ListItem.Title>\r\n-                    <ListItem.Subtitle>{data.orders_sum_price}</ListItem.Subtitle>\r\n-                  </ListItem.Content>\r\n-                </ListItem>\r\n-                {/* Use a ListItem component to display the max price */}\r\n-                <ListItem bottomDivider>\r\n-                  <ListItem.Content>\r\n-                    <ListItem.Title>Max Price</ListItem.Title>\r\n-                    <ListItem.Subtitle>{data.orders_max_price}</ListItem.Subtitle>\r\n-                  </ListItem.Content>\r\n-                </ListItem>\r\n-                {/* Use a ListItem component to display the average price */}\r\n-                <ListItem bottomDivider>\r\n-                  <ListItem.Content>\r\n-                    <ListItem.Title>Average Price</ListItem.Title>\r\n-                    <ListItem.Subtitle>{data.orders_average_price}</ListItem.Subtitle>\r\n-                  </ListItem.Content>\r\n-                </ListItem>\r\n-                {/* Use a ListItem component to display the count */}\r\n-                <ListItem bottomDivider>\r\n-                  <ListItem.Content>\r\n-                    <ListItem.Title>Count</ListItem.Title>\r\n-                    <ListItem.Subtitle>{data.orders_count}</ListItem.Subtitle>\r\n-                  </ListItem.Content>\r\n-                </ListItem>\r\n-              </View>\r\n-            </Card>\r\n-          )}\r\n-    \r\n-        </View>\r\n-      );\r\n+     // Define a function to render each item as a ListItem component\r\n+  const renderItem = ({ item }) => (\r\n+    <ListItem bottomDivider>\r\n+      <ListItem.Content>\r\n+        <ListItem.Title>{item.title_fa}</ListItem.Title>\r\n+        <ListItem.Subtitle>{item.rrp_price}</ListItem.Subtitle>\r\n+      </ListItem.Content>\r\n+    </ListItem>\r\n+  );\r\n+\r\n+  // Render the component\r\n+  return (\r\n+    <View style={styles.container}>\r\n+      {/* Show a loading indicator while the data is being fetched */}\r\n+      {isLoading && <Text style={styles.loading}>Loading...</Text>}\r\n+      {/* Show an error message if the fetch failed */}\r\n+      {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n+      {/* Show the data if the fetch succeeded */}\r\n+      {data && (\r\n+        <Card>\r\n+          <Card.Title>Populate Orders Summary</Card.Title>\r\n+          <Card.Divider />\r\n+          {/* Use a FlatList component to render the data */}\r\n+          <FlatList\r\n+            data={data}\r\n+            renderItem={renderItem}\r\n+            keyExtractor={(item) => item.title}\r\n+          />\r\n+        </Card>\r\n+      )}\r\n+    </View>\r\n+  );\r\n+      \r\n }\r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n     container: {\r\n"
                },
                {
                    "date": 1704288285736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   const renderItem = ({ item }) => (\r\n     <ListItem bottomDivider>\r\n       <ListItem.Content>\r\n         <ListItem.Title>{item.title_fa}</ListItem.Title>\r\n-        <ListItem.Subtitle>{item.rrp_price}</ListItem.Subtitle>\r\n+        <ListItem.Subtitle>{item.product_count}</ListItem.Subtitle>\r\n       </ListItem.Content>\r\n     </ListItem>\r\n   );\r\n \r\n"
                },
                {
                    "date": 1704288433773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       {isError && <Text style={styles.error}>Error: {error.message}</Text>}\r\n       {/* Show the data if the fetch succeeded */}\r\n       {data && (\r\n         <Card>\r\n-          <Card.Title>Populate Orders Summary</Card.Title>\r\n+          <Card.Title>Populate product Most 😛</Card.Title>\r\n           <Card.Divider />\r\n           {/* Use a FlatList component to render the data */}\r\n           <FlatList\r\n             data={data}\r\n"
                },
                {
                    "date": 1704777239096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { View, Text, StyleSheet, FlatList } from \"react-native\";\r\n import { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n \r\n \r\n-import usePopulateOrdersProductsMost from './usePopulateOrdersProductsMost';\r\n+import usePopulateOrdersProductsMost from './hooks/usePopulateOrdersProductsMost';\r\n \r\n // Define a custom hook to fetch the data from the API\r\n \r\n // Define a component to display the data\r\n"
                },
                {
                    "date": 1708508584271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n }\r\n // Define some styles for the component\r\n const styles = StyleSheet.create({\r\n     container: {\r\n-        flex: 1,\r\n+       // flex: 1,\r\n         alignItems: \"center\",\r\n         justifyContent: \"center\",\r\n     },\r\n     loading: {\r\n"
                },
                {
                    "date": 1708508854357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   const renderItem = ({ item }) => (\r\n     <ListItem bottomDivider>\r\n       <ListItem.Content>\r\n         <ListItem.Title>{item.title_fa}</ListItem.Title>\r\n-        <ListItem.Subtitle>{item.product_count}</ListItem.Subtitle>\r\n+        <ListItem.Subtitle>( count: {item.product_count} )</ListItem.Subtitle>\r\n       </ListItem.Content>\r\n     </ListItem>\r\n   );\r\n \r\n"
                }
            ],
            "date": 1704287332387,
            "name": "Commit-0",
            "content": "\r\n// Import the necessary modules\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, FlatList } from \"react-native\";\r\nimport { Card, ListItem, Button, Icon, Divider } from \"@rneui/themed\";\r\n\r\nimport usePopulateOrdersSummary from \"./usepopulateOrdersSummary\";\r\n\r\n// Define a custom hook to fetch the data from the API\r\n\r\n// Define a component to display the data\r\nconst OrdersSummary = () => {"
        }
    ]
}