{
    "sourceFile": "components/Commentss.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1707126286472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707126351237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,15 @@\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Commentss = () => {\r\n+const Commentss = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-              salam\r\n+                salam\r\n             </Card>\r\n             {/* <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n             </View> */}\r\n"
                },
                {
                    "date": 1707126405692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n // import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n-\r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n"
                },
                {
                    "date": 1707126436434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,17 @@\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n // import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n-const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n+\r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n const Commentss = () => {\r\n+    \r\n+    const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707126467418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n const Commentss = () => {\r\n     \r\n-    const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+    //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707126476727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+//import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n // import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n"
                },
                {
                    "date": 1707126514641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,22 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-//import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n // import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n // Define types for the API response\r\n \r\n //const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-const Commentss = () => {\r\n-    \r\n-    //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+    const Commentss = () => {\r\n     //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                salam\r\n+              salam sa\r\n             </Card>\r\n             {/* <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n             </View> */}\r\n"
                },
                {
                    "date": 1707126560527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +0,0 @@\n-// components/SettingsScreen.tsx\r\n-import React from 'react';\r\n-import { View, Text, StyleSheet, Linking } from 'react-native';\r\n-import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n-\r\n-\r\n-//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n-// Define types for the API response\r\n-\r\n-//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Commentss = () => {\r\n-    //const [result, extra] = apiData;\r\n-\r\n-    return (\r\n-        <View>\r\n-            <Card>\r\n-              salam sa\r\n-            </Card>\r\n-            {/* <View>\r\n-                <Text>Extra Information: {extra}</Text>\r\n-            </View> */}\r\n-        </View>\r\n-    );\r\n-};\r\n-\r\n-\r\n-\r\n-export default Commentss;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707126567043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+// components/SettingsScreen.tsx\r\n+import React from 'react';\r\n+import { View, Text, StyleSheet, Linking } from 'react-native';\r\n+import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+\r\n+\r\n+//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+// Define types for the API response\r\n+\r\n+//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n+    const Commentss = () => {\r\n+    //const [result, extra] = apiData;\r\n+\r\n+    return (\r\n+        <View>\r\n+            <Card>\r\n+              salam sa\r\n+            </Card>\r\n+            {/* <View>\r\n+                <Text>Extra Information: {extra}</Text>\r\n+            </View> */}\r\n+        </View>\r\n+    );\r\n+};\r\n+\r\n+\r\n+\r\n+export default Commentss;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707126688356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,70 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n-//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+\r\n // Define types for the API response\r\n+type ApiResponse = [\r\n+    {\r\n+        id: number;\r\n+        product_id: number;\r\n+        data: {\r\n+            \"Likes Grouped\": {\r\n+                Sum: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+                Count: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+            };\r\n+            average_rating: string;\r\n+            \"Max Likes in the Dataset\": string;\r\n+            \"Total Number of Likes in the Dataset\": string;\r\n+        };\r\n+        created_at: string;\r\n+    },\r\n+    number\r\n+];\r\n+const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n+const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+    const [result, extra] = apiData;\r\n \r\n-//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n-    const Commentss = () => {\r\n-    //const [result, extra] = apiData;\r\n-\r\n     return (\r\n         <View>\r\n             <Card>\r\n-              salam sa\r\n+                {data.map((item, index) => (\r\n+                    <>\r\n+                        <Text>ID: {item.id}</Text>\r\n+                        {/* <Text>Product ID: {result.product_id}</Text>\r\n+                        <Text>Created At: {result.created_at}</Text>\r\n+                        <View>\r\n+                            <Text>Likes Grouped:</Text>\r\n+                            <ListItem>\r\n+                                <Text>Sum:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <ListItem>\r\n+                                <Text>Count:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n+                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n+                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n+                        </View> */}\r\n+                    </>\r\n+                ))}\r\n             </Card>\r\n-            {/* <View>\r\n+            <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n-            </View> */}\r\n+            </View>\r\n         </View>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1707126717707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         <View>\r\n             <Card>\r\n                 {data.map((item, index) => (\r\n                     <>\r\n-                        <Text>ID: {item.id}</Text>\r\n+                        <Text>ID: {item[0].id}</Text>\r\n                         {/* <Text>Product ID: {result.product_id}</Text>\r\n                         <Text>Created At: {result.created_at}</Text>\r\n                         <View>\r\n                             <Text>Likes Grouped:</Text>\r\n"
                },
                {
                    "date": 1707126732326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         <View>\r\n             <Card>\r\n                 {data.map((item, index) => (\r\n                     <>\r\n-                        <Text>ID: {item[0].id}</Text>\r\n+                        <Text>ID: </Text>\r\n                         {/* <Text>Product ID: {result.product_id}</Text>\r\n                         <Text>Created At: {result.created_at}</Text>\r\n                         <View>\r\n                             <Text>Likes Grouped:</Text>\r\n"
                },
                {
                    "date": 1707127463728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,31 +36,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data.map((item, index) => (\r\n-                    <>\r\n-                        <Text>ID: </Text>\r\n-                        {/* <Text>Product ID: {result.product_id}</Text>\r\n-                        <Text>Created At: {result.created_at}</Text>\r\n-                        <View>\r\n-                            <Text>Likes Grouped:</Text>\r\n-                            <ListItem>\r\n-                                <Text>Sum:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <ListItem>\r\n-                                <Text>Count:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n-                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n-                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n-                        </View> */}\r\n-                    </>\r\n-                ))}\r\n+             \r\n             </Card>\r\n             <View>\r\n                 <Text>Extra Information: {extra}</Text>\r\n             </View>\r\n"
                },
                {
                    "date": 1707127488450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     },\r\n     number\r\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n-const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n     const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707127500351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // components/SettingsScreen.tsx\r\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+//import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n \r\n \r\n \r\n // Define types for the API response\r\n"
                },
                {
                    "date": 1707127527827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n             <Card>\r\n              \r\n             </Card>\r\n             <View>\r\n-                <Text>Extra Information: {extra}</Text>\r\n+                <Text>Extra Information:</Text>\r\n             </View>\r\n         </View>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1707127536753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     number\r\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n //const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n-    const [result, extra] = apiData;\r\n+    //const [result, extra] = apiData;\r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n"
                },
                {
                    "date": 1707127553204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+// components/SettingsScreen.tsx\r\n+import React from 'react';\r\n+import { View, Text, StyleSheet, Linking } from 'react-native';\r\n+import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n+import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+\r\n+\r\n+\r\n+// Define types for the API response\r\n+type ApiResponse = [\r\n+    {\r\n+        id: number;\r\n+        product_id: number;\r\n+        data: {\r\n+            \"Likes Grouped\": {\r\n+                Sum: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+                Count: {\r\n+                    \"Zero Likes\": number;\r\n+                    \"Non-Zero Likes\": number;\r\n+                };\r\n+            };\r\n+            average_rating: string;\r\n+            \"Max Likes in the Dataset\": string;\r\n+            \"Total Number of Likes in the Dataset\": string;\r\n+        };\r\n+        created_at: string;\r\n+    },\r\n+    number\r\n+];\r\n+const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n+const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+   \r\n+\r\n+    return (\r\n+        <View>\r\n+            <Card>\r\n+                {data.map((item, index) => (\r\n+                    <>\r\n+                        <Text>ID: </Text>\r\n+                        {/* <Text>Product ID: {result.product_id}</Text>\r\n+                        <Text>Created At: {result.created_at}</Text>\r\n+                        <View>\r\n+                            <Text>Likes Grouped:</Text>\r\n+                            <ListItem>\r\n+                                <Text>Sum:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <ListItem>\r\n+                                <Text>Count:</Text>\r\n+                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n+                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n+                            </ListItem>\r\n+                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n+                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n+                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n+                        </View> */}\r\n+                    </>\r\n+                ))}\r\n+            </Card>\r\n+            <View>\r\n+              \r\n+            </View>\r\n+        </View>\r\n+    );\r\n+};\r\n+\r\n+\r\n+\r\n+export default Commentss;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707127576647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data.map((item, index) => (\r\n+                {data.dataset.map((item, index) => (\r\n                     <>\r\n                         <Text>ID: </Text>\r\n                         {/* <Text>Product ID: {result.product_id}</Text>\r\n                         <Text>Created At: {result.created_at}</Text>\r\n@@ -69,56 +69,5 @@\n };\r\n \r\n \r\n \r\n-export default Commentss;\n-// components/SettingsScreen.tsx\r\n-import React from 'react';\r\n-import { View, Text, StyleSheet, Linking } from 'react-native';\r\n-import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n-//import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n-\r\n-\r\n-\r\n-// Define types for the API response\r\n-type ApiResponse = [\r\n-    {\r\n-        id: number;\r\n-        product_id: number;\r\n-        data: {\r\n-            \"Likes Grouped\": {\r\n-                Sum: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-                Count: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-            };\r\n-            average_rating: string;\r\n-            \"Max Likes in the Dataset\": string;\r\n-            \"Total Number of Likes in the Dataset\": string;\r\n-        };\r\n-        created_at: string;\r\n-    },\r\n-    number\r\n-];\r\n-const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n-//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n-    //const [result, extra] = apiData;\r\n-\r\n-    return (\r\n-        <View>\r\n-            <Card>\r\n-             \r\n-            </Card>\r\n-            <View>\r\n-                <Text>Extra Information:</Text>\r\n-            </View>\r\n-        </View>\r\n-    );\r\n-};\r\n-\r\n-\r\n-\r\n export default Commentss;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1707127661982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     return (\r\n         <View>\r\n             <Card>\r\n                 {data.dataset.map((item, index) => (\r\n-                    <>\r\n+                    <View key={index}>\r\n                         <Text>ID: </Text>\r\n                         {/* <Text>Product ID: {result.product_id}</Text>\r\n                         <Text>Created At: {result.created_at}</Text>\r\n                         <View>\r\n@@ -57,9 +57,9 @@\n                             <Text>Average Rating: {result.data.average_rating}</Text>\r\n                             <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n                             <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n                         </View> */}\r\n-                    </>\r\n+                    </View>\r\n                 ))}\r\n             </Card>\r\n             <View>\r\n               \r\n"
                },
                {
                    "date": 1707127693941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,31 +36,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data.dataset.map((item, index) => (\r\n-                    <View key={index}>\r\n-                        <Text>ID: </Text>\r\n-                        {/* <Text>Product ID: {result.product_id}</Text>\r\n-                        <Text>Created At: {result.created_at}</Text>\r\n-                        <View>\r\n-                            <Text>Likes Grouped:</Text>\r\n-                            <ListItem>\r\n-                                <Text>Sum:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Sum[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <ListItem>\r\n-                                <Text>Count:</Text>\r\n-                                <Text>Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Zero Likes\"]}</Text>\r\n-                                <Text>Non-Zero Likes: {result.data[\"Likes Grouped\"].Count[\"Non-Zero Likes\"]}</Text>\r\n-                            </ListItem>\r\n-                            <Text>Average Rating: {result.data.average_rating}</Text>\r\n-                            <Text>Max Likes in the Dataset: {result.data[\"Max Likes in the Dataset\"]}</Text>\r\n-                            <Text>Total Number of Likes in the Dataset: {result.data[\"Total Number of Likes in the Dataset\"]}</Text>\r\n-                        </View> */}\r\n-                    </View>\r\n-                ))}\r\n+               \r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134199715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,10 @@\n     number\r\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+\r\n+const [ res,count ] = data;\r\n    \r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707134258078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n-const [ res,count ] = data;\r\n+//const [ res,count ] = data;\r\n    \r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707134280781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               \r\n+               {data}\r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134288649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               {data}\r\n+               {data && data}\r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134316748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n-//const [ res,count ] = data;\r\n+const [ dataset,count ] = data;\r\n    \r\n \r\n     return (\r\n         <View>\r\n"
                },
                {
                    "date": 1707134333987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               {data && data}\r\n+              \r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134343256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,15 +32,15 @@\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n-const [ dataset,count ] = data;\r\n+//const [ res,count ] = data;\r\n    \r\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-              \r\n+               {data && data}\r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134439059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               {data && data}\r\n+               {data &&    <Text>Zero Likes: {data.dataset[0].data['Likes Grouped'].Sum['Zero Likes']}</Text>}\r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134563026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               {data &&    <Text>Zero Likes: {data.dataset[0].data['Likes Grouped'].Sum['Zero Likes']}</Text>}\r\n+               {data &&    <Text>Zero Likes: {data.count}</Text>}\r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134751834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,12 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-               {data &&    <Text>Zero Likes: {data.count}</Text>}\r\n+            {data.dataset.map((item) => (\r\n+        <CommentsDatasetItem key={item.id} dataset={item} />\r\n+      ))}\r\n+               \r\n             </Card>\r\n             <View>\r\n               \r\n             </View>\r\n"
                },
                {
                    "date": 1707134784905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import React from 'react';\r\n import { View, Text, StyleSheet, Linking } from 'react-native';\r\n import { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n+import CommentsDatasetItem from './uicomponents/CommentsDatasetItem';\r\n \r\n \r\n \r\n // Define types for the API response\r\n@@ -30,23 +31,23 @@\n     },\r\n     number\r\n ];\r\n const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n-const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n+    const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n \r\n-//const [ res,count ] = data;\r\n-   \r\n+    //const [ res,count ] = data;\r\n \r\n+\r\n     return (\r\n         <View>\r\n             <Card>\r\n-            {data.dataset.map((item) => (\r\n-        <CommentsDatasetItem key={item.id} dataset={item} />\r\n-      ))}\r\n-               \r\n+                {data.dataset.map((item) => (\r\n+                    <CommentsDatasetItem key={item.id} dataset={item} />\r\n+                ))}\r\n+\r\n             </Card>\r\n             <View>\r\n-              \r\n+\r\n             </View>\r\n         </View>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1707134815122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data.dataset.map((item) => (\r\n+                {data && data.dataset.map((item) => (\r\n                     <CommentsDatasetItem key={item.id} dataset={item} />\r\n                 ))}\r\n \r\n             </Card>\r\n"
                },
                {
                    "date": 1707137104777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,45 +5,21 @@\n import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n import CommentsDatasetItem from './uicomponents/CommentsDatasetItem';\r\n \r\n \r\n-\r\n-// Define types for the API response\r\n-type ApiResponse = [\r\n-    {\r\n-        id: number;\r\n-        product_id: number;\r\n-        data: {\r\n-            \"Likes Grouped\": {\r\n-                Sum: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-                Count: {\r\n-                    \"Zero Likes\": number;\r\n-                    \"Non-Zero Likes\": number;\r\n-                };\r\n-            };\r\n-            average_rating: string;\r\n-            \"Max Likes in the Dataset\": string;\r\n-            \"Total Number of Likes in the Dataset\": string;\r\n-        };\r\n-        created_at: string;\r\n-    },\r\n-    number\r\n-];\r\n-const Commentss: React.FC<{ apiData: ApiResponse }> = ({ apiData }) => {\r\n+const Commentss: React.FC<{}> = ({ }) => {\r\n     const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n-\r\n-    //const [ res,count ] = data;\r\n-\r\n-\r\n     return (\r\n         <View>\r\n             <Card>\r\n-                {data && data.dataset.map((item) => (\r\n-                    <CommentsDatasetItem key={item.id} dataset={item} />\r\n-                ))}\r\n+                {data &&\r\n+                    <>\r\n+                        Saved Count:{data.count}\r\n+                        {data.dataset.map((item) => (\r\n+                            <CommentsDatasetItem key={item.id} dataset={item} />\r\n+                        ))}\r\n+                    </>\r\n+                }\r\n \r\n             </Card>\r\n             <View>\r\n \r\n"
                }
            ],
            "date": 1707126286472,
            "name": "Commit-0",
            "content": "// components/SettingsScreen.tsx\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, Linking } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button } from '@rneui/themed';\r\n// import { useHamechidunComments } from './hooks/useHamechidunComments';\r\n\r\n\r\n//const { data, error, isLoading, isError } = useHamechidunComments(\"Params\");\r\n// Define types for the API response\r\n\r\n//const Comments: React.FC<{ apiData: number }> = ({ apiData }) => {\r\n    const Commentss = () => {\r\n    //const [result, extra] = apiData;\r\n\r\n    return (\r\n        <View>\r\n            <Card>\r\n              salam\r\n            </Card>\r\n            {/* <View>\r\n                <Text>Extra Information: {extra}</Text>\r\n            </View> */}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Commentss;"
        }
    ]
}