{
    "sourceFile": "components/reduxApi/eyeProductsSelected.reducer.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1708245892321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1708245892321,
            "name": "Commit-0",
            "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { useSubmitItemsMutation } from \"./api\";\r\n\r\n// Define the initial state\r\nconst initialState = {\r\n  digikalaProducts: [],\r\n};\r\n\r\n// Create the slice\r\nconst digikalaProductsSlice = createSlice({\r\n  name: \"digikalaProducts\",\r\n  initialState,\r\n  reducers: {\r\n    // Define a reducer to add an item to the state\r\n    addItem: (state, action) => {\r\n      state.digikalaProducts?.find(product => product.id === action.payload.id) || state.digikalaProducts.push(action.payload);\r\n    },\r\n    // Define a reducer to remove an item from the state\r\n    removeItem: (state, action) => {\r\n      state.digikalaProducts = state.digikalaProducts.filter((item) => item.id !== action.payload);\r\n    },\r\n\r\n    submitItems: (state, action) => {\r\n      // Call the hook for the mutation endpoint\r\n      const [submitItems] = useSubmitItemsMutation();\r\n      // Trigger the mutation and pass the items as the payload\r\n      submitItems(state.digikalaProducts);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addItem, removeItem,submitItems  } = digikalaProductsSlice.actions;\r\nexport default digikalaProductsSlice.reducer;\r\n"
        }
    ]
}