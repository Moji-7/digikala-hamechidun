{
    "sourceFile": "components/product/ProductSearch.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1708246764183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708256553203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         <>\r\n         {/* digikalaSelectedProduct.length > 0 && */}\r\n             <View>\r\n                  <DigikalaProductSelected />\r\n-                 <EyeProductSubmitComponent/>\r\n+                 {/* <EyeProductSubmitComponent/> */}\r\n \r\n             </View>\r\n             <View>\r\n \r\n"
                },
                {
                    "date": 1708256570381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     return (\r\n         <>\r\n         {/* digikalaSelectedProduct.length > 0 && */}\r\n             <View>\r\n-                 <DigikalaProductSelected />\r\n+                 {/* <DigikalaProductSelected /> */}\r\n                  {/* <EyeProductSubmitComponent/> */}\r\n \r\n             </View>\r\n             <View>\r\n"
                },
                {
                    "date": 1708256586169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,10 @@\n     return (\r\n         <>\r\n         {/* digikalaSelectedProduct.length > 0 && */}\r\n             <View>\r\n-                 {/* <DigikalaProductSelected /> */}\r\n-                 {/* <EyeProductSubmitComponent/> */}\r\n+                 <DigikalaProductSelected />\r\n+                 <EyeProductSubmitComponent/>\r\n \r\n             </View>\r\n             <View>\r\n \r\n"
                },
                {
                    "date": 1708316425564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import { useDispatch, useSelector } from 'react-redux';\r\n import { addItem } from '../reduxApi/digikalaProducts.reducer';\r\n import EyeProductAddButton from '../forms/EyeProductAddButton';\r\n import EyeProductSubmitComponent from '../forms/EyeProductSubmitButton';\r\n+import SimpleComponent from '../forms/SimpleComponent';\r\n \r\n \r\n \r\n // interface Props {\r\n@@ -58,8 +59,9 @@\n     return (\r\n         <>\r\n         {/* digikalaSelectedProduct.length > 0 && */}\r\n             <View>\r\n+                <SimpleComponent/>\r\n                  <DigikalaProductSelected />\r\n                  <EyeProductSubmitComponent/>\r\n \r\n             </View>\r\n"
                },
                {
                    "date": 1708324731681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import DigikalaProductSelected from '../forms/DigikalaProductSelected';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { addItem } from '../reduxApi/digikalaProducts.reducer';\r\n import EyeProductAddButton from '../forms/EyeProductAddButton';\r\n-import EyeProductSubmitComponent from '../forms/EyeProductSubmitButton';\r\n+import EyeProductSubmitComponent from '../forms/DigikalaSelectedProductSubmitButton';\r\n import SimpleComponent from '../forms/SimpleComponent';\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708325190795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,11 @@\n import DigikalaProductSelected from '../forms/DigikalaProductSelected';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { addItem } from '../reduxApi/digikalaProducts.reducer';\r\n import EyeProductAddButton from '../forms/EyeProductAddButton';\r\n-import EyeProductSubmitComponent from '../forms/DigikalaSelectedProductSubmitButton';\r\n+\r\n import SimpleComponent from '../forms/SimpleComponent';\r\n+import DigikalaSelectedProductSubmitButton from '../forms/DigikalaSelectedProductSubmitButton';\r\n \r\n \r\n \r\n // interface Props {\r\n@@ -58,16 +59,11 @@\n \r\n     return (\r\n         <>\r\n         {/* digikalaSelectedProduct.length > 0 && */}\r\n+           \r\n             <View>\r\n-                <SimpleComponent/>\r\n-                 <DigikalaProductSelected />\r\n-                 <EyeProductSubmitComponent/>\r\n \r\n-            </View>\r\n-            <View>\r\n-\r\n                 <TextInput\r\n                     value={searchProductQuery.inputValue}\r\n                     onChangeText={(e) => handleInputChange(e)}\r\n                     placeholder=\"Enter your search query...\"\r\n"
                },
                {
                    "date": 1708325303112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useQueryClient } from '@tanstack/react-query';\r\n import { SearchProductQuery } from '../entity/SearchQueries';\r\n import DigikalaProductSelected from '../forms/DigikalaProductSelected';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n-import { addItem } from '../reduxApi/digikalaProducts.reducer';\r\n+import { addItem } from '../reduxApi/digikalaSelectedProducts.reducer';\r\n import EyeProductAddButton from '../forms/EyeProductAddButton';\r\n \r\n import SimpleComponent from '../forms/SimpleComponent';\r\n import DigikalaSelectedProductSubmitButton from '../forms/DigikalaSelectedProductSubmitButton';\r\n"
                },
                {
                    "date": 1708325535225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,9 @@\n \r\n \r\n     return (\r\n         <>\r\n-        {/* digikalaSelectedProduct.length > 0 && */}\r\n-           \r\n+    \r\n             <View>\r\n \r\n                 <TextInput\r\n                     value={searchProductQuery.inputValue}\r\n"
                },
                {
                    "date": 1708326326104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,8 @@\n                 />\r\n \r\n                 {isLoading && <Text>Loading...</Text>}\r\n                 {error && <Text>Error: {error}</Text>}\r\n-\r\n-\r\n                 {isLoading && <Text >Loading...</Text>}\r\n                 {/* Show an error message if the fetch failed */}\r\n                 {isError && <Text >Error: {error.message}</Text>}\r\n                 {/* Show the data if the fetch succeeded */}\r\n"
                }
            ],
            "date": 1708246764183,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef, useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, Linking, FlatList, GestureResponderEvent } from 'react-native';\r\nimport { Card, ListItem, Divider, useTheme, Button, Icon, } from '@rneui/themed';\r\nimport { useDigikalaSearchProduct } from '../hooks/useDigikalaSearchProduct';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { SearchProductQuery } from '../entity/SearchQueries';\r\nimport DigikalaProductSelected from '../forms/DigikalaProductSelected';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItem } from '../reduxApi/digikalaProducts.reducer';\r\nimport EyeProductAddButton from '../forms/EyeProductAddButton';\r\nimport EyeProductSubmitComponent from '../forms/EyeProductSubmitButton';\r\n\r\n\r\n\r\n// interface Props {\r\n//     eyeProductParam: EyeProductParams;\r\n// }\r\n\r\nconst ProductSearch: React.FC = ({ }) => {\r\n    const { theme } = useTheme();\r\n\r\n    const queryClient = useQueryClient();\r\n    const [searchProductResults, setsearchProductResults] = useState<any[]>([]);\r\n    const [searchProductQuery, setSearchProductQuery] = useState<SearchProductQuery>({ inputValue: 'هات', page: 1 });\r\n    const { data, error, isLoading, isError } = useDigikalaSearchProduct(searchProductQuery, queryClient);\r\n\r\n\r\n\r\n\r\n    const debounce = (fn, time) => {\r\n        let timeoutId;\r\n        return (...args) => {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            timeoutId = setTimeout(() => {\r\n                timeoutId = null;\r\n                fn(...args);\r\n            }, time);\r\n        };\r\n    };\r\n    const searchMedicineOnChange = debounce((value) => {\r\n        if (value.length > 3) {\r\n            console.log('search');\r\n            setSearchProductQuery({ inputValue: value, page: 1 })\r\n            //setsearchProductResults({ ...searchProductQuery, searchProductQuery});\r\n        }\r\n    }, 1000);\r\n\r\n    const handleInputChange = (e) => {\r\n        searchMedicineOnChange(e);\r\n    };\r\n    const handleNextPage = (e) => {\r\n        setSearchProductQuery({ ...searchProductQuery, page: searchProductQuery.page + 1 });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* digikalaSelectedProduct.length > 0 && */}\r\n            <View>\r\n                 <DigikalaProductSelected />\r\n                 <EyeProductSubmitComponent/>\r\n\r\n            </View>\r\n            <View>\r\n\r\n                <TextInput\r\n                    value={searchProductQuery.inputValue}\r\n                    onChangeText={(e) => handleInputChange(e)}\r\n                    placeholder=\"Enter your search query...\"\r\n                />\r\n\r\n                {isLoading && <Text>Loading...</Text>}\r\n                {error && <Text>Error: {error}</Text>}\r\n\r\n\r\n                {isLoading && <Text >Loading...</Text>}\r\n                {/* Show an error message if the fetch failed */}\r\n                {isError && <Text >Error: {error.message}</Text>}\r\n                {/* Show the data if the fetch succeeded */}\r\n\r\n                {data &&\r\n                    (<>\r\n                        <Button title={`(${searchProductQuery.page}) next page`} onPress={(e) => handleNextPage(e)} />\r\n                        <Card>\r\n                            <Card.Title> 🤑🐾</Card.Title>\r\n                            <FlatList\r\n                                data={data.products}\r\n                                renderItem={({ item }) => (\r\n                                    <Card key={item.id}>\r\n                                        {/* <Card.Image source={{ uri: item.imageUrl }} /> */}\r\n                                        <Card.Title>{item.title_fa}</Card.Title>\r\n                                        <Text>Price: {item.default_variant.seller.title}</Text>\r\n                                        {/* <Text>Rating: {item.rating}</Text> */}\r\n\r\n                                        {/* Add more details as needed */}\r\n                                        <EyeProductAddButton digikalaProduct={item} />\r\n                                    </Card>\r\n                                )}\r\n                            />\r\n                            \r\n                        </Card>\r\n                    </>\r\n                    )\r\n\r\n                }\r\n            </View>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default ProductSearch;\r\n"
        }
    ]
}