{
    "sourceFile": "App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 67,
            "patches": [
                {
                    "date": 1704275601397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704276065199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { NavigationContainer } from '@react-navigation/native';\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n+import ihamechidun from './components/ihamechidun';\n \n \n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1704279738248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,13 +9,15 @@\n const Stack = createStackNavigator();\n \n export default function App() {\n   return (\n+    <QueryClientProvider client={queryClient} contextSharing={true}>\n     <NavigationContainer>\n     <Stack.Navigator>\n       <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n     </Stack.Navigator>\n   </NavigationContainer>\n+  </QueryClientProvider>\n   );\n }\n \n const styles = StyleSheet.create({\n"
                },
                {
                    "date": 1704279755684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,15 @@\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n import ihamechidun from './components/ihamechidun';\n+import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n \n \n \n const Stack = createStackNavigator();\n+// Create a query client\n+const queryClient = new QueryClient();\n \n export default function App() {\n   return (\n     <QueryClientProvider client={queryClient} contextSharing={true}>\n"
                },
                {
                    "date": 1704279791249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const queryClient = new QueryClient();\n \n export default function App() {\n   return (\n-    <QueryClientProvider client={queryClient} contextSharing={true}>\n+    <QueryClientProvider client={queryClient} >\n     <NavigationContainer>\n     <Stack.Navigator>\n       <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n     </Stack.Navigator>\n"
                },
                {
                    "date": 1704280009103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const queryClient = new QueryClient();\n \n export default function App() {\n   return (\n-    <QueryClientProvider client={queryClient} >\n+    <QueryClientProvider client={queryClient} contextSharing={true}>\n     <NavigationContainer>\n     <Stack.Navigator>\n       <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n     </Stack.Navigator>\n"
                },
                {
                    "date": 1704280814353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n import ihamechidun from './components/ihamechidun';\n-import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n-\n-\n-\n+import {\n+  QueryClient,\n+  QueryClientProvider,\n+} from '@tanstack/react-query'\n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n"
                },
                {
                    "date": 1704280825566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const queryClient = new QueryClient();\n \n export default function App() {\n   return (\n-    <QueryClientProvider client={queryClient} contextSharing={true}>\n+    <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n       <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n     </Stack.Navigator>\n"
                },
                {
                    "date": 1704281509041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n import ihamechidun from './components/ihamechidun';\n+import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n+\n import {\n   QueryClient,\n   QueryClientProvider,\n } from '@tanstack/react-query'\n"
                },
                {
                    "date": 1704283382673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { NavigationContainer } from '@react-navigation/native';\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n-import ihamechidun from './components/ihamechidun';\n+import ihamechidun from './components/OrdersSummary';\n import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n \n import {\n   QueryClient,\n"
                },
                {
                    "date": 1704283396178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { NavigationContainer } from '@react-navigation/native';\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n-import ihamechidun from './components/OrdersSummary';\n+import OrdersSummary from './components/OrdersSummary';\n import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n \n import {\n   QueryClient,\n@@ -17,9 +17,9 @@\n   return (\n     <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n-      <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n+      <Stack.Screen name=\"OrdersSummary\" component={OrdersSummary} />\n     </Stack.Navigator>\n   </NavigationContainer>\n   </QueryClientProvider>\n   );\n"
                },
                {
                    "date": 1704283538515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,16 @@\n import { NavigationContainer } from '@react-navigation/native';\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n-import OrdersSummary from './components/OrdersSummary';\n+import populate from './components/populate';\n import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n \n import {\n   QueryClient,\n   QueryClientProvider,\n } from '@tanstack/react-query'\n+\n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n@@ -17,9 +18,9 @@\n   return (\n     <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n-      <Stack.Screen name=\"OrdersSummary\" component={OrdersSummary} />\n+      <Stack.Screen name=\"populate\" component={populate} />\n     </Stack.Navigator>\n   </NavigationContainer>\n   </QueryClientProvider>\n   );\n"
                },
                {
                    "date": 1704776188143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   return (\n     <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n+      {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n       <Stack.Screen name=\"populate\" component={populate} />\n     </Stack.Navigator>\n   </NavigationContainer>\n   </QueryClientProvider>\n"
                },
                {
                    "date": 1704777239080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { createStackNavigator } from '@react-navigation/stack';\n import { StatusBar } from 'expo-status-bar';\n import { StyleSheet, Text, View } from 'react-native';\n import populate from './components/populate';\n+import populatetest from './components/populatetest';\n import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n \n import {\n   QueryClient,\n@@ -19,9 +20,9 @@\n     <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n       {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n-      <Stack.Screen name=\"populate\" component={populate} />\n+      <Stack.Screen name=\"populateفثسف\" component={populate} />\n     </Stack.Navigator>\n   </NavigationContainer>\n   </QueryClientProvider>\n   );\n"
                },
                {
                    "date": 1704779930088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n     <QueryClientProvider client={queryClient}>\n     <NavigationContainer>\n     <Stack.Navigator>\n       {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n-      <Stack.Screen name=\"populateفثسف\" component={populate} />\n+      {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n+      <Stack.Screen name=\"populatetest\" component={populatetest} />\n     </Stack.Navigator>\n   </NavigationContainer>\n   </QueryClientProvider>\n   );\n"
                },
                {
                    "date": 1704780558176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,36 @@\n+// Import the necessary modules\n import { NavigationContainer } from '@react-navigation/native';\n import { createStackNavigator } from '@react-navigation/stack';\n-import { StatusBar } from 'expo-status-bar';\n+\n import { StyleSheet, Text, View } from 'react-native';\n-import populate from './components/populate';\n+\n import populatetest from './components/populatetest';\n-import { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n \n import {\n   QueryClient,\n   QueryClientProvider,\n } from '@tanstack/react-query'\n \n+// Import the ThemeProvider component and the default theme from @rneui/themed\n+import { ThemeProvider, defaultTheme } from '@rneui/themed';\n+\n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n export default function App() {\n   return (\n-    <QueryClientProvider client={queryClient}>\n-    <NavigationContainer>\n-    <Stack.Navigator>\n-      {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n-      {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n-      <Stack.Screen name=\"populatetest\" component={populatetest} />\n-    </Stack.Navigator>\n-  </NavigationContainer>\n-  </QueryClientProvider>\n+    // Use the ThemeProvider component to wrap your app and pass the default theme object\n+    <ThemeProvider theme={defaultTheme}>\n+      <QueryClientProvider client={queryClient}>\n+        <NavigationContainer>\n+          <Stack.Navigator>\n+            <Stack.Screen name=\"populatetest\" component={populatetest} />\n+          </Stack.Navigator>\n+        </NavigationContainer>\n+      </QueryClientProvider>\n+    </ThemeProvider>\n   );\n }\n \n const styles = StyleSheet.create({\n"
                },
                {
                    "date": 1704781507843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,31 @@\n-// Import the necessary modules\n-import { NavigationContainer } from '@react-navigation/native';\n-import { createStackNavigator } from '@react-navigation/stack';\n+// app.tsx\n+import { ThemeProvider, createTheme } from \"@rneui/themed\";\n+import { NavigationContainer } from \"@react-navigation/native\";\n+import { createStackNavigator } from \"@react-navigation/stack\";\n \n-import { StyleSheet, Text, View } from 'react-native';\n+import { StyleSheet, Text, View } from \"react-native\";\n \n-import populatetest from './components/populatetest';\n+import populatetest from \"./components/populatetest\";\n \n import {\n   QueryClient,\n   QueryClientProvider,\n-} from '@tanstack/react-query'\n+} from \"@tanstack/react-query\";\n \n-// Import the ThemeProvider component and the default theme from @rneui/themed\n-import { ThemeProvider, defaultTheme } from '@rneui/themed';\n-\n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n export default function App() {\n+  // Use createTheme to generate a theme object with your custom colors\n+  const themeObj = createTheme({\n+    myColors: useDarkMode() ? dark : light,\n+  });\n+\n   return (\n-    // Use the ThemeProvider component to wrap your app and pass the default theme object\n-    <ThemeProvider theme={defaultTheme}>\n+    // Use the ThemeProvider component to wrap your app and pass the theme object\n+    <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n@@ -35,9 +38,9 @@\n \n const styles = StyleSheet.create({\n   container: {\n     flex: 1,\n-    backgroundColor: '#fff',\n-    alignItems: 'center',\n-    justifyContent: 'center',\n+    backgroundColor: \"#fff\",\n+    alignItems: \"center\",\n+    justifyContent: \"center\",\n   },\n });\n"
                },
                {
                    "date": 1704782172260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { createStackNavigator } from \"@react-navigation/stack\";\n \n import { StyleSheet, Text, View } from \"react-native\";\n \n+\n import populatetest from \"./components/populatetest\";\n \n import {\n   QueryClient,\n@@ -17,10 +18,24 @@\n const queryClient = new QueryClient();\n \n export default function App() {\n   // Use createTheme to generate a theme object with your custom colors\n+  // Use the useDarkMode hook to get the current mode\n+  const isDarkMode = true;\n+  // Define the dark and light objects with your custom color values\n+  const dark = {\n+    primary: \"#ffffff\",\n+    secondary: \"#000000\",\n+    // ... other colors\n+  };\n+  const light = {\n+    primary: \"#000000\",\n+    secondary: \"#ffffff\",\n+    // ... other colors\n+  };\n+  // Use the isDarkMode value to choose the appropriate color object\n   const themeObj = createTheme({\n-    myColors: useDarkMode() ? dark : light,\n+    myColors: isDarkMode ? dark : light,\n   });\n \n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n"
                },
                {
                    "date": 1704783396541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import {\n   QueryClient,\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n+import populate from \"./components/populate\";\n \n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n@@ -42,8 +43,9 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n+            <Stack.Screen name=\"populate\" component={populate} />\n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1704783439441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            <Stack.Screen name=\"populate\" component={populate} />\n+            {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1704793125212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,11 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            {/* <Stack.Screen name=\"populate\" component={populate} /> */}\n+            \n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n+            <Stack.Screen name=\"detail\" component={populate} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1704794195887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n   QueryClient,\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n+import Orderitem from \"./components/Orderitem\";\n \n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n@@ -45,9 +46,9 @@\n         <NavigationContainer>\n           <Stack.Navigator>\n             \n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            <Stack.Screen name=\"detail\" component={populate} />\n+            <Stack.Screen name=\"orderitem\" component={Orderitem} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1705233753489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,11 +44,10 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            \n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            <Stack.Screen name=\"orderitem\" component={Orderitem} />\n+            {/* <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1705233778419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            {/* <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n+            <Stack.Screen name=\"orderitem\" component={Orderitem} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1705750407400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n         <NavigationContainer>\n           <Stack.Navigator>\n             <Stack.Screen name=\"populatetest\" component={populatetest} />\n             <Stack.Screen name=\"orderitem\" component={Orderitem} />\n+            <Stack.Screen name=\"incredibles\" component={Incredibles} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1705750728310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n+import Incredibles from \"./components/Incredibles\";\n \n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n@@ -44,10 +45,10 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            <Stack.Screen name=\"orderitem\" component={Orderitem} />\n+            {/* <Stack.Screen name=\"populatetest\" component={populatetest} />\n+            <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n             <Stack.Screen name=\"incredibles\" component={Incredibles} />\n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1707122681101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n \n+import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n+\n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n@@ -46,10 +48,12 @@\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n             {/* <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n-            <Stack.Screen name=\"incredibles\" component={Incredibles} />\n+       \n+            {/* <Stack.Screen name=\"incredibles\" component={Incredibles} /> */}\n+            <Stack.Screen name=\"incrediblesWithProducts\" component={IncrediblesWithOtherSellers} />\n+                 <Stack.Screen name=\"orderitem\" component={Orderitem} /> \n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1707122693183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,11 @@\n       <QueryClientProvider client={queryClient}>\n         <NavigationContainer>\n           <Stack.Navigator>\n             {/* <Stack.Screen name=\"populatetest\" component={populatetest} />\n-       \n+            <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n             {/* <Stack.Screen name=\"incredibles\" component={Incredibles} /> */}\n             <Stack.Screen name=\"incrediblesWithProducts\" component={IncrediblesWithOtherSellers} />\n-                 <Stack.Screen name=\"orderitem\" component={Orderitem} /> \n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1707123000929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n+import Comm from \"./components/Comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1707123010319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n-import Comm from \"./components/Comments\";\n+import Comments from \"./components/comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1707123032838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n             {/* <Stack.Screen name=\"populatetest\" component={populatetest} />\n             <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n             {/* <Stack.Screen name=\"incredibles\" component={Incredibles} /> */}\n             <Stack.Screen name=\"incrediblesWithProducts\" component={IncrediblesWithOtherSellers} />\n+            <Stack.Screen name=\"comments\" component={Comments} /> \n           </Stack.Navigator>\n         </NavigationContainer>\n       </QueryClientProvider>\n     </ThemeProvider>\n"
                },
                {
                    "date": 1707126257987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n-import Comments from \"./components/comments\";\n+import Comments from \"./components/Commentss\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1707126264263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"@tanstack/react-query\";\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n-import Comments from \"./components/Commentss\";\n+import Comments from \"./components/Comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1708259547411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,53 +11,64 @@\n import {\n   QueryClient,\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n+import { Provider } from \"react-redux\";\n+\n import populate from \"./components/populate\";\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n import Comments from \"./components/Comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n+import EyeProductComponent from \"./components/forms/EyeProduct\";\n+import { store } from \"./components/reduxApi/store\";\n+import { store2 } from \"./components/reduxApi/store2\";\n \n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n \n export default function App() {\n+  \n   // Use createTheme to generate a theme object with your custom colors\n   // Use the useDarkMode hook to get the current mode\n   const isDarkMode = true;\n   // Define the dark and light objects with your custom color values\n   const dark = {\n     primary: \"#ffffff\",\n+    alert: \"#ff0000\",\n+  success: \"#00ff00\",\n+  danger: \"#ff00ff\",\n     secondary: \"#000000\",\n     // ... other colors\n   };\n   const light = {\n     primary: \"#000000\",\n+    alert: \"#ff0000\",\n+    success: \"#00ff00\",\n+    danger: \"#ff00ff\",\n     secondary: \"#ffffff\",\n     // ... other colors\n   };\n   // Use the isDarkMode value to choose the appropriate color object\n   const themeObj = createTheme({\n-    myColors: isDarkMode ? dark : light,\n+    myColors:light,\n   });\n \n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n+      <Provider store={store2}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            {/* <Stack.Screen name=\"populatetest\" component={populatetest} />\n-            <Stack.Screen name=\"orderitem\" component={Orderitem} /> */}\n-            {/* <Stack.Screen name=\"incredibles\" component={Incredibles} /> */}\n-            <Stack.Screen name=\"incrediblesWithProducts\" component={IncrediblesWithOtherSellers} />\n-            <Stack.Screen name=\"comments\" component={Comments} /> \n+            <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n         </NavigationContainer>\n+        </Provider>\n       </QueryClientProvider>\n+\n     </ThemeProvider>\n   );\n }\n \n"
                },
                {
                    "date": 1708259563231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n import Comments from \"./components/Comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n import EyeProductComponent from \"./components/forms/EyeProduct\";\n-import { store } from \"./components/reduxApi/store\";\n-import { store2 } from \"./components/reduxApi/store2\";\n+// import { store } from \"./components/reduxApi/store\";\n+import { store } from \"./components/reduxApi/store2\";\n \n const Stack = createStackNavigator();\n // Create a query client\n const queryClient = new QueryClient();\n@@ -58,9 +58,9 @@\n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n-      <Provider store={store2}>\n+      <Provider store={store}>\n         <NavigationContainer>\n           <Stack.Navigator>\n             <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n"
                },
                {
                    "date": 1708503049023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,30 @@\n // import { store } from \"./components/reduxApi/store\";\n import { store } from \"./components/reduxApi/store2\";\n \n const Stack = createStackNavigator();\n+const Drawer = createDrawerNavigator();\n+\n // Create a query client\n const queryClient = new QueryClient();\n \n export default function App() {\n   \n+  // LazyLoadMenu HOC\n+const LazyLoadMenu = (title) => (WrappedComponent) => () => {\n+  const [isReady, setIsReady] = React.useState(false);\n+\n+  React.useEffect(() => {\n+    async function fetchData() {\n+      await import('./pathToYourComponent/' + WrappedComponent.name).then((module) => module[WrappedComponent.name]);\n+      setIsReady(true);\n+    }\n+    fetchData();\n+  }, []);\n+\n+  return !isReady ? null : <WrappedComponent title={title} />;\n+};\n+\n   // Use createTheme to generate a theme object with your custom colors\n   // Use the useDarkMode hook to get the current mode\n   const isDarkMode = true;\n   // Define the dark and light objects with your custom color values\n@@ -79,4 +96,8 @@\n     alignItems: \"center\",\n     justifyContent: \"center\",\n   },\n });\n+function createDrawerNavigator() {\n+  throw new Error(\"Function not implemented.\");\n+}\n+\n"
                },
                {
                    "date": 1708504065692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,34 +20,17 @@\n import Comments from \"./components/Comments\";\n \n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n import EyeProductComponent from \"./components/forms/EyeProduct\";\n-// import { store } from \"./components/reduxApi/store\";\n+\n import { store } from \"./components/reduxApi/store2\";\n \n const Stack = createStackNavigator();\n-const Drawer = createDrawerNavigator();\n-\n // Create a query client\n const queryClient = new QueryClient();\n \n export default function App() {\n   \n-  // LazyLoadMenu HOC\n-const LazyLoadMenu = (title) => (WrappedComponent) => () => {\n-  const [isReady, setIsReady] = React.useState(false);\n-\n-  React.useEffect(() => {\n-    async function fetchData() {\n-      await import('./pathToYourComponent/' + WrappedComponent.name).then((module) => module[WrappedComponent.name]);\n-      setIsReady(true);\n-    }\n-    fetchData();\n-  }, []);\n-\n-  return !isReady ? null : <WrappedComponent title={title} />;\n-};\n-\n   // Use createTheme to generate a theme object with your custom colors\n   // Use the useDarkMode hook to get the current mode\n   const isDarkMode = true;\n   // Define the dark and light objects with your custom color values\n@@ -78,9 +61,10 @@\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} />\n+            {/* <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} /> */}\n+            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n           </Stack.Navigator>\n         </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n@@ -96,8 +80,4 @@\n     alignItems: \"center\",\n     justifyContent: \"center\",\n   },\n });\n-function createDrawerNavigator() {\n-  throw new Error(\"Function not implemented.\");\n-}\n-\n"
                },
                {
                    "date": 1708506858149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n import { Provider } from \"react-redux\";\n \n-import populate from \"./components/populate\";\n+import populate from './components/populate.1';\n import Orderitem from \"./components/Orderitem\";\n import Incredibles from \"./components/Incredibles\";\n import Comments from \"./components/Comments\";\n \n"
                },
                {
                    "date": 1708507268646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+// app.tsx\n+import { ThemeProvider, createTheme } from \"@rneui/themed\";\n+import { NavigationContainer } from \"@react-navigation/native\";\n+import { createStackNavigator } from \"@react-navigation/stack\";\n+\n+import { StyleSheet, Text, View } from \"react-native\";\n+\n+\n+import populatetest from \"./components/populatetest\";\n+\n+import {\n+  QueryClient,\n+  QueryClientProvider,\n+} from \"@tanstack/react-query\";\n+import { Provider } from \"react-redux\";\n+\n+import populate from \"./components/populate\";\n+import Orderitem from \"./components/Orderitem\";\n+import Incredibles from \"./components/Incredibles\";\n+import Comments from \"./components/Comments\";\n+\n+import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n+import EyeProductComponent from \"./components/forms/EyeProduct\";\n+\n+import { store } from \"./components/reduxApi/store2\";\n+\n+const Stack = createStackNavigator();\n+// Create a query client\n+const queryClient = new QueryClient();\n+\n+export default function App() {\n+  \n+  // Use createTheme to generate a theme object with your custom colors\n+  // Use the useDarkMode hook to get the current mode\n+  const isDarkMode = true;\n+  // Define the dark and light objects with your custom color values\n+  const dark = {\n+    primary: \"#ffffff\",\n+    alert: \"#ff0000\",\n+  success: \"#00ff00\",\n+  danger: \"#ff00ff\",\n+    secondary: \"#000000\",\n+    // ... other colors\n+  };\n+  const light = {\n+    primary: \"#000000\",\n+    alert: \"#ff0000\",\n+    success: \"#00ff00\",\n+    danger: \"#ff00ff\",\n+    secondary: \"#ffffff\",\n+    // ... other colors\n+  };\n+  // Use the isDarkMode value to choose the appropriate color object\n+  const themeObj = createTheme({\n+    myColors:light,\n+  });\n+\n+  return (\n+    // Use the ThemeProvider component to wrap your app and pass the theme object\n+    <ThemeProvider theme={themeObj}>\n+      <QueryClientProvider client={queryClient}>\n+      <Provider store={store}>\n+        <NavigationContainer>\n+          <Stack.Navigator>\n+            {/* <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} /> */}\n+            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n+          </Stack.Navigator>\n+        </NavigationContainer>\n+        </Provider>\n+      </QueryClientProvider>\n+\n+    </ThemeProvider>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: \"#fff\",\n+    alignItems: \"center\",\n+    justifyContent: \"center\",\n+  },\n+});\n"
                },
                {
                    "date": 1708507495343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,8 @@\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n         <NavigationContainer>\n           <Stack.Navigator>\n-            {/* <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} /> */}\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n           </Stack.Navigator>\n         </NavigationContainer>\n         </Provider>\n@@ -80,87 +79,4 @@\n     alignItems: \"center\",\n     justifyContent: \"center\",\n   },\n });\n-// app.tsx\n-import { ThemeProvider, createTheme } from \"@rneui/themed\";\n-import { NavigationContainer } from \"@react-navigation/native\";\n-import { createStackNavigator } from \"@react-navigation/stack\";\n-\n-import { StyleSheet, Text, View } from \"react-native\";\n-\n-\n-import populatetest from \"./components/populatetest\";\n-\n-import {\n-  QueryClient,\n-  QueryClientProvider,\n-} from \"@tanstack/react-query\";\n-import { Provider } from \"react-redux\";\n-\n-import populate from './components/populate.1';\n-import Orderitem from \"./components/Orderitem\";\n-import Incredibles from \"./components/Incredibles\";\n-import Comments from \"./components/Comments\";\n-\n-import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n-import EyeProductComponent from \"./components/forms/EyeProduct\";\n-\n-import { store } from \"./components/reduxApi/store2\";\n-\n-const Stack = createStackNavigator();\n-// Create a query client\n-const queryClient = new QueryClient();\n-\n-export default function App() {\n-  \n-  // Use createTheme to generate a theme object with your custom colors\n-  // Use the useDarkMode hook to get the current mode\n-  const isDarkMode = true;\n-  // Define the dark and light objects with your custom color values\n-  const dark = {\n-    primary: \"#ffffff\",\n-    alert: \"#ff0000\",\n-  success: \"#00ff00\",\n-  danger: \"#ff00ff\",\n-    secondary: \"#000000\",\n-    // ... other colors\n-  };\n-  const light = {\n-    primary: \"#000000\",\n-    alert: \"#ff0000\",\n-    success: \"#00ff00\",\n-    danger: \"#ff00ff\",\n-    secondary: \"#ffffff\",\n-    // ... other colors\n-  };\n-  // Use the isDarkMode value to choose the appropriate color object\n-  const themeObj = createTheme({\n-    myColors:light,\n-  });\n-\n-  return (\n-    // Use the ThemeProvider component to wrap your app and pass the theme object\n-    <ThemeProvider theme={themeObj}>\n-      <QueryClientProvider client={queryClient}>\n-      <Provider store={store}>\n-        <NavigationContainer>\n-          <Stack.Navigator>\n-            {/* <Stack.Screen name=\"comments\" component={EyeProductComponent} options={{ headerShown: false }} /> */}\n-            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n-          </Stack.Navigator>\n-        </NavigationContainer>\n-        </Provider>\n-      </QueryClientProvider>\n-\n-    </ThemeProvider>\n-  );\n-}\n-\n-const styles = StyleSheet.create({\n-  container: {\n-    flex: 1,\n-    backgroundColor: \"#fff\",\n-    alignItems: \"center\",\n-    justifyContent: \"center\",\n-  },\n-});\n"
                },
                {
                    "date": 1708508968303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n         <NavigationContainer>\n           <Stack.Navigator>\n+            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n           </Stack.Navigator>\n         </NavigationContainer>\n         </Provider>\n"
                },
                {
                    "date": 1708508998410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n         <NavigationContainer>\n           <Stack.Navigator>\n             <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n         </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1708509323038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n         <NavigationContainer>\n-          <Stack.Navigator>\n+          <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\">\n             <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n"
                },
                {
                    "date": 1708509364134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,13 @@\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n         <NavigationContainer>\n-          <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\">\n+          <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n+      animation: 'slide_from_right',\n+      gestureEnabled: true,\n+      statusBarStyle: 'dark',\n+    }}>\n             <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n"
                },
                {
                    "date": 1708510234351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,19 +59,48 @@\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n-        <NavigationContainer>\n-          <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n-      animation: 'slide_from_right',\n-      gestureEnabled: true,\n-      statusBarStyle: 'dark',\n-    }}>\n-            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n-          </Stack.Navigator>\n-        </NavigationContainer>\n+      <NavigationContainer>\n+      <Drawer.Navigator\n+        drawerContentOptions={{\n+          activeTintColor: '#e91e63', // Customize menu item colors\n+          itemStyle: { marginVertical: 10 },\n+        }}\n+      >\n+        <Drawer.Screen\n+          name=\"Incredibles\"\n+          component={IncrediblesScreen}\n+          options={{\n+            drawerIcon: ({ focused, size, color }) => (\n+              // Use an icon library or provide your own icon component\n+              <Ionicons name={focused ? 'ios-star' : 'ios-star-outline'} size={size} color={color} />\n+            ),\n+          }}\n+        />\n+        <Drawer.Screen\n+          name=\"Comments\"\n+          component={CommentsScreen}\n+          options={{\n+            drawerIcon: ({ focused, size, color }) => (\n+              // Use an icon library or provide your own icon component\n+              <Ionicons name={focused ? 'ios-chatbubble' : 'ios-chatbubble-outline'} size={size} color={color} />\n+            ),\n+          }}\n+        />\n+        <Drawer.Screen\n+          name=\"Other\"\n+          component={OtherScreen}\n+          options={{\n+            drawerIcon: ({ focused, size, color }) => (\n+              // Use an icon library or provide your own icon component\n+              <Ionicons name={focused ? 'ios-more' : 'ios-more-outline'} size={size} color={color} />\n+            ),\n+          }}\n+        />\n+        {/* Add more menu items as needed */}\n+      </Drawer.Navigator>\n+    </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n"
                },
                {
                    "date": 1708510439714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n // app.tsx\n import { ThemeProvider, createTheme } from \"@rneui/themed\";\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n+import { createDrawerNavigator } from '@react-navigation/drawer';\n \n+\n import { StyleSheet, Text, View } from \"react-native\";\n \n \n import populatetest from \"./components/populatetest\";\n@@ -24,11 +26,14 @@\n \n import { store } from \"./components/reduxApi/store2\";\n \n const Stack = createStackNavigator();\n+const Drawer = createDrawerNavigator();\n+\n // Create a query client\n const queryClient = new QueryClient();\n \n+\n export default function App() {\n   \n   // Use createTheme to generate a theme object with your custom colors\n   // Use the useDarkMode hook to get the current mode\n@@ -59,48 +64,52 @@\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n       <Provider store={store}>\n-      <NavigationContainer>\n-      <Drawer.Navigator\n+        <NavigationContainer>\n+          {/* <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n+            animation: 'slide_from_right',\n+            gestureEnabled: true,\n+            statusBarStyle: 'dark'}}>\n+            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n+          </Stack.Navigator> */}\n+          <Drawer.Navigator\n         drawerContentOptions={{\n           activeTintColor: '#e91e63', // Customize menu item colors\n           itemStyle: { marginVertical: 10 },\n         }}\n       >\n         <Drawer.Screen\n           name=\"Incredibles\"\n-          component={IncrediblesScreen}\n+          component={Incredibles}\n           options={{\n             drawerIcon: ({ focused, size, color }) => (\n-              // Use an icon library or provide your own icon component\n               <Ionicons name={focused ? 'ios-star' : 'ios-star-outline'} size={size} color={color} />\n             ),\n           }}\n         />\n         <Drawer.Screen\n-          name=\"Comments\"\n-          component={CommentsScreen}\n+          name=\"populate\"\n+          component={populate}\n           options={{\n             drawerIcon: ({ focused, size, color }) => (\n-              // Use an icon library or provide your own icon component\n-              <Ionicons name={focused ? 'ios-chatbubble' : 'ios-chatbubble-outline'} size={size} color={color} />\n+              <Ionicons name={focused ? 'ios-home' : 'ios-home-outline'} size={size} color={color} />\n             ),\n           }}\n         />\n         <Drawer.Screen\n-          name=\"Other\"\n-          component={OtherScreen}\n+          name=\"EyeProductComponent\"\n+          component={EyeProductComponent}\n           options={{\n             drawerIcon: ({ focused, size, color }) => (\n-              // Use an icon library or provide your own icon component\n-              <Ionicons name={focused ? 'ios-more' : 'ios-more-outline'} size={size} color={color} />\n+              <Ionicons name={focused ? 'ios-eye' : 'ios-eye-outline'} size={size} color={color} />\n             ),\n           }}\n         />\n-        {/* Add more menu items as needed */}\n       </Drawer.Navigator>\n-    </NavigationContainer>\n+        </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n"
                },
                {
                    "date": 1708510481650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { ThemeProvider, createTheme } from \"@rneui/themed\";\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n import { createDrawerNavigator } from '@react-navigation/drawer';\n+import Ionicons from 'react-native-vector-icons/Ionicons';\n \n \n import { StyleSheet, Text, View } from \"react-native\";\n \n"
                },
                {
                    "date": 1708511039226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import { ThemeProvider, createTheme } from \"@rneui/themed\";\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n import { createDrawerNavigator } from '@react-navigation/drawer';\n-import Ionicons from 'react-native-vector-icons/Ionicons';\n \n \n import { StyleSheet, Text, View } from \"react-native\";\n \n@@ -74,42 +73,15 @@\n             <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator> */}\n-          <Drawer.Navigator\n-        drawerContentOptions={{\n-          activeTintColor: '#e91e63', // Customize menu item colors\n-          itemStyle: { marginVertical: 10 },\n-        }}\n-      >\n-        <Drawer.Screen\n-          name=\"Incredibles\"\n-          component={Incredibles}\n-          options={{\n-            drawerIcon: ({ focused, size, color }) => (\n-              <Ionicons name={focused ? 'ios-star' : 'ios-star-outline'} size={size} color={color} />\n-            ),\n-          }}\n-        />\n-        <Drawer.Screen\n-          name=\"populate\"\n-          component={populate}\n-          options={{\n-            drawerIcon: ({ focused, size, color }) => (\n-              <Ionicons name={focused ? 'ios-home' : 'ios-home-outline'} size={size} color={color} />\n-            ),\n-          }}\n-        />\n-        <Drawer.Screen\n-          name=\"EyeProductComponent\"\n-          component={EyeProductComponent}\n-          options={{\n-            drawerIcon: ({ focused, size, color }) => (\n-              <Ionicons name={focused ? 'ios-eye' : 'ios-eye-outline'} size={size} color={color} />\n-            ),\n-          }}\n-        />\n-      </Drawer.Navigator>\n+  \n+          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n+            <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n+            <Drawer.Screen name=\"populate\" component={populate} />\n+            <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n+          </Drawer.Navigator>\n+\n         </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n \n"
                },
                {
                    "date": 1708511357174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n import EyeProductComponent from \"./components/forms/EyeProduct\";\n \n import { store } from \"./components/reduxApi/store2\";\n+import DrawerMenu from \"./DrawerMenu\";\n \n const Stack = createStackNavigator();\n const Drawer = createDrawerNavigator();\n \n@@ -73,14 +74,15 @@\n             <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n             <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator> */}\n-  \n+{/*   \n           <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n             <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n             <Drawer.Screen name=\"populate\" component={populate} />\n             <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-          </Drawer.Navigator>\n+          </Drawer.Navigator> */}\n+          <DrawerMenu/>\n \n         </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1708511425940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n+\n // app.tsx\n+import 'react-native-gesture-handler';\n import { ThemeProvider, createTheme } from \"@rneui/themed\";\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n import { createDrawerNavigator } from '@react-navigation/drawer';\n"
                },
                {
                    "date": 1708512142235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,14 @@\n             <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n             <Drawer.Screen name=\"populate\" component={populate} />\n             <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n           </Drawer.Navigator> */}\n+          \n+          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n+    <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n+    <Drawer.Screen name=\"populate\" component={populate} />\n+    <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n+  </Drawer.Navigator>\n           <DrawerMenu/>\n \n         </NavigationContainer>\n         </Provider>\n"
                },
                {
                    "date": 1708512295330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n     <Drawer.Screen name=\"populate\" component={populate} />\n     <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n   </Drawer.Navigator>\n-          <DrawerMenu/>\n+          {/* <DrawerMenu/> */}\n \n         </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1708512408853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,18 +36,18 @@\n const queryClient = new QueryClient();\n \n \n export default function App() {\n-  \n+\n   // Use createTheme to generate a theme object with your custom colors\n   // Use the useDarkMode hook to get the current mode\n   const isDarkMode = true;\n   // Define the dark and light objects with your custom color values\n   const dark = {\n     primary: \"#ffffff\",\n     alert: \"#ff0000\",\n-  success: \"#00ff00\",\n-  danger: \"#ff00ff\",\n+    success: \"#00ff00\",\n+    danger: \"#ff00ff\",\n     secondary: \"#000000\",\n     // ... other colors\n   };\n   const light = {\n@@ -59,40 +59,26 @@\n     // ... other colors\n   };\n   // Use the isDarkMode value to choose the appropriate color object\n   const themeObj = createTheme({\n-    myColors:light,\n+    myColors: light,\n   });\n \n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n-      <Provider store={store}>\n-        <NavigationContainer>\n-          {/* <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n-            animation: 'slide_from_right',\n-            gestureEnabled: true,\n-            statusBarStyle: 'dark'}}>\n-            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n-          </Stack.Navigator> */}\n-{/*   \n-          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n-            <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n-            <Drawer.Screen name=\"populate\" component={populate} />\n-            <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-          </Drawer.Navigator> */}\n-          \n-          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n-    <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n-    <Drawer.Screen name=\"populate\" component={populate} />\n-    <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-  </Drawer.Navigator>\n-          {/* <DrawerMenu/> */}\n+        <Provider store={store}>\n+          <NavigationContainer>\n \n-        </NavigationContainer>\n+            <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n+              <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n+              <Drawer.Screen name=\"populate\" component={populate} />\n+              <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n+            </Drawer.Navigator>\n+            {/* <DrawerMenu/> */}\n+\n+          </NavigationContainer>\n         </Provider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n"
                },
                {
                    "date": 1708513404689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,18 +67,35 @@\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <Provider store={store}>\n+          {/* <NavigationContainer>\n+           <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n+            animation: 'slide_from_right',\n+            gestureEnabled: true,\n+            statusBarStyle: 'dark'}}>\n+            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n+          </Stack.Navigator>\n+                </NavigationContainer> \n+                */}\n+          {/*   \n+          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n+            <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n+            <Drawer.Screen name=\"populate\" component={populate} />\n+            <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n+          </Drawer.Navigator> */}\n           <NavigationContainer>\n-\n-            <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n+            <Drawer.Navigator initialRouteName=\"populate\">\n               <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n               <Drawer.Screen name=\"populate\" component={populate} />\n               <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n             </Drawer.Navigator>\n-            {/* <DrawerMenu/> */}\n+          </NavigationContainer>\n+          {/* <DrawerMenu/> */}\n \n-          </NavigationContainer>\n+\n         </Provider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n"
                },
                {
                    "date": 1708513495857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,16 +84,18 @@\n             <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n             <Drawer.Screen name=\"populate\" component={populate} />\n             <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n           </Drawer.Navigator> */}\n-          <NavigationContainer>\n-            <Drawer.Navigator initialRouteName=\"populate\">\n+        \n+            {/* <Drawer.Navigator initialRouteName=\"populate\">\n               <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n               <Drawer.Screen name=\"populate\" component={populate} />\n               <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-            </Drawer.Navigator>\n-          </NavigationContainer>\n-          {/* <DrawerMenu/> */}\n+            </Drawer.Navigator> */}\n+          \n+           <NavigationContainer> \n+            <DrawerMenu/>\n+           </NavigationContainer>\n \n \n         </Provider>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1708513516523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n \n const Stack = createStackNavigator();\n-const Drawer = createDrawerNavigator();\n \n // Create a query client\n const queryClient = new QueryClient();\n \n"
                },
                {
                    "date": 1708513564102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import 'react-native-gesture-handler';\n import { ThemeProvider, createTheme } from \"@rneui/themed\";\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n-import { createDrawerNavigator } from '@react-navigation/drawer';\n \n \n import { StyleSheet, Text, View } from \"react-native\";\n \n@@ -77,21 +76,9 @@\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n                 </NavigationContainer> \n                 */}\n-          {/*   \n-          <Drawer.Navigator initialRouteName=\"populate\"> // Use the drawer navigator instead of the stack navigator\n-            <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n-            <Drawer.Screen name=\"populate\" component={populate} />\n-            <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-          </Drawer.Navigator> */}\n-        \n-            {/* <Drawer.Navigator initialRouteName=\"populate\">\n-              <Drawer.Screen name=\"incredibles\" component={Incredibles} />\n-              <Drawer.Screen name=\"populate\" component={populate} />\n-              <Drawer.Screen name=\"EyeProductComponent\" component={EyeProductComponent} />\n-            </Drawer.Navigator> */}\n-          \n+\n            <NavigationContainer> \n             <DrawerMenu/>\n            </NavigationContainer>\n \n"
                },
                {
                    "date": 1708513586685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,8 @@\n   QueryClientProvider,\n } from \"@tanstack/react-query\";\n import { Provider } from \"react-redux\";\n \n-import populate from \"./components/populate\";\n-import Orderitem from \"./components/Orderitem\";\n-import Incredibles from \"./components/Incredibles\";\n-import Comments from \"./components/Comments\";\n-\n-import IncrediblesWithOtherSellers from \"./components/IncrediblesWithOtherSellers\";\n-import EyeProductComponent from \"./components/forms/EyeProduct\";\n-\n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n \n const Stack = createStackNavigator();\n@@ -77,11 +69,11 @@\n           </Stack.Navigator>\n                 </NavigationContainer> \n                 */}\n \n-           <NavigationContainer> \n-            <DrawerMenu/>\n-           </NavigationContainer>\n+          <NavigationContainer>\n+            <DrawerMenu />\n+          </NavigationContainer>\n \n \n         </Provider>\n       </QueryClientProvider>\n"
                },
                {
                    "date": 1708513605691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,16 +8,14 @@\n \n import { StyleSheet, Text, View } from \"react-native\";\n \n \n-import populatetest from \"./components/populatetest\";\n \n-import {\n-  QueryClient,\n-  QueryClientProvider,\n-} from \"@tanstack/react-query\";\n+\n import { Provider } from \"react-redux\";\n+import {QueryClient, QueryClientProvider,} from \"@tanstack/react-query\";\n \n+\n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n \n const Stack = createStackNavigator();\n"
                },
                {
                    "date": 1708514186504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \n \n \n import { Provider } from \"react-redux\";\n-import {QueryClient, QueryClientProvider,} from \"@tanstack/react-query\";\n+import { QueryClient, QueryClientProvider, } from \"@tanstack/react-query\";\n \n \n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n@@ -50,8 +50,10 @@\n   const themeObj = createTheme({\n     myColors: light,\n   });\n \n+    // Call the ignoreLogs method to suppress the warning\n+    LogBox.ignoreLogs(['export \\'default\\' (imported as \\'Animated\\') was not found in \\'react-native-reanimated\\'']);\n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n"
                },
                {
                    "date": 1708514193151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { NavigationContainer } from \"@react-navigation/native\";\n import { createStackNavigator } from \"@react-navigation/stack\";\n \n \n-import { StyleSheet, Text, View } from \"react-native\";\n+import { LogBox, StyleSheet, Text, View } from \"react-native\";\n \n \n \n \n"
                },
                {
                    "date": 1708755422040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,25 +57,11 @@\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <QueryClientProvider client={queryClient}>\n         <Provider store={store}>\n-          {/* <NavigationContainer>\n-           <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n-            animation: 'slide_from_right',\n-            gestureEnabled: true,\n-            statusBarStyle: 'dark'}}>\n-            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n-            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n-          </Stack.Navigator>\n-                </NavigationContainer> \n-                */}\n-\n           <NavigationContainer>\n             <DrawerMenu />\n           </NavigationContainer>\n-\n-\n         </Provider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n"
                },
                {
                    "date": 1708756974354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \n \n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n+import { TokenProvider } from './auth/components/TokenProvider';\n \n const Stack = createStackNavigator();\n \n // Create a query client\n@@ -55,14 +56,16 @@\n     LogBox.ignoreLogs(['export \\'default\\' (imported as \\'Animated\\') was not found in \\'react-native-reanimated\\'']);\n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n+      <TokenProvider>\n       <QueryClientProvider client={queryClient}>\n         <Provider store={store}>\n           <NavigationContainer>\n             <DrawerMenu />\n           </NavigationContainer>\n         </Provider>\n+        </TokenProvider>\n       </QueryClientProvider>\n \n     </ThemeProvider>\n   );\n"
                },
                {
                    "date": 1708756986490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,22 +51,22 @@\n   const themeObj = createTheme({\n     myColors: light,\n   });\n \n-    // Call the ignoreLogs method to suppress the warning\n-    LogBox.ignoreLogs(['export \\'default\\' (imported as \\'Animated\\') was not found in \\'react-native-reanimated\\'']);\n+  // Call the ignoreLogs method to suppress the warning\n+  LogBox.ignoreLogs(['export \\'default\\' (imported as \\'Animated\\') was not found in \\'react-native-reanimated\\'']);\n   return (\n     // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <TokenProvider>\n-      <QueryClientProvider client={queryClient}>\n-        <Provider store={store}>\n-          <NavigationContainer>\n-            <DrawerMenu />\n-          </NavigationContainer>\n-        </Provider>\n-        </TokenProvider>\n-      </QueryClientProvider>\n+        <QueryClientProvider client={queryClient}>\n+          <Provider store={store}>\n+            <NavigationContainer>\n+              <DrawerMenu />\n+            </NavigationContainer>\n+          </Provider>\n+        </QueryClientProvider>\n+      </TokenProvider>\n \n     </ThemeProvider>\n   );\n }\n"
                },
                {
                    "date": 1708763078525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,40 @@\n \n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n import { TokenProvider } from './auth/components/TokenProvider';\n+import useTokenStorage from './auth/components/hooks/useTokenStorage';\n \n const Stack = createStackNavigator();\n \n // Create a query client\n const queryClient = new QueryClient();\n+// configure the query client with default options\n+queryClient.setDefaultOptions({\n+  // set the default options for mutations\n+  mutations: {\n+    // set the default mutation function\n+    mutationFn: async (data) => {\n+      // get the token from the useTokenStorage hook\n+      const { getToken } = useTokenStorage();\n+      const token = await getToken();\n+      // define the url of your API endpoint\n+      const url = 'http://localhost:3222/';\n+      // define the options for the fetch request\n+      const options = {\n+        method: 'POST',\n+        body: JSON.stringify(data),\n+        // set the headers with the token\n+        headers: {\n+          'Content-Type': 'application/json',\n+          Authorization: `Bearer ${token}`,\n+        },\n+      };\n+      // return the fetch request\n+      return fetch(url, options).then((res) => res.json());\n+    },\n+  },\n+});\n \n \n export default function App() {\n \n"
                },
                {
                    "date": 1708763366768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,19 @@\n     <ThemeProvider theme={themeObj}>\n       <TokenProvider>\n         <QueryClientProvider client={queryClient}>\n           <Provider store={store}>\n+               {/* <NavigationContainer>\n+           <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n+            animation: 'slide_from_right',\n+            gestureEnabled: true,\n+            statusBarStyle: 'dark'}}>\n+            <Stack.Screen name=\"incredibles\" component={Incredibles} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"populate\" component={populate} options={{ headerShown: false }} />\n+            <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n+          </Stack.Navigator>\n+                </NavigationContainer> \n+                */}\n             <NavigationContainer>\n               <DrawerMenu />\n             </NavigationContainer>\n           </Provider>\n"
                },
                {
                    "date": 1711280617630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n import { store } from \"./components/reduxApi/store2\";\n import DrawerMenu from \"./DrawerMenu\";\n import { TokenProvider } from './auth/components/TokenProvider';\n import useTokenStorage from './auth/components/hooks/useTokenStorage';\n+import { IoProvider } from 'socket.io-react-hook';\n \n const Stack = createStackNavigator();\n \n // Create a query client\n@@ -81,13 +82,13 @@\n \n   // Call the ignoreLogs method to suppress the warning\n   LogBox.ignoreLogs(['export \\'default\\' (imported as \\'Animated\\') was not found in \\'react-native-reanimated\\'']);\n   return (\n-    // Use the ThemeProvider component to wrap your app and pass the theme object\n     <ThemeProvider theme={themeObj}>\n       <TokenProvider>\n         <QueryClientProvider client={queryClient}>\n           <Provider store={store}>\n+          {/* <IoProvider> */}\n                {/* <NavigationContainer>\n            <Stack.Navigator  headerMode=\"none\" initialRouteName=\"populate\" screenOptions={{\n             animation: 'slide_from_right',\n             gestureEnabled: true,\n@@ -97,11 +98,13 @@\n             <Stack.Screen name=\"EyeProductComponent\" component={EyeProductComponent} options={{ headerShown: false }} />\n           </Stack.Navigator>\n                 </NavigationContainer> \n                 */}\n+              \n             <NavigationContainer>\n               <DrawerMenu />\n             </NavigationContainer>\n+              {/* </IoProvider> */}\n           </Provider>\n         </QueryClientProvider>\n       </TokenProvider>\n \n"
                },
                {
                    "date": 1711281212975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,8 @@\n               {/* </IoProvider> */}\n           </Provider>\n         </QueryClientProvider>\n       </TokenProvider>\n-\n     </ThemeProvider>\n   );\n }\n \n"
                }
            ],
            "date": 1704275601396,
            "name": "Commit-0",
            "content": "import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n    <Stack.Navigator>\n      <Stack.Screen name=\"ihamechidun\" component={ihamechidun} />\n    </Stack.Navigator>\n  </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"
        }
    ]
}